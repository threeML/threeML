name: Test clean install

on:
  schedule:
    - cron: "0 20 * * *"

jobs:
  test-install-direct:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: XCode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest
      if: runner.os == 'macOS'
    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base wheel
      run: |
        python -m pip install --upgrade pip wheel
        if [[ ${{matrix.os}} == macos-latest ]];
        then
          brew update
          brew install hdf5
          # This installation of numpy is currently needed to avoid an issue
          # while running pip install of astromodels
          pip install numpy
        fi
        python -m pip install astromodels

    - name: Install 3ML
      run: |
        python setup.py install

  test-install-pip:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}
    steps:
    - name: XCode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest
      if: runner.os == 'macOS'
    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base wheel
      run: |
        python -m pip install --upgrade pip wheel
        if [[ ${{matrix.os}} == macos-latest ]];
        then
          brew update
          brew install hdf5
          # This installation of numpy is currently needed to avoid an issue
          # while running pip install of astromodels
          pip install numpy 
        fi
        python -m pip install astromodels

    - name: Install 3ML
      run: |
        pip install threeML

  test-install-conda:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "macos-12"]
        python-version: [3.9]
    runs-on: ${{ matrix.os }}
    steps:
    - name: XCode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest
      if: runner.os == 'macOS'
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: "test_env"
        auto-activate-base: false
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        channels:  threeml, xspecmodels, fermi, conda-forge
    - name: Install packages
      run: |
        mamba activate test_env
        mamba install threeML astromodels xspec-modelsonly fermitools #fermipy
    - name: Test threeML and astromodels
      run: |
        pytest -vv --pyargs astromodels
        pytest -vv --pyargs threeML
      env:
        OMP_NUM_THREADS: 1
        MKL_NUM_THREADS: 1
        NUMEXPR_NUM_THREADS: 1
        MPLBACKEND: "Agg"

  test-install-conda-dev:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "macos-12"]
        python-version: [3.9]
    runs-on: ${{ matrix.os }}
    steps:
    - name: XCode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest
      if: runner.os == 'macOS'
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: "test_env"
        auto-activate-base: false
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python-version }}
        auto-update-conda: true
        channels:  threeml/label/dev, xspecmodels, fermi, conda-forge
    - name: Install packages
      run: |
        mamba activate test_env
        mamba install threeML astromodels xspec-modelsonly fermitools #fermipy
    - name: Test threeML and astromodels
      run: |
        pytest -vv --pyargs astromodels
        pytest -vv --pyargs threeML
      env:
        OMP_NUM_THREADS: 1
        MKL_NUM_THREADS: 1
        NUMEXPR_NUM_THREADS: 1
        MPLBACKEND: "Agg"