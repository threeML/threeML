{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6682682f",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "# Installation\n",
    "3ML brings together multiple instrument and fitting software packages into a\n",
    "common framework. Thus, installing all the pieces can be a bit of a task for the\n",
    "user. In order to make this a less painless process, we have packaged most of\n",
    "the external dependencies into conda (see below). However, if you want more\n",
    "control over your install, 3ML is available on PyPI via pip. If you have issues\n",
    "with the installs, first check that you have properly installed all the external\n",
    "dependencies that *you* plan on using. Are their libraries accessible on you\n",
    "system's standard paths? If you think that you have everything setup properly\n",
    "and the install does not work for you, please [submit an\n",
    "issue](https://github.com/threeML/threeML/issues) and we will do our best to\n",
    "find a solution.\n",
    "\n",
    "\n",
    "## XSPEC models\n",
    "We allow the ability to use the models provided by [XSPEC]() natively in\n",
    "3ML. However, before installing [astromodels]() or 3ML, you must already have\n",
    "XSPEC installed by one of a few methods.\n",
    "\n",
    "### HEASARC install\n",
    "If you have XSPEC installed on your computer via the source code, then before\n",
    "installing astromodels, make sure to `init` your HEASARC environment. Upon\n",
    "installing `astromodels`, the process will attempt to find the proper libraries\n",
    "on your system if it detects XSPEC and compile the proper extensions. If you\n",
    "have installed your XSPEC in a non-standard directory (e.g. your home\n",
    "directory), the process my not find all the libraries. You can thus export an\n",
    "env variable that provides the explicit path to your XSPEC headers:\n",
    "\n",
    "```bash\n",
    "\n",
    "export XSPEC_INC_PATH=/path/to/xspec/headers\n",
    "\n",
    "```\n",
    "\n",
    "As XSPEC evolves, various models have different interfaces that depend on the\n",
    "version. To accommodate this, you need to set the version of XSPEC you are using\n",
    "with another env variable, e.g.:\n",
    "\n",
    "```bash\n",
    "\n",
    "export ASTRO_XSPEC_VERSION='12.12.1'\n",
    "\n",
    "```\n",
    "\n",
    "\n",
    "### xspec-modelsonly\n",
    "\n",
    "I{f using conda, it is possible to get access to XSPEC models without having to\n",
    "install HEASOFT. We thus recommend the following command to create your new\n",
    "conda environment:\n",
    "\n",
    "```bash\n",
    "\n",
    "conda create --name threeml -c conda-forge -c xspecmodels python=3.9 xspec-modelsonly numpy scipy matplotlib\n",
    "```\n",
    "\n",
    "This must be done *before* installing `astromodels`.\n",
    "\n",
    "\n",
    "## Conda installation\n",
    "\n",
    "[Conda](https://conda.io/docs/) is a platform independent package manager. It\n",
    "allows to install 3ML (and a lot of other software) without the need to compile\n",
    "anything, and in a completely separate environment from your system and your\n",
    "system python.\n",
    "\n",
    "### If you don't know Conda\n",
    "\n",
    "If you are not familiar with conda, install 3ML with the automatic script which\n",
    "will take care of everything:\n",
    "\n",
    "1. Download the script from\n",
    "   [here](https://raw.githubusercontent.com/threeML/threeML/master/install_3ML.sh)\n",
    "2. Run the script with `bash install_3ML.sh`. If you plan to use XSPEC models\n",
    "   use `bash install_3ML.sh --with-xspec`.\n",
    "3. The script will install 3ML and then create a `threeML_init.sh` script and a\n",
    "`threeML_init.csh` script. Source the former if you are using Bash (`source\n",
    "threeML_init.sh`) and the second one if you are using Csh/Tcsh (`source\n",
    "threeML_init.csh`).\n",
    "\n",
    "### If you already know Conda\n",
    "\n",
    "If you are familiar with Conda and you already have it installed, you can\n",
    "install 3ML by creating an environment with (*note the exceptions above\n",
    "w.r.t. to include XSPEC support*):\n",
    "\n",
    "```bash\n",
    "conda create --name threeML -c conda-forge python=3.9 numpy scipy matplotlib\n",
    "```\n",
    "\n",
    "then activating your environment:\n",
    "\n",
    "```bash\n",
    "conda activate threeML\n",
    "\n",
    "```\n",
    "\n",
    "*NOTE:* Recently a third party has uploaded a version of `astromodels` to the\n",
    "conda-forge channel. This version will break support for XSPEC currently if you\n",
    "used the xspec-modelsonly package. It is important to set your conda channel\n",
    "priority so that the threeml channel has priority over the conda-forge\n",
    "channel. Please verify that the `astromodels` installed comes from our threeml\n",
    "channel. We are working to resolve this hassle and we apologize to our users.\n",
    "\n",
    "\n",
    "\n",
    "```bash\n",
    "conda install -c conda-forge -c threeml astromodels threeml\n",
    "\n",
    "```\n",
    "\n",
    "\n",
    "## pip\n",
    "\n",
    "If you would like to install 3ML and astromodels on their own and have more\n",
    "control over which dependencies you would like to use. Please to the following\n",
    "\n",
    "1. It is highly recommended you work within a python virtual environment to keep\n",
    "   you base python clean\n",
    "2. install astromodels\n",
    "\n",
    "```bash\n",
    "pip install astromodels\n",
    "```\n",
    "\n",
    "3. install 3ML\n",
    "\n",
    "```bash\n",
    "pip install threeml\n",
    "```\n",
    "\n",
    "If you need to build other dependencies such as pagmo, multinest, XSPEC, etc.,\n",
    "it is recommended you do this **before** installing astromodels!\n",
    "\n",
    "## Docker\n",
    "\n",
    "A docker with the complete 3ML environment and all dependencies can be installed\n",
    "with\n",
    "\n",
    "```bash\n",
    "docker pull threeml/notebook:latest\n",
    "```\n",
    "\n",
    "which will install a docker that can be launched with\n",
    "\n",
    "```bash\n",
    "docker run -it --rm -p 8888:8888 -v $PWD:/workdir -w /workdir threeml/notebook\n",
    "```\n",
    "\n",
    "which will launch a notebook server that can operate on the current\n",
    "directory. The notebooks and be accessed by typing `localhost:8888` in your\n",
    "browser.\n",
    "\n",
    "\n",
    "## Other dependencies\n",
    "\n",
    "You need to set up packages such as AERIE (for HAWC), or the Fermi Science\n",
    "Tools, before running the script, otherwise some of the functionalities will not\n",
    "work.\n",
    "\n",
    "* AERIE for HAWC: make sure that this works before running the script:\n",
    "\n",
    "    ```bash\n",
    "    > liff-PointSourceExpectation --version\n",
    "    INFO [CommandLineConfigurator.cc, ParseCommandLine:137]:\n",
    "\n",
    "     liff-PointSourceExpectation\n",
    "     Aerie version: 2.04.00\n",
    "     Build type: Debug\n",
    "\n",
    "    ``` If it doesn't, you need to set up the HAWC environment (refer to the\n",
    "    appropriate documentation)\n",
    "\n",
    "* Fermi Science Tools for Fermi/LAT analysis: make sure that this works: ```bash\n",
    "    > gtirfs ...  P8R2_TRANSIENT100_V6::EDISP0 P8R2_TRANSIENT100_V6::EDISP1 ...\n",
    "    ``` If it doesn't, you need to configure and set up the Fermi Science Tools.\n",
    "\n",
    "* ROOT: ROOT is not required by 3ML, but it provides the Minuit2 minimizer which can\n",
    "be used in 3ML. If you have ROOT, make sure that this works before running the script:\n",
    "    ```bash\n",
    "    > root-config --version\n",
    "    5.34/36\n",
    "    ```\n",
    "\n",
    "## Install from source (advanced)\n",
    "\n",
    "Remove any previous installation you might have with:\n",
    "\n",
    "```bash\n",
    "> pip uninstall threeML\n",
    "> pip uninstall astromodels\n",
    "> pip uninstall cthreeML\n",
    "```\n",
    "\n",
    "then:\n",
    "\n",
    "```bash\n",
    "> pip install numpy scipy ipython astropy numba cython\n",
    "> pip install git+https://github.com/threeML/threeml.git\n",
    "> pip install git+https://github.com/threeML/astromodels.git --upgrade\n",
    "```\n",
    "\n",
    "In order to use the HAWC plugin, you will also need to install cthreeML (run\n",
    "this *after* setting up the HAWC environment):\n",
    "\n",
    "```bash\n",
    "> pip install git+https://github.com/threeML/cthreeML.git\n",
    "```\n",
    "\n",
    "* NOTE: If you do not have permission to install packages in your current python\n",
    "environment, you can still install the packages by adding the ```--user```\n",
    "option at the end of each ```pip``` command.\n",
    "\n",
    "### Tips for Mac users\n",
    "The following paths need to be added to you DYLD_LIBRARY path if you have\n",
    "FORTRAN installed via these package managers:\n",
    "\n",
    "* Homebrew: ```DYLD_LIBRARY_PATH=/usr/local/lib/gcc/<version\n",
    "  number>:$DYLD_LIBRARY_PATH```\n",
    "\n",
    "* Fink: ```DYLD_LIBRARY_PATH=/sw/lib/gcc<version\n",
    "  number>/lib:$DYLD_LIBRARY_PATH```\n",
    "\n",
    "Please inform us if you have problems related to your FORTRAN distribution.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c630ae3d",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
