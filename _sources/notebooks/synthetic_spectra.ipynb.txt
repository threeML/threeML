{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c1dae403",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75a33933",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fb80735",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51747f4f",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5106ab66",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:11.031528Z",
     "iopub.status.busy": "2025-02-06T00:19:11.031329Z",
     "iopub.status.idle": "2025-02-06T00:19:11.037886Z",
     "shell.execute_reply": "2025-02-06T00:19:11.037273Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "48dc12a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:11.039905Z",
     "iopub.status.busy": "2025-02-06T00:19:11.039575Z",
     "iopub.status.idle": "2025-02-06T00:19:14.174644Z",
     "shell.execute_reply": "2025-02-06T00:19:14.173994Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:12 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#47\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">47</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:12\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=146046;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=135677;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#47\u001b\\\u001b[2m47\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#68\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">68</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=681692;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=524667;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#68\u001b\\\u001b[2m68\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:13 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:13\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=970651;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=273866;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b0eddec2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:14.177178Z",
     "iopub.status.busy": "2025-02-06T00:19:14.176658Z",
     "iopub.status.idle": "2025-02-06T00:19:14.208163Z",
     "shell.execute_reply": "2025-02-06T00:19:14.207449Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c8f45a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:14.210478Z",
     "iopub.status.busy": "2025-02-06T00:19:14.210110Z",
     "iopub.status.idle": "2025-02-06T00:19:16.746690Z",
     "shell.execute_reply": "2025-02-06T00:19:16.745988Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:14 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:14\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=465818;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=390335;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:16 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:16\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=98541;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=318890;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eff04c93",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2e288f4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:16.748820Z",
     "iopub.status.busy": "2025-02-06T00:19:16.748619Z",
     "iopub.status.idle": "2025-02-06T00:19:16.752010Z",
     "shell.execute_reply": "2025-02-06T00:19:16.751498Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c089aa7f",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f1a14da0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:16.753807Z",
     "iopub.status.busy": "2025-02-06T00:19:16.753621Z",
     "iopub.status.idle": "2025-02-06T00:19:16.756617Z",
     "shell.execute_reply": "2025-02-06T00:19:16.756122Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61d6bc27",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "62abcc69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:16.758394Z",
     "iopub.status.busy": "2025-02-06T00:19:16.758209Z",
     "iopub.status.idle": "2025-02-06T00:19:17.411103Z",
     "shell.execute_reply": "2025-02-06T00:19:17.410468Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=161919;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=371866;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=20470;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=390469;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=186107;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=847877;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=525106;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=473226;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=187571;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=203927;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=618190;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=627629;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65622b1c",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5f74602f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:17.413071Z",
     "iopub.status.busy": "2025-02-06T00:19:17.412857Z",
     "iopub.status.idle": "2025-02-06T00:19:18.079126Z",
     "shell.execute_reply": "2025-02-06T00:19:18.078498Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:17 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:17\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=267680;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=670613;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=821411;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=375017;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=878037;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=420611;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=671225;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=211924;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=867342;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=395613;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=947470;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=326797;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "483f380c",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "edf0696f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:18.081096Z",
     "iopub.status.busy": "2025-02-06T00:19:18.080879Z",
     "iopub.status.idle": "2025-02-06T00:19:19.047409Z",
     "shell.execute_reply": "2025-02-06T00:19:19.046783Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:18 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:18\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=553248;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=128278;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=315495;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=817281;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=694987;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=278540;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=376185;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=907156;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=170943;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=610462;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=68510;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=82338;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=86997;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=793347;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=114909;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=933779;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=922216;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=480293;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=855798;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=129302;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=806299;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=67597;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=551413;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=155789;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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L2td0tukSRM98cQT+tOf/qS3335bhmHonnvukST96U9/0r333qvHHntM77zzjs477zzFxcXpyJEj2rlzp06cOCGPx1PtnomJiRo8eLA+/PBD5eXlqV+/fkpJSQlag2EY2rp1q84999wqOwwDACIDQRQAEPUqjm8J5vrrr693EG3evLlefvllLVmyRB9//LE8Ho/Ky8vVunVrde7cWbfeemvATYaCGTVqlJo1a6bXX39dq1atUmJioi677DLddddduv7669W+ffuAr0tMTNTAgQO1evXq054NlaR27dqpb9++Wrt2raZNm1brMS4VYfTRRx/VO++8I8MwNG3aNJ111lmaP3++3nrrLW3YsEErV65UTEyMkpOT1bNnTw0ZMiToPUeOHKkPP/xQknT11VfXOP7//M//KCcnR1OnTj3t9woAsJ/DCLSOCAAAhJWDBw/q5ptv1tChQ/XYY48F7HPrrbfq8OHDWrJkSdCdf2uydetW3XffffrDH/6gK6+8sqElh9QTTzyhLVu26I033gh6vAsAIHzxjCgAAGGkoKCg2jEqXq+3cmOggQMHBnzdZ599pn379sntdtcrhEpSnz591K9fP7322mtVjqkJNwcOHNDHH3+s3/72t4RQAIhQLM0FACCMbNu2TX/+85/Vt29fnXHGGTpx4oS++uorHT58WBdddJGGDRtWpf97772nI0eO6P3335fL5dItt9zSoPHvueceffTRR8rNza3xGU07HTlyROPHj9e1115rdykAgHpiaS4AAGHkwIEDmj9/vnbu3Km8vDxJUvv27TVs2DDddNNN1Z5lveGGG5Sbm6vU1FTddddd6t+/vw1VAwBwegiiAAAAAABL8YwoAAAAAMBSBFEAAAAAgKUIogAAAAAASxFEAQAAAACWIogCAAAAACxFEAUAAAAAWIogCgAAAACwFEEUAAAAAGApgigAAAAAwFL/H/0c6ImIq/A/AAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8914ba3f",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c83ce622",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:19.049355Z",
     "iopub.status.busy": "2025-02-06T00:19:19.049159Z",
     "iopub.status.idle": "2025-02-06T00:19:19.756736Z",
     "shell.execute_reply": "2025-02-06T00:19:19.756059Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:19 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:19\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=278308;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=620491;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=180363;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=228837;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=107654;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=662833;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=72086;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=746534;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=869321;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=884505;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=202722;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=723249;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=809335;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=94631;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=116466;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=475125;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=897321;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=877410;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=33506;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=547546;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=171304;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=696897;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=758829;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=263271;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a79d0d76",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "abe59cd6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:19.758835Z",
     "iopub.status.busy": "2025-02-06T00:19:19.758484Z",
     "iopub.status.idle": "2025-02-06T00:19:19.775859Z",
     "shell.execute_reply": "2025-02-06T00:19:19.775355Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "60248442",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:19.777757Z",
     "iopub.status.busy": "2025-02-06T00:19:19.777567Z",
     "iopub.status.idle": "2025-02-06T00:19:19.820336Z",
     "shell.execute_reply": "2025-02-06T00:19:19.819782Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=191717;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=292080;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=898246;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=55816;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=316237;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=749119;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=96630;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=667491;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=153319;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=492108;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=582850;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=605390;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=916237;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=814160;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=351605;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=757434;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=125920;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=738358;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=165680;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=477359;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=230377;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=539156;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=287082;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=830893;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "cda7a05e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:19.822532Z",
     "iopub.status.busy": "2025-02-06T00:19:19.822053Z",
     "iopub.status.idle": "2025-02-06T00:19:20.534586Z",
     "shell.execute_reply": "2025-02-06T00:19:20.533798Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d5ae757",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11e85365",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fd1e0bda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:20.537116Z",
     "iopub.status.busy": "2025-02-06T00:19:20.536668Z",
     "iopub.status.idle": "2025-02-06T00:19:21.520110Z",
     "shell.execute_reply": "2025-02-06T00:19:21.519476Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:20 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:20\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=11682;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=659771;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=611004;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=385997;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=524364;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=373746;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139896260678896\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ad4071b",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9b167e8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:21.522247Z",
     "iopub.status.busy": "2025-02-06T00:19:21.521842Z",
     "iopub.status.idle": "2025-02-06T00:19:21.927114Z",
     "shell.execute_reply": "2025-02-06T00:19:21.926404Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:21 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:21\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=900206;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=218525;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a29fc14",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a5973082",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:21.929318Z",
     "iopub.status.busy": "2025-02-06T00:19:21.929096Z",
     "iopub.status.idle": "2025-02-06T00:19:22.467466Z",
     "shell.execute_reply": "2025-02-06T00:19:22.466832Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=357957;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=895625;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=199977;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=660899;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=78796;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=116030;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "903bcf95",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c55e50cf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-06T00:19:22.469662Z",
     "iopub.status.busy": "2025-02-06T00:19:22.469264Z",
     "iopub.status.idle": "2025-02-06T00:19:23.352277Z",
     "shell.execute_reply": "2025-02-06T00:19:23.351548Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">00:19:22 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m00:19:22\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=222708;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=483047;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=429890;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=554460;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=250096;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=816110;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
