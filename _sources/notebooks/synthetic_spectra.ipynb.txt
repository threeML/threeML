{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a778e1d4",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64c0448b",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26f9a3b2",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5188bf01",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "20680323",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:25.917446Z",
     "iopub.status.busy": "2024-09-11T21:03:25.917243Z",
     "iopub.status.idle": "2024-09-11T21:03:25.923803Z",
     "shell.execute_reply": "2024-09-11T21:03:25.923254Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c99b36da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:25.925980Z",
     "iopub.status.busy": "2024-09-11T21:03:25.925788Z",
     "iopub.status.idle": "2024-09-11T21:03:29.087778Z",
     "shell.execute_reply": "2024-09-11T21:03:29.087068Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:27 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:27\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=246972;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=716604;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=119020;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=398481;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:28 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:28\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=316570;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=620517;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "17f0658c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:29.090704Z",
     "iopub.status.busy": "2024-09-11T21:03:29.090127Z",
     "iopub.status.idle": "2024-09-11T21:03:29.122881Z",
     "shell.execute_reply": "2024-09-11T21:03:29.122300Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d21eda58",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:29.125399Z",
     "iopub.status.busy": "2024-09-11T21:03:29.125150Z",
     "iopub.status.idle": "2024-09-11T21:03:31.794463Z",
     "shell.execute_reply": "2024-09-11T21:03:31.793774Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:29 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:29\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=274590;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=163125;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:31 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:31\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=890449;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=686402;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7883108f",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "6eab8704",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:31.797156Z",
     "iopub.status.busy": "2024-09-11T21:03:31.796749Z",
     "iopub.status.idle": "2024-09-11T21:03:31.800392Z",
     "shell.execute_reply": "2024-09-11T21:03:31.799765Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c59945ec",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a1f1a3dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:31.802635Z",
     "iopub.status.busy": "2024-09-11T21:03:31.802278Z",
     "iopub.status.idle": "2024-09-11T21:03:31.805688Z",
     "shell.execute_reply": "2024-09-11T21:03:31.805060Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06877361",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0e32d966",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:31.808031Z",
     "iopub.status.busy": "2024-09-11T21:03:31.807634Z",
     "iopub.status.idle": "2024-09-11T21:03:32.320663Z",
     "shell.execute_reply": "2024-09-11T21:03:32.319920Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=632797;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=431905;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=786704;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=591966;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=405877;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=115641;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=792367;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=323984;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=168733;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=218309;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=588475;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=459966;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e1f971d",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e03696cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:32.323210Z",
     "iopub.status.busy": "2024-09-11T21:03:32.322771Z",
     "iopub.status.idle": "2024-09-11T21:03:32.991535Z",
     "shell.execute_reply": "2024-09-11T21:03:32.990750Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:32 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:32\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=575278;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=784175;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=389530;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=814941;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=527282;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=452174;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=44119;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=804635;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=447828;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=597961;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=866729;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=426591;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b863ae00",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "afa9326a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:32.993857Z",
     "iopub.status.busy": "2024-09-11T21:03:32.993636Z",
     "iopub.status.idle": "2024-09-11T21:03:33.935736Z",
     "shell.execute_reply": "2024-09-11T21:03:33.934958Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=39972;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=379283;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=928740;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=362303;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:33 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:33\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=651666;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=900010;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=537633;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=406160;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=903473;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=267077;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=330000;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=751170;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=658215;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=368789;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=406952;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=280887;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=221371;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=446278;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=694017;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=502972;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=351583;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=463857;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=13014;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=426300;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA5kAAAMSCAYAAADgIQA9AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAABmkklEQVR4nO3de3hU1d328XtPQk4TjgEjYjQCAmKRICoVISKOykEO1qKifSoe4hFEUVFpraiIFu1bMZ6qRaj2atUKiiggDhpAQVSUBxAIqICAJQQkkAOZITP7/YOSypOZJCRrsmeS7+e6uEr2WrPXb1JhuLPWXsuybdsWAAAAAAAGuJwuAAAAAADQeBAyAQAAAADGEDIBAAAAAMYQMgEAAAAAxhAyAQAAAADGEDIBAAAAAMYQMgEAAAAAxhAyAQAAAADGEDIbQHl5ufLz81VeXu50KQAAAAAQUYTMBrBt2zbl5ORo27ZtTpfSqE1bs8TpEgAAAIAmj5AJAAAAADAm3ukCGiuv1yuv1ytJKikpcbgaAAAAAGgYhMwI8Xg88ng8kqT8/Hzl5OQ4XBEAAAAARB4hEwAAAHCQbduqqKhQIBBwuhQ0EnFxcYqPj5dlWY6MzzOZAAAAgENs29b+/fvl8/mcLgWNiM/n0/79+2XbtiPjM5MJAAAAOKSiokLx8fFKTU11uhQ0MiUlJaqoqFCzZs0afGxmMgEAAACHBAIBxccz7wPz4uPjHVuCTcgEAAAAABhDyAQAAAAAGMPcPAAAAABJ0ogRIyRJhw4d0pYtW9SlSxdJ0imnnKKnn366Sv8NGzbo+++/19ChQ2u8944dOzRy5Eh9+eWXRmtG9CFkAgAAAJAkzZ07V9J/A+GRr8PZsGGDvF5vrUImmg5CJgAAABAFbNuWr8wf0TESUxLqdHbiO++8oxkzZkiS2rdvr0cffVTx8fF65plnVFxcrBEjRqhnz5565JFHdPfdd2vLli06dOiQ2rdvr8cee0zt2rUz/VYQxQiZAAAAQBTwlfk1utWkiI7xz6KpSnInHtNrNm3apCeffFJz5sxRenq6XnjhBf3ud7/TX//6V91xxx3yer16/vnnK/v/7ne/U5s2bSRJL730knJzc/XII48YfR+IboRMAAAAAGGtXLlS/fv3V3p6uiTp6quv1nPPPRf2eIx58+Zp7ty58vv98vl8at26dUOWiyhAyAQAAACiQGJKgv5ZNDXiY9RXdcttv/zyS7322mt64403lJaWpsWLF+uZZ56p95iILYRMAAAAIApYlnXMS1kbQp8+ffTiiy+qoKBA6enpev3113XuuecqLi5OqampKi4urux74MABud1utWrVSn6/X2+88YaDlcMphEwAAAAAYXXp0kX33nuvbrzxRkmHN/6ZMmWKJOncc8/VK6+8omHDhqlXr1568MEH9e6772rQoEFq1aqV+vbtq4KCAifLhwMs27Ztp4to7PLz85WTk6OXX35ZXbt2dbqcqDVv+lING59d59dPW7NEE88432BFAAAAkVVeXi5JSkpKcrgSNDZO/rflavARgTDm5S51ugQAAAAA9UTIBAAAAAAYQ8gEAAAAABjDxj8R4vV65fV6JUklJSUOVwMAAAAADYOQGSEej0cej0fSfzf+AQAAAIDGjuWyAAAAAABjCJkAAAAAAGMImQAAAAAqLVq0SL/61a80YsQIDRo0SL/97W8VDAbrfL+BAwdqw4YNx/y6X/3qV1q5cmWN/e6//371799fI0aM0LBhw3TNNdfou+++q0upkqQdO3borLPOqvPrG1Jpaam6du3qdBlV8EwmAAAAAEnS7t279eCDD2rOnDnq0KGDJOmbb76RZVkOV1a9G264QWPGjJEkvfTSS5o+fbqeeeYZx+o5EspdrqY5p0fIBAAAAKLEm9+vUVnFoYjdPyW+ma7oeEbY9r179youLk4tW7asvHb66adX/v67777T1KlTtXv3bknS1VdfrdGjR2vmzJl67733VFFRofj4eP3+979Xr169qty/sLBQU6ZM0c6dO+Xz+TRw4EDdddddkqSvvvpKDz/8sAKBgHr06KFAIHDM78+2bZWUlFTWX1FRoZtvvln79u2Tz+dTt27d9OijjyolJUWSNHv2bL366quybVvx8fFVgqnf79ekSZOUkpKihx56SHv37tX999+vXbt26fjjj1fLli3VsWNHjRs3Trm5udq0aZPKysr073//WzNnztSKFSs0Y8YMSVL79u316KOPKj09XXPmzJHX69Xzzz8vSfr444/1yiuv6LXXXtPKlSv16KOP6qyzztJXX32lQCCgJ554Qj169JAkvf7663rllVeUkpKiiy666Ji/Rw2BkAkAAABEibKKQyqt8Ds2fteuXdW7d28NHDhQZ599tnr16qVhw4YpPT1dFRUVuu222zRu3DhdeumlkqSffvpJkjRixAhdd911kqTVq1fr/vvv18KFC6vc//7779fNN9+sc845pzIALliwQBdeeKHuuusuPf744+rbt68++eQTzZkzp9Z1z5gxQ2+//bZ++uknxcXF6e9//7skKS4uTk899ZRat24t27Y1efJk/f3vf9dNN92klStX6rnnntPrr7+u4447TgcPHpR0OGhL0oEDBzR27Fj17dtXt9xyiyRpypQpysrK0h133KHCwkKNHDlSHTt2rKzj66+/1jvvvKO2bdtq06ZNevLJJzVnzhylp6frhRde0O9+9zv99a9/rfH9fP/993rsscc0efJk/fOf/9TTTz+tGTNmaNOmTcrNzdXbb7+t4447Tv/v//2/Wn+PGhIhEwAAAIgSKfHNHL2/y+VSbm6uvvvuO33xxRdaunSpXnzxRc2ePVt+v18+n68yYEpSmzZtJEnr16/Xiy++qKKiIsXFxWnLli0qLy9XUlJSZd+ysjKtWLFCe/bsOerali1b9P333ysuLk59+/aVJPXr108ZGRm1fl8/Xy47e/Zs3XHHHZozZ45s29asWbO0ZMkSBQIBFRcXV86w5uXlacSIETruuOMkScnJyZX3O3TokEaPHq2cnByNHDmy8vpnn32m++67T5LUrl07DRgw4Kg6zj//fLVt21aStHLlSvXv31/p6emSDs/6Pvfcc7WaoT3ppJPUs2dPSVKvXr30yiuvVI6fnZ1dWfPo0aP1l7/8pdbfp4ZCyERM+PbAXq0s3K5D1fyhLDnk16xNq8K2N4uLU592GercIi0SJQIAANRbdUtZG1KnTp3UqVMnXXXVVbrhhhv00UcfqV+/fiH7+v1+jRs3Tn/72990xhlnqKSkRL1795bf7z8qZNq2LUl68803lZiYeNQ9Nm7cWOW+dX0OdMiQIZo0aZJ++uknLVu2TCtXrtTf//53paam6tVXX9Vnn31W4z3i4+PVu3dvffTRRxo6dKiaNQsdzv9vjUeW4dbUNy4u7qjNlHw+31F9f/79cblcYYNptD4r2zSfREXMWVm4XUW+gyqt8If9Zcuutr3Id1ArC7c7/VYAAACiVkFBgVat+u8P7ffv368dO3YoIyNDp5xyipKSkvTee+9Vtv/000/y+/06dOiQTjjhBEnSa6+9FvLebrdbffr00UsvvXTUeLt27VLH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YGX/9d5772nAgAH67rvvnC4FAFBHhEwAQEz697//rezs7Gp/XXHFFU6XGTWKi4v16quvasiQIWrfvn1Ex/r888+VnZ2tu+++u8a+jzzyiLKzs/Xhhx9KkgYNGqT09HS98MILEa0RABA58U4XAABAfXTo0EEXXXRRyLbU1NQGriZ6vfnmmzpw4IBGjx4d8bHOOusspaena9WqVSooKFB6enrIfiUlJVq2bJlSU1OVnZ0tSYqPj9cVV1yh6dOna+3aterRo0fE6wUAmEXIBADEtA4dOuj66693uoyoVlFRoffee089evRQhw4dIj6ey+XS4MGDNWvWLC1cuFDXXnttyH5er1c+n09DhgxRYmJi5fULL7xQzz77rObOnUvIBIAYxHJZAECTkZ2drTvuuEM//fSTHnvsMQ0bNkwej0e33HKLvv7665CvKSsr0yuvvKLf/va38ng8GjJkiO6++26tWbOmSt877rhD2dnZ8vl8evnll3XVVVfpggsu0CuvvFLZZ8mSJcrJyZHH49GIESM0bdo0FRcX64orrjhqee+jjz6q7OxsrV+/PmRdM2bMUHZ2trxeb43v+/PPP9fevXs1YMCAGvsesXv3bl177bXyeDzKy8urvL5v3z7l5uZq9OjRuvDCCzVs2DD9/ve/1/fff3/U64cMGSLLsrRgwQLZth1yjPnz50uShg4detT1Vq1aqVevXsrLy1NZWVmtawYARAdCJgCgSSkpKdHtt9+urVu36uKLL1Z2drby8/N1zz33VAlKBw4c0K233qpZs2apefPmGjFihLKzs7Vp0yaNHz9ey5YtCznGgw8+qIULF6pXr1769a9/XfkM5Pvvv68HH3xQO3bs0CWXXKJBgwbpm2++0YQJE1RRUXHUPYYPH175mv8rEAho/vz5atmyZeUy0+qsWrVKknT66afX/A2StHXrVt12223avXu3nnzyycpwunPnTt14443617/+pRNOOEG/+tWv9Mtf/lKff/65br311qMC8fHHH6/evXvrxx9/DBngv//+e23cuFGnnnqqunTpUqX99NNPl9/v17p162pVMwAgerBcFgAQ03bu3HnUTOHPnX766erTp89R17799luNHDlSd955p1yuwz9rPfPMMzVt2jTNmTNH99xzT2Xfp59+Wlu2bNHEiRN16aWXVl7ft2+fcnJy9OSTT+qcc845aqmnJO3du1czZ85UixYtKq8VFxfrmWeeUXJysl566SVlZGRIknJycnTPPfcoPz9fxx9/fGX/nj17KjMzU4sXL9bYsWOVnJxc2fb555+rsLBQo0aNUkJCQo3fo7Vr18rlcqlz58419v3mm2903333KT4+Xrm5uUe95rHHHtNPP/2kp556Suecc07l9d/+9rfKycnRtGnTNGvWrMrrQ4cO1Zdffqn58+frzDPPPGqccLOYR3Tt2lWStG7duqPGAgBEP2YyAQAxbefOnZo1a1bIXytXrqzSPzk5WbfccktlwJQO72gaFxenjRs3Vl4rKirSxx9/rDPPPPOogClJrVu31ujRo1VUVFQ5S/hz11133VEBU5I++eQTHTx4UEOGDKkMmNLhjW5uvPHGkO9t+PDhKisr0+LFi4+6/t5770mShg0bFu7bcpTCwkKlpqbWGEhXrFihu+66S82bN9fzzz9/VMDctGmT1q1bp0suuaRK6MvIyNCll16q77///qjZ4P79+6tly5ZasmSJSktLK69XVFRo0aJFSkhICLtpU5s2bSQdXrYLAIgtzGQCAGLaOeeco6eeeqrW/U888USlpKQcdS0+Pl5t2rRRSUlJ5bWNGzcqEAjo0KFDIWdKd+zYIUnatm2b+vbte1TbaaedVqX/kXMfzzjjjCpt3bt3V1xcXJXrl1xyif7yl7/ovffeqwy6P/30k5YvX65f/OIXyszMrOHdHnbgwAG1a9eu2j4ff/yxvvjiC3Xq1ElPPvmkWrdufVT7kaWw+/btC/n9+OGHHyr/t2PHjpJUGSLfeusteb1ejRgxQpL06aefqqioSB6PR82bNw9Zz5Hr+/fvr9V7BABED0ImAKBJcbvdIa/HxcUpGAxWfn3gwAFJh5earl27Nuz9ysvLq1w7Mgv3c0dm8v5veJMO78basmXLKtebN2+uCy64QAsXLtT333+vjh07asGCBQoEArWexZSkxMRE+f3+avt88803CgQCOuOMM0LWeOT7sWLFCq1YsSLsfQ4ePHjU10OHDtVbb72l+fPnV4bMmpbKSqqsNykpqdq6AQDRh5AJAEAIR8LolVdeqdtvv/2YXmtZVtj77du3r0pbMBjU/v37Q842jhgxQgsXLtS8efM0fvx4vf/++3K73brgggtqXU/Lli1VWFhYbZ+bbrpJn3zyid566y3FxcVVec9H6h8/frwuv/zyWo/dqVMndevWTRs2bNCWLVvUvHlzff7552rfvn2V5zR/7kiobdWqVa3HAgBEB57JBAAghG7dusmyLH3zzTdG7tepUydJCjkrumHDBgUCgZCvO/3009WpUyd9+OGH+vzzz7Vjxw5ddNFFxzTD17FjR/n9fhUUFITtk5CQoMcee0znnnuu3njjDT377LNHtR9ZAlyX78eRGcv3339fH3zwgQKBQOURJ+EcWX57ZOktACB2EDIBAAghLS1NF1xwgdatW6d//vOfIc96XL9+fcjlsqH069dPycnJev/997Vz587K6xUVFZoxY0a1rx0+fLgOHDigJ554QpKqbERUk6ysrMp6q5OQkKApU6aob9++evPNN5Wbm1vZ1r17d3Xv3l2LFy+ushGRdHg2dvXq1SHv6/F4lJSUpEWLFmn+/PlyuVwaNGhQtbVs2LDhqNoBALGD5bIAgJhW3REmknTNNddUOWKktiZMmKDt27frhRde0AcffKDTTz9dqampKiws1MaNG7Vjxw69/fbbtZpVbN68ucaOHasnn3xSOTk5GjhwoNxutz777DMlJCSobdu2YWf2Lr74Yr344ovas2ePunbtGvJcyer069dPzz33nL788ssal9k2a9ZMjz76qP7whz/oX//6l2zb1h133CFJ+sMf/qA777xTDz/8sN566y2deuqpSkxM1O7du7Vu3Trt379fXq+3yj3dbrfOP/98ffDBByoqKlKfPn2Unp4etgbbtrVq1SqdfPLJR+3ECwCIDYRMAEBMO3KESTijRo2qc8hs0aKFnn/+ec2ZM0cfffSRvF6vgsGg2rRpo86dO+vaa68NuWFPOMOGDVPz5s312muvaeHChXK73TrvvPN0yy23aNSoUerQoUPI17ndbvXv31+LFi065llMSWrfvr3OPvts5eXlafz48TUeZXIkaD700EN66623ZNu2xo8frxNOOEEzZszQG2+8oWXLlmnBggVyuVxKS0tTz549NWDAgLD3HDp0qD744ANJ0pAhQ6od/3//939VUFCgcePGHfN7BQA4z7JDrf8BAAANZseOHbr66qt1wQUX6OGHHw7Z59prr9WuXbs0Z86csDvkVmfVqlW666679Pvf/14XX3xxfUuOqEcffVQrV67UP//5z7BHnAAAohfPZAIA0ECKi4urHCXi8/kqN9np379/yNd99tln2rJlizweT50CpiT17t1bffr00auvvnrUUS3RZvv27froo4/029/+loAJADGK5bIAADSQ1atX649//KPOPvtsHXfccdq/f7+++uor7dq1S2eeeaYGDhx4VP933nlHu3fv1nvvvaeEhARdc8019Rr/jjvu0IcffqjCwsJqn4l00u7duzVmzBhddtllTpcCAKgjlssCANBAtm/frhkzZmjdunUqKiqSJHXo0EEDBw7UVVddVeXZ0SuuuEKFhYXKyMjQLbfcor59+zpQNQAAx4aQCQAAAAAwhmcyAQAAAADGEDIBAAAAAMYQMgEAAAAAxhAyAQAAAADGEDIBAAAAAMYQMgEAAAAAxhAyAQAAAADGEDIBAAAAAMYQMgEAAAAAxvx/7fkdZ38a8PsAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b19de94",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5ef85ad8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:33.938494Z",
     "iopub.status.busy": "2024-09-11T21:03:33.937984Z",
     "iopub.status.idle": "2024-09-11T21:03:34.824413Z",
     "shell.execute_reply": "2024-09-11T21:03:34.823725Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=651339;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=577637;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=618889;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=215435;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=485862;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=140473;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=580396;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=221699;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=916522;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=742356;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=546539;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=347909;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=744176;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=648575;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=783937;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=302456;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=716491;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=463763;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:34 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:34\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=816993;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=446170;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=701923;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=116252;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=456337;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=269435;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7cc6cc81",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "35c96a13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:34.826723Z",
     "iopub.status.busy": "2024-09-11T21:03:34.826498Z",
     "iopub.status.idle": "2024-09-11T21:03:34.851366Z",
     "shell.execute_reply": "2024-09-11T21:03:34.850718Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "364e8833",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:34.853700Z",
     "iopub.status.busy": "2024-09-11T21:03:34.853359Z",
     "iopub.status.idle": "2024-09-11T21:03:34.897107Z",
     "shell.execute_reply": "2024-09-11T21:03:34.896553Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=245947;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=35040;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=454077;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=990594;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=752138;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=350242;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=947237;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=703461;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=434166;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=275838;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=181785;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=855749;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=235795;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=289174;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=817536;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=617052;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=413631;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=440290;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=589697;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=924535;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=708648;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=964673;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=172992;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=710201;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ceebe53d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:34.899504Z",
     "iopub.status.busy": "2024-09-11T21:03:34.899100Z",
     "iopub.status.idle": "2024-09-11T21:03:35.433258Z",
     "shell.execute_reply": "2024-09-11T21:03:35.432528Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e105121b",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23f16d26",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "67d09c00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:35.435767Z",
     "iopub.status.busy": "2024-09-11T21:03:35.435550Z",
     "iopub.status.idle": "2024-09-11T21:03:36.427146Z",
     "shell.execute_reply": "2024-09-11T21:03:36.426435Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:35 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:35\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=56013;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=463727;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=815158;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=609151;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=709360;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=489948;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140160356185040\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "646d6867",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ee8999a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:36.429803Z",
     "iopub.status.busy": "2024-09-11T21:03:36.429398Z",
     "iopub.status.idle": "2024-09-11T21:03:36.829424Z",
     "shell.execute_reply": "2024-09-11T21:03:36.828713Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:36 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:36\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=326519;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=276198;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "679633a4",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c5682528",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:36.832208Z",
     "iopub.status.busy": "2024-09-11T21:03:36.831656Z",
     "iopub.status.idle": "2024-09-11T21:03:37.375760Z",
     "shell.execute_reply": "2024-09-11T21:03:37.374984Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=101209;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=540992;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=595152;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=391362;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=322678;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=746497;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e2ce4cf",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4ae0e313",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T21:03:37.378462Z",
     "iopub.status.busy": "2024-09-11T21:03:37.378041Z",
     "iopub.status.idle": "2024-09-11T21:03:38.257563Z",
     "shell.execute_reply": "2024-09-11T21:03:38.256852Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">21:03:37 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m21:03:37\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=347318;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=724007;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=650179;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=877578;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=220255;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=276678;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
