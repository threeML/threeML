{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2d43ef15",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbce46bc",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ffa32d1",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d6be384",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b1a11897",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:21.045887Z",
     "iopub.status.busy": "2024-05-16T02:45:21.045356Z",
     "iopub.status.idle": "2024-05-16T02:45:21.051806Z",
     "shell.execute_reply": "2024-05-16T02:45:21.051320Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "21cee26a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:21.054257Z",
     "iopub.status.busy": "2024-05-16T02:45:21.053868Z",
     "iopub.status.idle": "2024-05-16T02:45:24.049653Z",
     "shell.execute_reply": "2024-05-16T02:45:24.049014Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:22 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:22\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=431416;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=577682;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=642037;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=755949;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:23 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:23\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=116250;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=650628;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "621e2baa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:24.052395Z",
     "iopub.status.busy": "2024-05-16T02:45:24.051991Z",
     "iopub.status.idle": "2024-05-16T02:45:24.093095Z",
     "shell.execute_reply": "2024-05-16T02:45:24.092520Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a1fde8bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:24.095197Z",
     "iopub.status.busy": "2024-05-16T02:45:24.095007Z",
     "iopub.status.idle": "2024-05-16T02:45:26.500670Z",
     "shell.execute_reply": "2024-05-16T02:45:26.499913Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:24 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:24\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=797744;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=940647;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:26 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:26\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=135360;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=495747;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6efd7411",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "57db1168",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:26.503127Z",
     "iopub.status.busy": "2024-05-16T02:45:26.502905Z",
     "iopub.status.idle": "2024-05-16T02:45:26.506495Z",
     "shell.execute_reply": "2024-05-16T02:45:26.505972Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "adbec2cc",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c8236533",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:26.508755Z",
     "iopub.status.busy": "2024-05-16T02:45:26.508383Z",
     "iopub.status.idle": "2024-05-16T02:45:26.511662Z",
     "shell.execute_reply": "2024-05-16T02:45:26.511137Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12fc8337",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "08470160",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:26.513870Z",
     "iopub.status.busy": "2024-05-16T02:45:26.513514Z",
     "iopub.status.idle": "2024-05-16T02:45:27.120949Z",
     "shell.execute_reply": "2024-05-16T02:45:27.120237Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=981846;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=715477;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=474854;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=708790;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=198522;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=702406;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=824509;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=768994;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=901361;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=454635;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=420762;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=390481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3081aea0",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1a67ea8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:27.123438Z",
     "iopub.status.busy": "2024-05-16T02:45:27.123069Z",
     "iopub.status.idle": "2024-05-16T02:45:27.738222Z",
     "shell.execute_reply": "2024-05-16T02:45:27.737336Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:27 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:27\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=229164;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=330245;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=836071;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=650897;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=63291;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=982454;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=946093;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=240005;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=581088;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=952731;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=842870;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=522562;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48e553d7",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dc768dd4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:27.740734Z",
     "iopub.status.busy": "2024-05-16T02:45:27.740276Z",
     "iopub.status.idle": "2024-05-16T02:45:28.628510Z",
     "shell.execute_reply": "2024-05-16T02:45:28.627811Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=168251;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=501570;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=757545;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=492213;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=219442;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=192708;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=808258;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=587325;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=668481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=836288;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=765264;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=616376;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=585090;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=995233;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=409547;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=425730;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=843896;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=829691;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:28 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:28\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=432486;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=228242;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=5919;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=137534;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=588961;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=173981;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a386aeb5",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fdc731ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:28.630930Z",
     "iopub.status.busy": "2024-05-16T02:45:28.630732Z",
     "iopub.status.idle": "2024-05-16T02:45:29.431053Z",
     "shell.execute_reply": "2024-05-16T02:45:29.430343Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=117732;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=606598;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=215380;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=111432;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=348695;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=996351;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=942736;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=226560;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=441878;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=970120;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=607328;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=317254;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=235062;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=736664;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=859478;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=353091;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=883238;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=990120;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=584573;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=235309;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=859265;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=789760;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=339002;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=636594;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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2r9/vyRp4sSJuu666yRJmzZt0r333qsVK1a0uv+9996rm2++Weecc05zSFy+fLkuvPBC3XnnnXr00Uc1dOhQffjhh1q8eHG7616wYIHeeOMN7d+/X3a7XX/5y18kSXa7XU888YS6desmwzA0e/Zs/eUvf9FNN92kjRs36plnntErr7yiY489VkeOHJF0NIxL0uHDhzV16lQNHTpUt9xyiyRpzpw5GjhwoKZPn66qqipNmjRJvXv3bq7j888/15tvvqkePXqotLRUjz/+uBYvXqzc3Fw999xz+vWvf60///nPbX4/3377rR5++GHNnj1bf/3rX/Xkk09qwYIFKi0t1fz58/XGG2/o2GOP1f/7f/+v3T+jSCGIwjSGYajeHfw/iEajobra+oDtqRmOqF/SAQAAYLWM5BRL75+UlKT58+frm2++0d///netXbtWzz//vBYtWiSPx6P6+vrmECpJ3bt3lyRt3bpVzz//vA4ePCi73a4dO3aorq5OaWlpzX3dbrc++ugj7d27t8W1HTt26Ntvv5XdbtfQoUMlSeedd57y8vLa/X39cGnuokWLNH36dC1evFiGYaioqEhr1qyRz+dTdXV180zt6tWrNXHiRB177LGSpPT09Ob7NTQ0aPLkySosLNSkSZOar3/88ce65557JEk9e/bUyJEjW9Rx/vnnq0ePHpKkjRs3avjw4crNzZV0dPb4mWeeaddM749+9COdccYZkqRBgwbpxRdfbB5/xIgRzTVPnjxZf/zjH9v9c4oEgihMYRiGZp3/tLZ9VNZm38ldZwVs6zc0X4+snkoYBQAACCLYstlI6tOnj/r06aOrr75aN9xwg95//32dd955fvt6PB5NmzZN//M//6PTTz9dNTU1Gjx4sDweT4sgahiGJOm1115Tampqi3ts27at1X07+3vj2LFjNWvWLO3fv1/r1q3Txo0b9Ze//EVZWVl66aWX9PHHH7d5j+TkZA0ePFjvv/++xo0bp5QU/wH+32tsWvLbVl+73d5iA6j6+pYTOj/8+SQlJQUMr9H4u3XiPRWLsKh3e9oVQtuybUNZm7OqAAAAsFZlZaWKi4ubvz506JB27typvLw8nXzyyUpLS9Pbb7/d3L5//355PB41NDTohBNOkCS9/PLLfu+dmZmpIUOG6IUXXmgx3u7du9W7d2/5fL7mkLhhwwZ99913nfoePvroI3Xr1k1du3bV4cOH1bVrV2VlZammpkZvvPFGc78LLrhAb731VvPzrkeOHGlenmuz2fTggw/q+OOP1+233666ujpJ0k9/+tPme+zdu1erV68OWMeQIUO0bt06VVZWSjr6bOe5554ru92uk046SSUlJaqrq5PX623xMw3mpz/9qdatW6eqqipJ0l//+teO/XAigBlRmG7hrtlKy3T4bZs2YK7mb5nZ6npdrUfX9Zod5soAAABgBq/Xq2effVY7d+5UWlqafD6fLrvsMjmdTknSs88+qzlz5uiPf/yjbDabrrnmGl199dWaMWOGrrjiCnXr1k1jx44NeP8nnnhCjz76qC699FLZbDalp6frwQcf1HHHHac//OEPeuCBB9TY2Kif/OQn6tevX7vrbnpG1DAMORwOPfXUU0pKStKkSZO0atUqXXLJJerevbsGDx6s77//XpJ09tlna+rUqbrhhhtks9mUkpLSarOi++67T08++aQKCwv1/PPP69e//rXuuecejR07Vscee6xOP/10denSxW9Nffv21a9+9SvdeOONko5uVjRnzhxJ0sCBAzVixAhdeuml6tmzp84880xt3ry5ze+zb9++mjp1qq699tqo3azIZjTNfcNyJSUlKiws1J/+9KeoO+enLXW19c1Lbv968BGlZab67XdTwRy98PVvOv16AIH/PQIAxKemWbYfLl9FdKurq1NycrKSk5N14MABXXXVVXr88cebn+eMFlb+3WJGFAAAAABMVFZWpnvuuUeGYaihoUHXXHNN1IVQqxFELeZyueRyuSRJNTU1FlcDAAAAIFT9+vXTkiVLrC4jqhFELeZ0OpvX0jctzY1mS+et1fgZI6wuAwAAIGHY7XZ5PGzmCPM1NjYqOdmaSEgQRYcsnU8QBcKJ83gBAP8uOTlZhw8fVkZGBv99h6n+/eicSCKIAog58Tozz3m8AAB/bDabunbtqv379ystLU12u93qkhAHPB6PkpOTlZRkzYmenCMKIOYsnb/W6hLCgvN4AQCB2O12de/eXQ6H/yPygI7KyMhQVlaWZeMzIwp0ULzOxiG6cB4vAODfNZ1hmZKSYnUpQMiYEQU6KF5n4xBd0jIdSstM9fvHlmQL0BYbn5Ivnce/QwAAJDqCKAAgovgwBwAAEEQBADGHWVUAAGIbQRQAEHOYVQUAILYRRAEAAAAAEUUQ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ffWVqqurdd9992nMmDGt+no8Hi1YsEArV65UdXW1+vTpoxtvvFFnn312c5+dO3cqPT1dxx57bPO13r17a8eOHWH9PgAAAAAgnpkyI/qjH/1IGzZs0KFDh1RdXS2Xy6W+ffu2eGZ09+7d6tatmxnDBXTo0CEVFRWpvLxcBQUFQfs++uijeu2113TRRRdp+vTpSkpK0syZM7V58+bmPkeOHFFmZmaL12VmZurIkSNhqR8AAAAAEoEpQfTyyy/X3r17dfnll+uKK67Qvn37NGnSpBZ9tm7d2mY4DFVOTo7eeOMN/e1vf9Ott94asN/WrVu1atUq3XTTTbrttts0YcIEPfnkkzruuOP03HPPNfdLT09XbW1ti9fW1tYqPT09bN8DACD8rD5LFgCARGdKEB05cqTuvPNOnXzyycrLy9PNN9/cYjnspk2bVFtbq3POOceM4QJyOBzKyclps9+aNWtkt9s1YcKE5mupqakaN26cvvzyy+ZzT0888UQdOXJEVVVVzf127Nihk08+2fziAQARw1myAABYy5RnRCVp0qRJrWZBmwwcODCqdszdvn27TjzxxFbLbpt2/v3666+Vm5urjIwMnXfeeXrxxRd1xx13qLi4WN98843OO++8To+9d+9e7du3z29b05mrAAAAABDPTAuisWTfvn1+Z06bru3du7f52l133aWHH35Yl156qXr27KnZs2crOzu702O/9dZbKioq6vTrASDWsSwWAAAkZBCtr69XSkpKq+sOh6O5vUnXrl31+OOPmzb2hAkTNGzYML9t5eXlmjNnjmljAUA0YlksAABIyCCampqqhoaGVtc9Hk9ze7j06NFDPXr0CNv9AQAAACDaJWQQzcnJabEBUZOmZzcJigBgLbfXo6LS4oDtNQ3+291eTzjLAgAAJknIIFpQUKDPP/9ctbW1LTYs2rp1a3M7ACDyUux2ySsZkmqDhEpDRtD2FLs9DNUBSCR1tcE/2DIaDdXV1gdsT81wyGazmV0WEDcSMoiOHDlSr7zyit566y1NnjxZ0tFlucuWLVP//v2Vm5trcYUAkJiG9MzTxqoKNfh8QfvZZFNmssNvW4rdriE988JRXrP1lWU86wrEuet6zW6zz+SuswK29Ruar0dWTyWMAgHEXRBdtGiRampqmpfZrl+/Xnv27JEkXX755crKylL//v01atQovfDCCzp4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Ys7dvEZT+g7221ZUWhx8thQAQbQtw4cPlyR9/PHHFlcCAACAaDEs9ySrSwBiWkwEUbfbrVdeeUVbt27VV199perqat13330aM2ZMq74ej0cLFizQypUrVV1drT59+ujGG2/U2WefbUHlAAAAiEfDcvOtLgGIaTFxfMuhQ4dUVFSk8vJyFRQUBO376KOP6rXXXtNFF12k6dOnKykpSTNnztTmzZsjVC0AAAAAIJiYmBHNycnRG2+8oZycHG3btk033XST335bt27VqlWrdOutt2ry5MmSpEsuuURTpkzRc889p+eee6657+23364tW7b4vc9//dd/qbCw0PxvBAAAAAAQG0HU4XAoJ6fth8bXrFkju92uCRMmNF9LTU3VuHHj9MILL6iyslK5ubmSpGeeeSZs9QIAAAAAAouJINpe27dv14knnqjMzMwW10899VRJ0tdff90cRNvL6/XK5/OpsbFRPp9P9fX1Sk5Olt1u71SNe/fu1b59+/y2lZeXd+qeAAAAABBL4iqI7tu3z+/MadO1vXv3dvieL730koqKipq/fvnllwNulNQeb731Vov7AQAAAECiiasgWl9fr5SUlFbXHQ5Hc3tHXX/99br++utDrq3JhAkTNGzYML9t5eXlmjNnjmljAQAAAEA0iqsgmpqaqoaGhlbXPR5Pc7vVevTooR49elhdBgAAACy0vrKMI2CQ0OIqiObk5KiqqqrV9aZnMgmAAAAAiBS316Oi0mK/bd9W79f2Q/73DZGkFLtdQ3rmqSC77Q07gVgUV0G0oKBAn3/+uWpra1tsWLR169bmdgAAACCcUux2ySsZkmq9Hr99DBkB2yRJXmljVQVBFHEryeoCzDRy5Ej5fD699dZbzdc8Ho+WLVum/v37d3jHXAAAAKCjhvTMU9fUdGUmOwL+sckWpO2oBp/P0u8DCKeYmRFdtGiRampqmpfZrl+/Xnv27JEkXX755crKylL//v01atQovfDCCzp48KB69eqlFStWaPfu3brnnnusLB8AAAAJoiA7p82ZzLmb12hK38F+24pKi4PPlgJxIGaC6Kuvvqrdu3c3f7127VqtXbtWknTxxRcrKytLkjRr1izl5ubq3XffVU1NjXr37q3f//73GjhwoBVlAwAAAK0Myz3J6hIAS8VMEH3ttdfa1S81NVW33XabbrvttjBXBAAAAHQOO+Yi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roKCgqB9H330Ub322mu66KKLNH36dCUlJWnmzJnavHlzc58jR44oMzOzxesyMzN15MiRsNQPALCe2e8lAIDEE873kvr6es2ZM0fXXntth1baEETDKCcnR2+88Yb+9re/6dZbbw3Yb+vWrVq1apVuuukm3XbbbZowYYKefPJJHXfccXruueea+6Wnp6u2trbFa2tra5Wenh627wEAYC2z30sAAIknXO8lXq9Xv/vd79SrVy9NmTKlQzURRMPI4XAoJyenzX5r1qyR3W7XhAkTmq+lpqZq3Lhx+vLLL1VZWSlJOvHEE3XkyBFVVVU199uxY4dOPvlk84sHAEQFs99LAACJJxzvJY2NjZozZ45sNptmzZolm83WoZoIolFg+/btOvHEE1stuz311FMlSV9//bUkKSMjQ+edd55efPFF1dfXa8OGDfrmm2903nnnRbxmAEB0ae97iXT0E+z6+no1NjbK5/Opvr5ePp8vovUCAKJPR95LnnjiCe3bt08PPPCAkpM7vvUQmxVFgX379vn9hKLp2t69e5uv3XXXXXr44Yd16aWXqmfPnpo9e7ays7MjVisAIDp15L3kpZdeUlFRUfPXL7/8csBNKwAAiaO97yW7d+/W22+/LYfD0WL2dO7cuTrjjDPaNRZBNArU19crJSWl1XWHw9Hc3qRr1656/PHHI1YbACA2dOS95Prrr9f1118fsdoAALGhve8lxx13nNauXRvSWCzNjQKpqalqaGhodd3j8TS3AwAQDO8lAIBQRfK9hCAaBXJycrRv375W15uu9ejRI9IlAQBiDO8lAIBQRfK9hCAaBQoKCrRz585WR7Ns3bq1uR0AgGB4LwEAhCqS7yUE0SgwcuRI+Xw+vfXWW83XPB6Pli1bpv79+ys3N9fC6gAAsYD3EgBAqCL5XsJmRWG2aNEi1dTUNE9nr1+/Xnv27JEkXX755crKylL//v01atQovfDCCzp48KB69eqlFStWaPfu3brnnnusLB8AEAV4LwEAhCra3ktshmEYpt4RLVx55ZXavXu337ZXX31Vxx9/vKSjO1AtWLBAK1euVE1NjXr37q0bb7xR55xzTiTLBQBEId5LAAChirb3EoIoAAAAACCieEYUAAAAABBRBFEAAAAAQEQRRAEAAAAAEUUQBQAAAABEFEEUAAAAABBRBFEAAAAAQEQRRAEAAAAAEUUQ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xgy98847yszM1KhRo9pdzzHHHKOqqqqgfW666SZ9+OGHev3112W321t9z031z5gxQ5dffnm7x+7Tp4/69eunr776Sjt27FCXLl30ySef6Pjjj2/13OgPNQXfrl27tnssAEB04BlRAAA6qV+/frLZbPryyy9NuV+fPn0kye/s6ldffSWfz+f3daeddpr69Omj9957T5988ol27typiy66qEMzhb1795bH41FlZWXAPg6HQw8//LDOPfdcvfrqq3r66adbtDctN+7Mz6Np5vOdd97Ru+++K5/P13y8SyBNS32blvkCAGIHQRQAgE7KycnRqFGj9MUXX+ivf/2r37Mwt27d6ndprj/nnXee0tPT9c4772jXrl3N171erxYsWBD0tRMmTNDhw4f12GOPSVKrzZPaMnDgwOZ6g3E4HJozZ46GDh2q1157TfPnz29u69+/v/r3769Vq1a12jxJOjqru2nTJr/3dTqdSktL08qVK7Vs2TIlJSVp9OjRQWv56quvWtQOAIgdLM0FAMS9YMe3SNK1117b6niV9rrrrrtUUVGh5557Tu+++65OO+00ZWVlqaqqStu2bdPOnTv1xhtvtGt2skuXLpo6daoef/xxFRYW6oILLlBmZqY+/vhjORwO9ejRI+AM4cUXX6znn39ee/fu1SmnnOL33M1gzjvvPD3zzDP69NNP21zSm5KSooceeki/+93v9Le//U2GYWj69OmSpN/97ne644479MADD+j111/Xj3/8Y6WmpmrPnj364osvdOjQIblcrlb3zMzM1Pnnn693331XBw8e1JAhQ5SbmxuwBsMwVFxcrJNOOqnFDsMAgNhAEAUAxL2m41sCueKKKzodRLOzs/Xss89q8eLFev/99+VyudTY2Kju3buroKBAv/jFL/xuMhTI+PHj1aVLF7388stasWKFMjMzNWzYMN1yyy264oor1KtXL7+vy8zM1PDhw7Vy5coOz4ZK0vHHH6+zzz5bq1ev1owZM9o8xqUpjN5///16/fXXZRiGZsyYoRNOOEELFizQq6++qnXr1mn58uVKSkpSTk6OzjjjDI0cOTLgPceNG6d3331XkjR27Nig4//f//2fKisrNW3atA5/rwAA69kMf+uIAABAVNm5c6euueYajRo1Sg888IDfPr/4xS+0e/duLV68OODOv8EUFxfrzjvv1G9+8xtdfPHFoZYcVg899JA2btyov/71rwGPdwEARC+eEQUAIIpUV1e3Okalvr6+eWOg4cOH+33dxx9/rB07dsjpdHYqhErS4MGDNWTIEL300kstjqmJNhUVFXr//ff185//nBAKADGKpbkAAESRTZs26fe//73OPvtsHXvssTp06JA+++wz7d69W2eeeaYuuOCCFv3ffPNN7dmzR2+//bYcDoeuvfbakMafPn263nvvPVVVVQV9RtNKe/bs0ZQpU3TZZZdZXQoAoJNYmgsAQBSpqKjQggUL9MUXX+jgwYOSpF69eumCCy7Q1Vdf3epZ1iuvvFJVVVXKy8vTLbfcoqFDh1pQNQAAHUMQBQAAAABEFM+IAgAAAAAiiiAKAAAAAIgogigAAAAAIKIIogAAAACAiCKIAgAAAAAiiiAKAAAAAIgogigAAAAAIKIIogAAAACAiCKIAgAAAAAi6v8D3LE8znI8cbcAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edbbd87d",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3f0f0c37",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:29.433616Z",
     "iopub.status.busy": "2024-05-16T02:45:29.433228Z",
     "iopub.status.idle": "2024-05-16T02:45:29.451669Z",
     "shell.execute_reply": "2024-05-16T02:45:29.451060Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0b691e55",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:29.454077Z",
     "iopub.status.busy": "2024-05-16T02:45:29.453726Z",
     "iopub.status.idle": "2024-05-16T02:45:29.496337Z",
     "shell.execute_reply": "2024-05-16T02:45:29.495660Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:29 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:29\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=123312;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=377;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=64173;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=779265;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=704093;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=899193;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=632044;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=119911;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=668441;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=901146;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=71805;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=824248;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=671502;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=139263;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=138500;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=214513;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=665332;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=95398;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=591021;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=525970;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=3397;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=252079;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=73434;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=737497;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6500bc0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:29.498659Z",
     "iopub.status.busy": "2024-05-16T02:45:29.498217Z",
     "iopub.status.idle": "2024-05-16T02:45:29.961258Z",
     "shell.execute_reply": "2024-05-16T02:45:29.960560Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46e24448",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a19ef91",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "47e24d0d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:29.963702Z",
     "iopub.status.busy": "2024-05-16T02:45:29.963317Z",
     "iopub.status.idle": "2024-05-16T02:45:30.885525Z",
     "shell.execute_reply": "2024-05-16T02:45:30.884832Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=400514;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=492362;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1045</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=768302;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=708378;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\u001b\\\u001b[2m1045\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1062</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=827894;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=912224;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\u001b\\\u001b[2m1062\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140681645648096\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b710b924",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "702e7c6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:30.888116Z",
     "iopub.status.busy": "2024-05-16T02:45:30.887638Z",
     "iopub.status.idle": "2024-05-16T02:45:31.248848Z",
     "shell.execute_reply": "2024-05-16T02:45:31.248147Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:30 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:30\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=886648;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=975313;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c698668",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "29623868",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:31.251359Z",
     "iopub.status.busy": "2024-05-16T02:45:31.250970Z",
     "iopub.status.idle": "2024-05-16T02:45:31.741322Z",
     "shell.execute_reply": "2024-05-16T02:45:31.740625Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">02:45:31 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m02:45:31\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=338161;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=91418;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=240099;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=43284;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=529977;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=936272;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ee210df",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f96575b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-16T02:45:31.743692Z",
     "iopub.status.busy": "2024-05-16T02:45:31.743485Z",
     "iopub.status.idle": "2024-05-16T02:45:32.541344Z",
     "shell.execute_reply": "2024-05-16T02:45:32.540608Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=848096;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=481905;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=573241;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=365698;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=758013;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=588477;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
