{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6e9d1562",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f56ef47",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84d3fe55",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ab58b88",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "85dd2e2e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:40.427440Z",
     "iopub.status.busy": "2024-09-10T16:02:40.427244Z",
     "iopub.status.idle": "2024-09-10T16:02:40.433588Z",
     "shell.execute_reply": "2024-09-10T16:02:40.432916Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "55c04116",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:40.436177Z",
     "iopub.status.busy": "2024-09-10T16:02:40.435699Z",
     "iopub.status.idle": "2024-09-10T16:02:43.437722Z",
     "shell.execute_reply": "2024-09-10T16:02:43.436897Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:42 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:42\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=814912;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=359502;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=284478;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=107135;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=787169;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=739008;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9acb8447",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:43.440895Z",
     "iopub.status.busy": "2024-09-10T16:02:43.440385Z",
     "iopub.status.idle": "2024-09-10T16:02:43.469890Z",
     "shell.execute_reply": "2024-09-10T16:02:43.469355Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "779ccfc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:43.472242Z",
     "iopub.status.busy": "2024-09-10T16:02:43.471869Z",
     "iopub.status.idle": "2024-09-10T16:02:46.064515Z",
     "shell.execute_reply": "2024-09-10T16:02:46.063842Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:43 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:43\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=751194;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=693884;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:45 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:45\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=147439;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=898811;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55e87775",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "32becb27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:46.067023Z",
     "iopub.status.busy": "2024-09-10T16:02:46.066568Z",
     "iopub.status.idle": "2024-09-10T16:02:46.070096Z",
     "shell.execute_reply": "2024-09-10T16:02:46.069526Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "245d6561",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e1613fdc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:46.072191Z",
     "iopub.status.busy": "2024-09-10T16:02:46.071999Z",
     "iopub.status.idle": "2024-09-10T16:02:46.075148Z",
     "shell.execute_reply": "2024-09-10T16:02:46.074615Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8e5ab43",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3bbf38ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:46.077233Z",
     "iopub.status.busy": "2024-09-10T16:02:46.077046Z",
     "iopub.status.idle": "2024-09-10T16:02:46.584533Z",
     "shell.execute_reply": "2024-09-10T16:02:46.583865Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:46 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:46\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=246948;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=630136;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=969540;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=791422;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=596047;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=524492;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=456511;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=689178;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=132068;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=794102;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=606127;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=775923;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "deb2d921",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "487791ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:46.587059Z",
     "iopub.status.busy": "2024-09-10T16:02:46.586682Z",
     "iopub.status.idle": "2024-09-10T16:02:47.252717Z",
     "shell.execute_reply": "2024-09-10T16:02:47.252046Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=908852;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=363646;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=515978;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=553672;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=613241;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=655693;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=519909;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=667417;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=551868;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=736701;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=181539;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=23688;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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druys7O1atUqlZeX+55Pfe6559o0dl1dnRYtWiSbzaYFCxbIZrN17E0AAAAAAMLvHNEDBw6oR48eio+Pb3C9f//+kqSDBw+2+56//vWvderUKT322GOKiQmZ7A4AAAAAQSnsUtWpU6eanDmtv3by5Ml23a+srExvvvmmYmNjG8yyLl26VAMHDmx3fSdPntSpU6eabCstLW33/QAAAAAg1IRdEHW73erUqVOj67Gxsb729rjwwgtVWFhoSG2StHHjRuXm5hp2PwAAAAAINWEXRO12u86ePdvousfj8bVbady4cbr22mubbCstLdWiRYtMrggAAAAAzBV2QTQpKUknTpxodL1+OWxHzzE1SnJysuU1AAAAAICVwm6zovT0dB09elRVVVUNrhcVFfnaAQAAAADWMSyInjt3TuvWrdP06dM1evRoDR8+3Nd24MAB/dd//ZeOHDli1HDNGjZsmGpra7Vx40bfNY/Ho/z8fGVkZPiObgEAAAAAWMOQpblut1sPPPCA9u3bp65duyo+Pl41NTW+9osuukj5+flKTExUTk5Oh8dZv369XC6Xb5ntjh07dPz4cUnSxIkTlZCQoIyMDA0fPlyrVq1SRUWFUlNTtXnzZpWVlemhhx7y740GgNPplNPplCS5XC6LqwEAAACAwDMkiL700kvau3ev7r77bk2ePFkvvPCCXnzxRV97QkKCMjMz9fHHH/sVRNeuXauysjLf14WFhb4dbUeOHKmEhARJ0oIFC5SSkqItW7bI5XKpV69eeuqpp5SZmdnhsQPF4XDI4XBIkkpKSvz6/gAAAABAKDAkiL7zzjsaNGiQbrvtNkmSzWZr1Ofiiy/WgQMH/Bpn3bp1bepnt9s1c+ZMzZw506/xAAAAAADGM+QZ0ePHj6tv374t9unSpUujDYQAAAAAwAp5ywqtLiGiGRJEu3TpooqKihb7fPnll+ratasRwwEAAACAX/KWE0StZMjS3Msvv1w7d+5UZWWlEhMTG7WXl5frww8/1NChQ40YLqywWREAAACASGPIjOgPf/hDVVZW6v7779fevXtVW1srSaqpqdGuXbv04IMPqra2VrfeeqsRw4UVh8OhJUuWaMmSJZo9e7bV5QAAAABAwBkyI5qZman77rtPzz77bIMwNXr0aElSVFSU5s2b1+pzpAAAAACA8GdIEJWkCRMmKDMzUxs2bND+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5ZvO3rFjh44fPy5JmjhxohISEpSRkaHhw4dr1apVqqioUGpqqjZv3qyysjI99NBDVpYPAAgCfJYAAPwVbJ8lNq/X6zX0jmjglltuUVlZWZNta9eu1UUXXSTpmx2oVq9era1bt8rlcqlXr16aNm2arr76ajPLBQAEIT5LAAD+CrbPEoIoAAAAAMBUPCMKAAAAADAVQRQAAAAAYCqCKAAAAADAVARRAAAAAICpCKIAAAAAAFMRRAEAAAAApiKIAgAAAABMRRAFAAAAAJiKIAoAAAAAMBVBFAAANLBu3Tpdf/31+sc//uG7tmnTJmVlZWnTpk0WVva/3nzzTQ0bNkx//etfrS4FANABBFEAQFj7xz/+oaysrBZ/3XLLLVaXGTQqKyv14osv6sYbb9RFF10U0LE++ugjZWVl6YEHHmi17+OPP66srCy9/fbbkqTRo0crJSVFK1euDGiNAIDAiLG6AAAAzJCamqobbrihybaEhASTqwle69at05kzZzR58uSAj/Xd735XKSkp2rVrl8rLy5WSktJkP5fLpffee08JCQnKysqSJMXExOiWW27RsmXLtHfvXg0YMCDg9QIAjEMQBQBEhNTUVN15551WlxHUzp07pzfffFMDBgxQampqwMeLiorSmDFjlJubq82bN+uOO+5osp/T6ZTb7daNN94ou93uuz5ixAitWLFCGzZsIIgCQIhhaS4AAP9HVlaW5syZo3/+85964oknNHbsWDkcDt1zzz3avXt3k6+prq7WmjVr9JOf/EQOh0M33nijHnjgAX322WeN+s6ZM0dZWVlyu916/vnn9cMf/lDDhw/XmjVrfH22b9+unJwcORwOjR8/XkuXLlVlZaVuueWWBkuJf/WrXykrK0tFRUVN1rV69WplZWXJ6XS2+r4/+ugjnTp1SsOGDWu1b73jx4/rjjvukMPhUEFBge/6V199peXLl2vy5MkaMWKExo4dq5///Of629/+1uD1N954o2w2mzZt2iSv19vkGPn5+ZKk7OzsBte7deumQYMGqaCgQNXV1W2uGQBgPYIoAABNcLlcuvfee3X48GGNHDlSWVlZKikp0YMPPtgoTJ05c0YzZsxQbm6uEhMTNX78eGVlZemLL77Q3Llz9d577zU5xqOPPqrNmzdr0KBB+sEPfuB7JvOtt97So48+qqNHj2rUqFEaPXq0Pv/8c82bN0/nzp1rcI9x48b5XvN/1dbWKj8/X127dvUtaW3Jrl27JEmXX355698gSYcPH9bMmTN1/PhxPf30074Ae+zYMU2bNk2vvPKKLr74Yn3/+9/Xf/7nf+qjjz7SjBkzGoTmCy+8UN/5znf05ZdfNhny//a3v6m4uFiXXXaZ+vTp06j98ssvl8fj0b59+9pUMwAgOLA0FwAQEY4dO9ZgxvHfXX755fre977X4NrBgwc1YcIE3XfffYqK+ubntldeeaWWLl2q1157TQ8++KCv729+8xsdOnRI8+fP10033eS7/tVXXyknJ0dPP/20rr766gbLSiXp1KlTeuGFF3Teeef5rlVWVurZZ59Vly5dtGrVKvXs2VOSlJOTowcffFAlJSW68MILff0HDhyotLQ0bdu2TbNmzVKXLl18bR999JFOnDihSZMmKTY2ttXv0d69exUVFaX09PRW+37++ed66KGHFBMTo+XLlzd4zRNPPKF//vOf+vWvf62rr77ad/0nP/mJcnJytHTpUuXm5vquZ2dn65NPPlF+fr6uvPLKBuM0Nxtar2/fvpKkffv2NRgLABDcmBEFAESEY8eOKTc3t8lff/nLXxr179Kli+655x5fCJW+2ak1OjpaxcXFvmsVFRV69913deWVVzYIoZJ0/vnna/LkyaqoqPDNNv67qVOnNgihkvT+++/r66+/1o033ugLodI3m/NMmzatyfc2btw4VVdXa9u2bQ2uv/nmm5KksWPHNvdtaeDEiRNKSEhoNbR+8MEHuv/++5WYmKjf/va3DULoF198oX379mnUqFGNgmHPnj1100036W9/+1uDWeWhQ4eqa9eu2r59u6qqqnzXz507p61btyo2NrbZjaa6d+8u6ZslwgCA0MGMKAAgIlx99dX69a9/3eb+PXr0UFxcXINrMTEx6t69u1wul+9acXGxamtrdfbs2SZnXI8ePSpJKi0t1eDBgxu09e/fv1H/+nMxr7jiikZtGRkZio6ObnR91KhR+v3vf68333zTF4b/+c9/aufOnfqP//gPpaWltfJuv3HmzBldcMEFLfZ599139fHHH6t37956+umndf755zdor192+9VXXzX5/fj73//u+99evXpJki9ovvrqq3I6nRo/frwkaceOHaqoqJDD4VBiYmKT9dRfP336dJveIwAgOBBEAQBoQnx8fJPXo6OjVVdX5/v6zJkzkr5Z1rp3795m71dTU9PoWv1s3r+rnxH8vwFP+maX2a5duza6npiYqOHDh2vz5s3629/+pl69emnTpk2qra1t82yoJNntdnk8nhb7fP7556qtrdUVV1zRZI31348PPvhAH3zwQbP3+frrrxt8nZ2drVdffVX5+fm+INraslxJvno7d+7cYt0AgOBCEAUAwA/1gfXWW2/Vvffe267X2my2Zu/31VdfNWqrq6vT6dOnm5y1HD9+vDZv3qy8vDzNnTtXb731luLj4zV8+PA219O1a1edOHGixT7Tp0/X+++/r1dffVXR0dGN3nN9/XPnztXEiRPbPHbv3r3Vr18/7d+/X4cOHVJiYqI++ugjXXTRRY2eG/139cG3W7dubR4LAGA9nhEFAMAP/fr1k81m0+eff27I/Xr37i1JTc6u7t+/X7W1tU2+7vLLL1fv3r319ttv66OPPtLRo0d1ww03tGumsFevXvJ4PCovL2+2T2xsrJ544gldc801Wrt2rVasWNGgvX65cUe+H/Uzn2+99Za2bNmi2tpa3/Euzalf6lu/zBcAEBoIogAA+CEpKUnDhw/Xvn379Oc//7nJszCLioqaXJrblCFDhqhLly566623dOzYMd/1c+fOafXq1S2+dty4cTpz5oyWLFkiSY02T2pNZmamr96WxMbGatGiRRo8eLDWrVun5cuX+9oyMjKUkZGhbdu2Ndo8SfpmVnfPnj1N3tfhcKhz587aunWr8vPzFRUVpdGjR7dYy/79+xvUDgAIDSzNBQBEhJaOb5Gk22+/vdHxKm01b948HTlyRCtXrtSWLVt0+eWXKyEhQSdOnFBxcbGOHj2q119/vU2zk4mJiZo1a5aefvpp5eTk6Prrr1d8fLw+/PBDxcbGKjk5udkZwpEjR+p3v/udTp48qb59+zZ57mZLhgwZoueee06ffPJJq0t6O3XqpF/96lf6xS9+oVdeeUVer1dz5syRJP3iF7/Qfffdp8cee0yvvvqqLrvsMtntdh0/flz79u3T6dOn5XQ6G90zPj5e1113nbZs2aKKigp973vfU0pKSrM1eL1e7dq1S5dcckmDHYYBAMGPIAoAiAj1x7c0Z9KkSR0Oouedd55++9vf6rXXXtM777wjp9Opuro6de/eXenp6brjjjua3GSoOWPHjlViYqJeeuklbd68WfHx8br22mt1zz33aNKkSUpNTW3ydfHx8Ro6dKi2bt3a7tlQSbrooot01VVXqaCgQHPnzm31GJf6MPrLX/5Sr776qrxer+bOnauLL75Yq1ev1tq1a/Xee+9p06ZNioqKUlJSkgYOHKhhw4Y1e8/s7Gxt2bJFknTjjTe2OP7//M//qLy8XLNnz273ewUAWMvmbWoNEQAACDpHjx7VbbfdpuHDh+uxxx5rss8dd9yhsrIyvfbaa83u/NuSXbt26f7779fPf/5zjRw50t+SA+pXv/qV/vKXv+jPf/5zs8e7AACCE8+IAgAQZCorKxsdo+J2u30bAw0dOrTJ13344Yc6dOiQHA5Hh0KoJH3nO9/R9773Pb344osNjqkJNkeOHNE777yjn/zkJ4RQAAhBLM0FACDI7NmzR0899ZSuuuoqfetb39Lp06f16aefqqysTFdeeaWuv/76Bv3feOMNHT9+XG+++aZiY2N1++23+zX+nDlz9Pbbb+vEiRMtPqNppePHj2vKlCm6+eabrS4FANABLM0FACDIHDlyRKtXr9a+fftUUVEhSUpNTdX111+vH/7wh42eZb3lllt04sQJ9ezZU/fcc48GDx5sQdUAALQdQRQAAAAAYCqeEQUAAAAAmIogCgAAAAAwFUEUAAAAAGAqgigAAAAAwFQEUQAAAACAqQiiAAAAAABTEUQBAAAAAKYiiAIAAAAATEUQBQAAAACY6v8D57Y2fSVq3REAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f288025f",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f65fa8d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:47.255298Z",
     "iopub.status.busy": "2024-09-10T16:02:47.254976Z",
     "iopub.status.idle": "2024-09-10T16:02:48.207301Z",
     "shell.execute_reply": "2024-09-10T16:02:48.206636Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:47 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:47\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=990963;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=182641;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=262014;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=606495;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=762736;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=82467;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=935222;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=477594;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=780419;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=194543;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=864032;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=770437;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=413202;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=889725;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=476668;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=815538;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=136314;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=305995;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=37919;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=370822;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=705875;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=926144;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=712489;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=144874;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c3160e2",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "62e5b8a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:48.209667Z",
     "iopub.status.busy": "2024-09-10T16:02:48.209440Z",
     "iopub.status.idle": "2024-09-10T16:02:49.078698Z",
     "shell.execute_reply": "2024-09-10T16:02:49.078008Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:48 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:48\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=676028;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=302299;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=54373;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=580430;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=900123;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=44924;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=513250;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=283961;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=528919;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=985740;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=871462;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=880207;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=472621;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=232930;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=398641;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=865821;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=433011;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=446542;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=664325;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=887865;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=98949;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=646635;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=843896;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=812256;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6IAAAMSCAYAAABwMnnyAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAB2yUlEQVR4nO3de3yT5f3/8XeakpamIFCwKnZW6ABxKIjK5CRiVBAR1HlAv98ND/UIom5DZQdR8TB0P4d4mg7pdI9NneABBdSggBbF2ekXFGlFKRYcpZybhiZNcv/+YO1kTdJD7uRO0tfz8eAxe19X7uuT2hneva77umyGYRgCAAAAACBBMqwuAAAAAADQsRBEAQAAAAAJRRAFAAAAACQUQRQAAAAAkFAEUQAAAABAQhFEAQAAAAAJRRAFAAAAACQUQRQAAAAAkFAE0SRSX1+v8vJy1dfXW10KAAAAAMRNptUFdHRut1tut1uS5PF4tG7dOj3zzDPq379/2P7XFs3R05t+ncgSAQAAAMBUBFGLuVwuuVwuSVJ5ebmKi4strggAAAAA4ouluQAAAACAhCKIAgAAAAASiqW5AAAAQAoIhUIKBAIKhUJWl4I0YLfblZmZKZvNZsn4zIgCAAAASc7j8Wj//v0KBAJWl4I04fP5tG/fPhmGYcn4zIgCAAAASaxxFrRbt25Wl4I04/F4FAgE1KlTp4SPzYwoAAAAkMQCgYAcDofVZSANZWZmKhgMWjI2QRQAAAAAkFAEUQAAAABAQvGMKAAAAIA2mTRpkiSpoaFBmzdvVr9+/SRJxx57rP7whz806//ll1/qm2++0YQJE1q899atWzV58mR98sknptaM5EIQBQAAANAmr732mqT/hMbGryP58ssv5Xa7WxVE0TEQRAEAAIAUYhiGfF5/XMfIynG063zJV199VQsWLJAkHXnkkbr33nuVmZmpRx99VLW1tZo0aZJOPPFE3XPPPfr5z3+uzZs3q6GhQUceeaTuu+8+9erVy+y3giRFEAUAAABSiM/r15Rus+I6xt/23q9sZ1abXlNRUaGHHnpIixcvVn5+vp588kn96le/0p/+9CfdfPPNcrvdeuKJJ5r6/+pXv1KPHj0kSU8//bTmz5+ve+65x9T3geRFEAUAAAAQs7Vr12rUqFHKz8+XJF1++eV6/PHHIx4PsmTJEr322mvy+/3y+Xzq3r17IsuFxQiiAAAAQArJynHob3vvj/sYsYq2tPeTTz7R888/rxdffFF5eXlasWKFHn300ZjHROogiFrM7XbL7XZLkjwej8XVAAAAINnZbLY2L5tNhGHDhumpp55SdXW18vPz9cILL+i0006T3W5Xbm6uamtrm/ru379fTqdT3bp1k9/v14svvmhh5bACQdRiLpdLLpdLklReXq7i4mKLK4qutLpSI/ILrS4DAAAASaZfv3765S9/qWuuuUbSwc2K5syZI0k67bTT9Oyzz2rixIkaMmSIfvOb3+j111/XuHHj1K1bNw0fPlzV1dVWlo8EsxmGYVhdBA5qDKLPPPOM+vfvH7bPtUVz9PSmXye4sv+Yu26VZp5wumXjAwAAdDT19fWSpOzsbIsrQbqx8mcrI+EjAojJknmrrS4BAAAAiAlBFEgxS+YTRAEAAJDaCKIAAAAAgIQiiAIAAAAAEoogCgAAAABIKIIoAAAAACChCKIAAAAAgIQiiAIAAABos7ffflsXXnihJk2apHHjxumnP/2pQqFQu+83duxYffnll21+3YUXXqi1a9e22O+OO+7QqFGjNGnSJE2cOFFXXHGFvv766/aUKknaunWrTj755Ha/PpHq6urUv39/q8s4RKbVBQAAAABILTt27NBvfvMbLV68WL1795YkffHFF7LZbBZXFt3VV1+tqVOnSpKefvppzZs3T48++qhl9TQG94yMjjc/SBAFAAAAUsxL36yTN9AQt/vnZHbSJX1OiNi+a9cu2e12HXbYYU3Xjj/++KZ//vrrr3X//fdrx44dkqTLL79cU6ZM0cKFC/XGG28oEAgoMzNTv/71rzVkyJBm96+pqdGcOXO0bds2+Xw+jR07Vrfeeqsk6Z///KfuvvtuBYNBDRo0SMFgsM3vzzAMeTyepvoDgYCuu+467dmzRz6fTwMGDNC9996rnJwcSdKiRYv03HPPyTAMZWZmNguvfr9fs2bNUk5Oju666y7t2rVLd9xxh7Zv364jjjhChx12mPr06aPp06dr/vz5qqiokNfr1b/+9S8tXLhQH374oRYsWCBJOvLII3XvvfcqPz9fixcvltvt1hNPPCFJeu+99/Tss8/q+eef19q1a3Xvvffq5JNP1j//+U8Fg0E9+OCDGjRokCTphRde0LPPPqucnBydddZZbf4exRtBFAAAAEgx3kCD6gJ+y8bv37+/hg4dqrFjx+qUU07RkCFDNHHiROXn5ysQCOjGG2/U9OnTdd5550mSdu/eLUmaNGmSrrzySknSZ599pjvuuEPLly9vdv877rhD1113nU499dSmkLhs2TKdeeaZuvXWW/XAAw9o+PDh+uCDD7R48eJW171gwQK98sor2r17t+x2u/7yl79Ikux2ux5++GF1795dhmFo9uzZ+stf/qJrr71Wa9eu1eOPP64XXnhBhx9+uA4cOCDpYBiXpP3792vatGkaPny4rr/+eknSnDlzNHjwYN18882qqanR5MmT1adPn6Y6Pv30U7366qvq2bOnKioq9NBDD2nx4sXKz8/Xk08+qV/96lf605/+1OL7+eabb3Tfffdp9uzZ+tvf/qY//OEPWrBggSoqKjR//ny98sorOvzww/X//t//a/X3KFEIoknIX9+g+jpf2DYjZERsk6SsHEfSL4kAAABAbHIyO1l6/4yMDM2fP19ff/21/vGPf2j16tV66qmntGjRIvn9fvl8vqYQKkk9evSQJG3YsEFPPfWU9u7dK7vdrs2bN6u+vl7Z2dlNfb1erz788EPt3LnzkGubN2/WN998I7vdruHDh0uSRo4cqYKCgla/r+8vzV20aJFuvvlmLV68WIZhqKSkRKtWrVIwGFRtbW3TTO3KlSs1adIkHX744ZKkzp07N92voaFBU6ZMUXFxsSZPntx0/aOPPtLtt98uSerVq5fGjBlzSB2nn366evbsKUlau3atRo0apfz8fEkHZ48ff/zxVs30/uAHP9CJJ54oSRoyZIieffbZpvFHjx7dVPOUKVP0xz/+sdXfp0QgiCahWac/psw6Z8T2Kd1mRWwbMLxQ96+cRhgFAABIY9GWzSZS37591bdvX1122WW6+uqr9e6772rkyJFh+/r9fk2fPl1//vOfdcIJJ8jj8Wjo0KHy+/2HBFHDMCRJL730krKysg65x8aNG5vdt71/7z333HM1a9Ys7d69W++//77Wrl2rv/zlL8rNzdVzzz2njz76qMV7ZGZmaujQoXr33Xc1YcIEdeoUPsD/d42NS35b6mu32w/ZAMrnO3RC6vvfn4yMjIjhNRmzQcd7KjbNbVxTKZ/XumUaAAAASH/V1dUqKytr+nrfvn3aunWrCgoKdOyxxyo7O1tvvPFGU/vu3bvl9/vV0NCgo446SpL0/PPPh7230+nUsGHD9PTTTx8y3vbt29WnTx8Fg8GmkLhmzRp9++237XoPH374obp3765u3bpp//796tatm3Jzc+XxePTKK6809Rs7dqxef/31puddDxw40LQ812az6Z577tGRRx6pm266SfX19ZKkH//4x0332Llzp1auXBmxjmHDhun9999XdXW1pIPPdp522mmy2+065phjVF5ervr6egUCgUO+p9H8+Mc/1vvvv6+amhpJ0t/+9re2fXMSgBnRJHT/qmn6YdEPw7ZNHzRX89fPbHa9vs6vK3vPjnNlAAAAwMHNfZ544glt3bpV2dnZCgaDuuCCC+RyuSRJTzzxhObMmaM//vGPstlsuvzyy3XZZZdpxowZuvjii9W9e3ede+65Ee//8MMP64EHHtB5550nm82mzp0765577tERRxyhRx55RHfffbdCoZB+9KMfacCAAa2uu/EZUcMw5HA49OijjyojI0OTJ0/WihUrdM4556hHjx4aOnSovvvuO0nSKaecomnTpunqq6+WzWZTp06dmm1WdOedd+oPf/iDiouL9dRTT+lXv/qVbr/9dp177rk6/PDDdcIJJ6hLly5ha+rXr59++ctf6pprrpF0cLOiOXPmSJIGDx6s0aNH67zzzlOvXr100kknad26dS2+z379+mnatGm64oorknazIpvROPcNy5WXl6u4uFjPPPNMxHN+ri2ao6c3/brZ9fo6X9OS3b/tvV/Zzqxmfcwwd90qzTzh9LjcG60T6WcAAACkp8ZZtu8vX0Vyq6+vV2ZmpjIzM7Vnzx5deumleuihh5qe50wWVv5sMSNqMbfbLbfbLUnyeDwWVwMAAAAgVpWVlbr99ttlGIYaGhp0+eWXJ10ItRpB1GIul6tpCUPjjCgAAACA1DVgwAC99tprVpeR1NisCAAAAEhidru9VUd5AG0VCoWUkWFNJCSIAgBSzpJ5q60uAQASJjMzU/X19WJrF5jN7/crM9OaRbIszQUApJwl81dr4ozRVpcBAAlhs9nUrVs37d69W9nZ2bLb7VaXhDTQGEKtmhEliAIAAABJzm63q0ePHgoEAizThSlycnIsmw2VCKIAAABASmg8w7JTp05WlwLEjGdEAQAAAAAJRRAFAAAAACQUQRQAAAAAkFA8IwokEcMw5PP6o/cJGaqv80Vsz8pxyGazmV0aAAAAYBqCKJps2r9La2uq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IJpE8vLyNHXqVOXl5VldCgAgRfFZAgCIVSI+S3hGFAAAAACQUMyIAgAAAAASiiAKAAAAAEgogigAAAAAIKEIogAAAACAhCKIAgAAAAASiiAKAAAAAEgogigAAAAAIKEIogAAAACAhCKIAgAAAAASiiAKAAAAAEgogigAAAAAIKEIoilm7969mjlzps4++2xdccUVKisrs7okAECKefXVV3X11VfrjDPO0LPPPmt1OQCAFOP3+/Xggw/qJz/5icaNG6frr79en3/+eZvuQRBNMY888oh69Oih119/XTfccIPuuusu7d+/3+qyAAApJC8vT1deeaVOP/10q0sBAKSgYDCoI444Qo8//riWLl2qiy++WHfeeae8Xm+r70EQTSFer1fvv/++rrrqKmVnZ2vkyJHq06ePPvjgA6tLAwCkkFGjRmnkyJHKzc21uhQAQArq3Lmzpk6dqvz8fGVkZOjMM89UZmamqqqqWn2PzDjW1+F5vV698MIL2rBhg7788kvV1tbqzjvv1Pjx45v19fv9WrBggd5++23V1taqb9++uuaaa3TKKac09dm6das6d+6sww8/vOlanz59tHnz5oS8HwBA4pn9WQIA6Hji/VlSVVWl2tpa9e7du9U1MSMaR/v27VNJSYm2bNmioqKiqH0feOABvfTSSzrrrLN08803KyMjQzNnztS6deua+hw4cEBOp/OQ1zmdTh04cCAu9QMArGf2ZwkAoOOJ52eJz+fTnDlzdMUVV7RppQ1BNI7y8vL0yiuv6O9//7tuuOGGiP02bNigFStW6Nprr9WNN96o888/X3/4wx90xBFH6Mknn2zq17lzZ9XV1R3y2rq6OnXu3Dlu7wEAYC2zP0sAAB1PvD5LAoGAfvvb36p3796aOnVqm2oiiMaRw+FQXl5ei/1WrVolu92u888/v+laVlaWJkyYoC+++ELV1dWSpKOPPloHDhxQTU1NU7/Nmzfr2GOPNb94AEBSMPuzBADQ8cTjsyQUCmnOnDmy2WyaNWuWbDZbm2oiiCaBr776SkcffXSzZbfHHXecJGnTpk2SpJycHI0cOVLPPvusfD6f1qxZo6+//lojR45MeM0AgOTS2s8S6eBvsH0+n0KhkILBoHw+n4LBYELrBQAkn7Z8ljz88MPatWuX7r77bmVmtn3rITYrSgK7du0K+xuKxms7d+5sunbbbbfpvvvu03nnnadevXpp9uzZ6tq1a8JqBQAkp7Z8ljz33HMqKSlp+vr555+PuGkFAKDjaO1nyfbt2/XGG2/I4XAcMns6d+5cnXjiia0aiyCaBHw+nzp16tTsusPhaGpv1K1bNz300EMJqw0AkBra8lly1VVX6aqrrkpYbQCA1NDaz5IjjjhCq1evjmksluYmgaysLDU0NDS77vf7m9oBAIiGzxIAQKwS+VlCEE0CeXl52rVrV7Prjdd69uyZ6JIAACmGzxIAQKwS+VlCEE0CRUVF2rp1a7OjWTZs2NDUDgBANHyWAABilcjPEoJoEhgzZoyCwaBef/31pmt+v19Lly7VwIEDlZ+fb2F1AIBUwGcJACBWifwsYbOiOFu0aJE8Hk/TdHZpaal27NghSbrooouUm5urgQMH6owzztDTTz+tvXv3qnfv3lq+fLm2b9+u22+/3cryAQBJgM8SAECsku2zxGYYhmHqHXGISy65RNu3bw/b9uKLL+rII4+UdHAHqgULFujtt9+Wx+NRnz59dM011+jUU09NZLkAgCTEZwkAIFbJ9llCEAUAAAAAJBTPiAIAAAAAEoogCgAAAABIKIIoAAAAACChCKIAAAAAgIQiiAIAAAAAEoogCgAAAABIKIIoAAAAACChCKIAAAAAgIQiiAIAAAAAEoogCgAAmrz00ksaO3as/vWvfzVdW7ZsmUaPHq1ly5ZZWNl/vPHGGxozZoy+/vprq0sBALQTQRQAkLb+9a9/afTo0VH/XHLJJVaXmTRqa2v13HPP6dxzz9WRRx4Z17E+/vhjjR49Wj//+c9b7HvPPfdo9OjReueddyRJ48aNU35+vp588sm41ggAiJ9MqwsAACDeevfurbPOOitsW25uboKrSV4vvfSS9u/frylTpsR9rJNPPln5+fkqKytTdXW18vPzw/bzeDx6//33lZubq9GjR0uSMjMzdckll2jevHlav369Bg0aFPd6AQDmIogCANJe7969ddVVV1ldRlILBAJ64403NGjQIPXu3Tvu42VkZGj8+PEqKSnR8uXL9bOf/SxsP7fbLZ/Pp3PPPVdZWVlN188880w99thjeu211wiiAJCCWJoLAMD3jB49WjfffLN2796t++67TxMnTpTL5dL111+vTz/9NOxrvF6vnn32Wf30pz+Vy+XSueeeq5///Odat25ds74333yzRo8eLZ/Pp2eeeUaXXXaZzjjjDD377LNNfVatWqXi4mK5XC5NmjRJc+fOVW1trS655JJDlhLfe++9Gj16tDZs2BC2rgULFmj06NFyu90tvu+PP/5Yu3bt0pgxY1rs22jHjh362c9+JpfLpZUrVzZd37Nnj+bPn68pU6bozDPP1MSJE/XrX/9a33zzzSGvP/fcc2Wz2bRs2TIZhhF2jKVLl0qSJkyYcMj1bt26aciQIVq5cqW8Xm+rawYAJAeCKAAA/8Xj8eimm25SZWWlzj77bI0ePVrl5eX6xS9+0SxM7d+/XzfccINKSkrUpUsXTZo0SaNHj1ZFRYVmzJih999/P+wYv/nNb7R8+XINGTJEP/nJT5qeyXzzzTf1m9/8Rlu3btU555yjcePG6YsvvtBtt92mQCBwyD3OP//8ptf8t2AwqKVLl+qwww5rWtIaTVlZmSTp+OOPb/kbJKmyslI33nijduzYoYceeqgpwG7btk3XXHON/v73v+uoo47ShRdeqB//+Mf6+OOPdcMNNxwSmo844ggNHTpU3333XdiQ/80332jjxo364Q9/qH79+jVrP/744+X3+/X555+3qmYAQPJgaS4AIO1t27btkBnH7zv++OM1bNiwQ65t2rRJkydP1i233KKMjIO/sz3ppJM0d+5cLV68WL/4xS+a+v7hD3/Q5s2bNXPmTJ133nlN1/fs2aPi4mI99NBDOvXUUw9ZVipJu3bt0sKFC9W1a9ema7W1tXr00UfVuXNnPf300yooKJAkFRcX6xe/+IXKy8t1xBFHNPU/8cQTVVhYqBUrVmjatGnq3LlzU9vHH3+smpoaXXzxxXI4HC1+j9avX6+MjAwVFRW12PeLL77Q7bffrszMTM2fP/+Q19x3333avXu3Hn74YZ166qlN13/605+quLhYc+fOVUlJSdP1CRMm6JNPPtHSpUt10kknHTJOpNnQRv3795ckff7554eMBQBIfsyIAgDS3rZt21RSUhL2z9q1a5v179y5s66//vqmECod3KnVbrdr48aNTdf27t2r9957TyeddNIhIVSSunfvrilTpmjv3r1Ns43fd+WVVx4SQiXpgw8+0IEDB3Tuuec2hVDp4OY811xzTdj3dv7558vr9WrFihWHXH/jjTckSRMnToz0bTlETU2NcnNzWwytH374oW699VZ16dJFTzzxxCEhtKKiQp9//rnOOeecZsGwoKBA5513nr755ptDZpVHjRqlww47TKtWrVJdXV3T9UAgoLffflsOhyPiRlM9evSQdHCJMAAgtTAjCgBIe6eeeqoefvjhVvc/+uijlZOTc8i1zMxM9ejRQx6Pp+naxo0bFQwG1dDQEHbGdevWrZKkLVu2aPjw4Ye0HXfccc36N56LecIJJzRrGzhwoOx2e7Pr55xzjv74xz/qjTfeaArDu3fv1po1a/SjH/1IhYWFLbzbg/bv369evXpF7fPee+/pH//4h/r27auHHnpI3bt3P6S9cdntnj17wn4/vv3226b/7dOnjyQ1Bc2XX35ZbrdbkyZNkiSVlpZq7969crlc6tKlS9h6Gq/v27evVe8RAJA8CKIAAPwXp9MZ9rrdblcoFGr6ev/+/ZIOLmtdv359xPvV19c3u9Y4m/d9jTOC/x3wpIO7zB522GHNrnfp0kVnnHGGli9frm+++UZ9+vTRsmXLFAwGWz0bKklZWVny+/1R+3zxxRcKBoM64YQTwtbY+P348MMP9eGHH0a8z4EDBw75esKECXr55Ze1dOnSpiDa0rJcSU31ZmdnR60bAJB8CKIAALRTY2C99NJLddNNN7XptTabLeL99uzZ06wtFApp3759YWctJ02apOXLl2vJkiWaMWOG3nzzTTmdTp1xxhmtruewww5TTU1N1D7XXnutPvjgA7388suy2+3N3nNj/TNmzNBFF13U6rH79u2rAQMG6Msvv9TmzZvVpUsXffzxxzryyCObPTf6fY3Bt1u3bq0eCwCQHHhGFACAdhowYIBsNpu++OILU+7Xt29fSQo7u/rll18qGAyGfd3xxx+vvn376p133tHHH3+srVu36qyzzmrTTGGfPn3k9/tVXV0dsY/D4dB9992n0047TS+++KIee+yxQ9oblxu35/vROPP55ptv6q233lIwGGw63iWSxqW+jct8AQCpgyAKAEA75eXl6YwzztDnn3+uv/3tb2HPwtywYUPYpbnhjBw5Up07d9abb76pbdu2NV0PBAJasGBB1Neef/752r9/vx588EFJarZ5UksGDx7cVG80DodDc+bM0fDhw/XSSy9p/vz5TW0DBw7UwIEDtWLFimabJ0kHZ3U/++yzsPd1uVzKzs7W22+/raVLlyojI0Pjxo2LWsuXX355SO0AgNTB0lwAQNqLdnyLJF1xxRXNjldprdtuu01VVVV68skn9dZbb+n4449Xbm6uampqtHHjRm3dulWvvPJKq2Ynu3TpomnTpumhhx5ScXGxxo4dK6fTqY8++kgOh0M9e/aMOEN49tln66mnntLOnTvVv3//sOduRjNy5Eg9/vjj+uSTT1pc0tupUyfde++9+u1vf6u///3vMgxDN998syTpt7/9rW655Rbdfffdevnll/XDH/5QWVlZ2rFjhz7//HPt27dPbre72T2dTqdOP/10vfXWW9q7d6+GDRum/Pz8iDUYhqGysjIdc8wxh+wwDABIDQRRAEDaazy+JZKLL7643UG0a9eueuKJJ7R48WK9++67crvdCoVC6tGjh4qKivSzn/0s7CZDkUycOFFdunTR888/r+XLl8vpdGrEiBG6/vrrdfHFF6t3795hX+d0OjVq1Ci9/fbbbZ4NlaQjjzxSp5xyilauXKkZM2a0eIxLYxi966679PLLL8swDM2YMUNHHXWUFixYoBdffFHvv/++li1bpoyMDOXl5enEE0/UmDFjIt5zwoQJeuuttyRJ5557btTx/+///k/V1dWaPn16m98rAMB6NiPcOiIAAJBUtm7dqssvv1xnnHGG7r777rB9fvazn2n79u1avHhxxJ1/oykrK9Ott96qX//61zr77LNjLTmu7r33Xq1du1Z/+9vfIh7vAgBIXjwjCgBAEqmtrW12jIrP52vaGGjUqFFhX/fRRx9p8+bNcrlc7QqhkjR06FANGzZMzz333CHH1CSbqqoqvfvuu/rpT39KCAWAFMXSXAAAkshnn32m3/3udzrllFN0+OGHa9++ffrnP/+p7du366STTtLYsWMP6f/qq69qx44deuONN+RwOHTFFVfENP7NN9+sd955RzU1NVGf0bTSjh07NHXqVF1wwQVWlwIAaCeW5gIAkESqqqq0YMECff7559q7d68kqXfv3ho7dqwuu+yyZs+yXnLJJaqpqVFBQYGuv/56DR8+3IKqAQBoG4IoAAAAACCheEYUAAAAAJBQBFEAAAAAQEIRRAEAAAAACUUQBQAAAAAkFEEUAAAAAJBQBFEAAAAAQEIRRAEAAAAACUUQBQAAAAAkFEEUAAAAAJBQ/x/67jZeD+ZteQAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9362161e",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0c36a3e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:49.081179Z",
     "iopub.status.busy": "2024-09-10T16:02:49.080777Z",
     "iopub.status.idle": "2024-09-10T16:02:49.098295Z",
     "shell.execute_reply": "2024-09-10T16:02:49.097794Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "231bab8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:49.100561Z",
     "iopub.status.busy": "2024-09-10T16:02:49.100182Z",
     "iopub.status.idle": "2024-09-10T16:02:49.142351Z",
     "shell.execute_reply": "2024-09-10T16:02:49.141786Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:49 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:49\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=283183;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=352370;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=225391;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=874086;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=337827;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=476425;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=942007;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=852535;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=695219;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=597571;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=781292;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=951969;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=436670;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=799150;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=218921;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=347808;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=540671;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=810667;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=289073;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=474129;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=129570;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=350165;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=795889;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=561466;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d65a1e8e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:49.144741Z",
     "iopub.status.busy": "2024-09-10T16:02:49.144366Z",
     "iopub.status.idle": "2024-09-10T16:02:49.676915Z",
     "shell.execute_reply": "2024-09-10T16:02:49.676204Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7113de4f",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e8db813",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8146d60c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:49.679523Z",
     "iopub.status.busy": "2024-09-10T16:02:49.679124Z",
     "iopub.status.idle": "2024-09-10T16:02:50.647105Z",
     "shell.execute_reply": "2024-09-10T16:02:50.646399Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=444225;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=349587;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=330066;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=166666;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=561281;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=995697;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139995168561568\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5530cd8c",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "281ad197",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:50.649599Z",
     "iopub.status.busy": "2024-09-10T16:02:50.649186Z",
     "iopub.status.idle": "2024-09-10T16:02:51.075631Z",
     "shell.execute_reply": "2024-09-10T16:02:51.074896Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:50 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:50\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=99743;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=647541;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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TU0VnAZYaqtlz8QiF67pHyylNNCbZn02pYHethXHhcpyu4orAHQK5bGNyuVyyuVykqRarWZ0dLTgRABnb7UtXGOVVwB4gfIIwFkZ2rwuTz565MzxLli45ly2CFltZRkAXozyCMBZGd65KdUvPz3vbly3LFxzLlOLu7ksA8BSsmAOAGelyIVrimCVVwB4gfIIwFk7vXBNkrYtXFOU1VaWAeDFKI8A0MJqKssA8GKURwAAAFpSHgEAAGhJeQQAAKAl5REAAICW7PMIAB1sfN9Epusz6RvoPad9KgFgqSiPANDBxvdP5OSzjVx0cb/yCEChTFsFAACgJeURAACAlpRHAAAAWlIeAQAAaEl5BAAAoCXlEQAAgJZs1QFAV9m+a8vcvoer4bwA0Cn8DQhAVylqr0N7LAKw2pm2CgAdqlFrplmfSZI06zNp1JoFJwJgNVMeAaADNWrNjO05mGZ9NknSrM9mbM9BBRKAwiiPANCBqgcO5/iR2ryx40dqqR44XFAiAFY75REAOtCxyecXHn/qRJuTAMALLJgDAMtsfN/E3Eqti114Z2jzujz56JEzxy9fu9TxAGBR3HkEgGU2vn8ij332iYzvn1j0McM7N2X9xsF5Y+s3DmZ456aljgcAi6I8AkAH6h8sZWTvjpQGepIkpYGejOzdkf7BUsHJAFitlEcA6FD9g6WUBl54wqQ00Ks4AlAo5REAAICWlEcAAABaUh4BAABoSXkEAACgJfs8/pDp6el86EMfyv/+3/87U1NT+cmf/Mn8h//wH/Kv//W/LjoaAABAodx5/CGzs7N5xStekY985CN54IEH8va3vz233357Tp48WXQ0AACAQimPP2RgYCDXX399NmzYkAsvvDBvetOb0tvbm8OHDxcdDQDO2vi+iXz1049nfN9E0VEAWAE6ctrqyZMnc++99+bQoUP55je/mRMnTuT222/Prl27znjv9PR0Pvaxj+XBBx/MiRMn8spXvjI33nhjXvva1553jsOHD+fEiRO59NJLz/uzAKDdxvdP5OSzjVx0cX+2795SdBwAulxH3nk8fvx47rnnnkxOTmbbtm0v+d4PfOADue+++/LmN785t956ay688MLcdttt+frXv35eGRqNRu688868613vypo1a87rswAAALpdR955HBoayv3335+hoaF861vfyk033bTg+w4dOpSHHnooN998c97xjnckSd7ylrfk+uuvz1133ZW77rpr7r3vec97Mj4+vuDnvPvd787o6Ojcr2dmZrJnz55ceumluf7665fuiwEAAHSpjiyPfX19GRoaavm+r3zlK+np6cnIyMjcWH9/f3bv3p2777473/nOd7Jhw4YkyUc+8pFFnfv73/9+7rzzzlxwwQW54447csEFF5zblwAAAFhBOrI8Ltbjjz+eyy67LIODg/PGr7jiiiTJE088MVceF+sP//APc+zYsfzhH/5henvP77fnmWeeybFjxxZ8bXJy8rw+G4DVYfuuLZmuz6RvoKv/ygZgBejqv4mOHTu24B3K02PPPPPMWX3e0aNH8/nPfz59fX3z7mb+/u//fn76p3/6rPONjY3lnnvuOevjAOA0C90A0Cm6ujw2Go2USqUzxvv6+uZePxuveMUr8vDDDy9JtiQZGRnJVVddteBrk5OTufPOO5fsXAAAAMupq8tjf39/ms3mGePT09NzrxfpkksuySWXXFJoBgAAgKXQkVt1LNbQ0NCCzxSeHlPcAChao9ZMsz6TJGnWZ9Konfk/PQGgG3R1edy2bVuefvrp1Gq1eeOHDh2aex2A5bF915b8zC9sy/Zdnsl7MY1aM2N7DqZZn02SNOuzGdtzUIEEoCt1dXl84xvfmNnZ2YyNjc2NTU9P54EHHsiVV1551iutArB423dvyWt+8acs6PISqgcO5/iR+f+D8/iRWqoHDheUCADOXcc+8/iZz3wmU1NTc1NQH3nkkXz3u99Nklx33XVZs2ZNrrzyylxzzTW5++6789xzz+XSSy/NF77whRw9ejTvf//7i4wPADk2+fzC40+daHMSADh/HVseP/nJT+bo0aNzv3744YfnVkK99tprs2bNmiTJHXfckQ0bNuSLX/xipqamsnXr1nzwgx/Mq1/96iJiv6RKpZJKpZIkmZqaKjgNAMttaPO6PPnokTPHL19bQBoAOD8XnDp16lTRIVajarWa0dHRfPSjH83w8HDRcQBYBqefefzhqavrNw5mZO+O9A+eudXUUp/73lu/lGZ9NqWBnvzyn16z7OcEYGXr6mceAaCT9Q+WMrJ3R0oDPUmS0kBP24pjkQv1jO+byFc//XjG90205XwAtIfyCADLqH+wlNLAC0+JlAZ623L3r+iFesb3T+Sxzz6R8f3KI8BKojwCwApjoR4AloPy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lvIIAEBHG98/kZPPNnLRxf3KIxTItFUAAABaUh4BAABoybTVH/EHf/AHeeSRR/JP//RP2bBhQ2666aZcddVVRccCAAAolPL4I37pl34p733ve9PX15dvfvObed/73pd7770369evLzoaAABAYUxb/RGbN29OX19fkuSCCy5Is9nMM888U3AqAACAYnXknceTJ0/m3nvvzaFDh/LNb34zJ06cyO23355du3ad8d7p6el87GMfy4MPPpgTJ07kla98ZW688ca89rWvPefzf+hDH8oDDzyQ6enp/Nt/+2+zdevW8/k6AAAdY/uuLXPbXgCcjY68ahw/fjz33HNPNmzYkG3btuWxxx570fd+4AMfyJe//OW8/e1vz2WXXZb9+/fntttuy5/8yZ/kVa961Tmd/33ve1/e+9735mtf+1r+z//5P7ngggvO9asAAHQUW10A56ojy+PQ0FDuv//+DA0N5Vvf+lZuuummBd936NChPPTQQ7n55pvzjne8I0nylre8Jddff33uuuuu3HXXXXPvfc973pPx8fEFP+fd7353RkdH54319PTkNa95TT71qU/lsssuy44dO5bo2wEArD7ueEL368g/vX19fRkaGmr5vq985Svp6enJyMjI3Fh/f392796du+++O9/5zneyYcOGJMlHPvKRc8oyOzub//t//+85HQsAwAvc8YTu15HlcbEef/zxXHbZZRkcHJw3fsUVVyRJnnjiibnyuBhTU1M5ePBgrrrqqvT19eWv//qv89hjj73onc9WnnnmmRw7dmzB1yYnJ8/pMwEAAIrQ1eXx2LFjC96hPD12tqukXnDBBfn85z+fD3/4wzl16lQuvfTS/Nf/+l/zUz/1U+eUb2xsLPfcc885HQsAANBJuro8NhqNlEqlM8ZPb7XRaDTO6vMGBwfzJ3/yJ0uSLUlGRkZy1VVXLfja5ORk7rzzziU7FwDAStSoNdOszyRJmvWZNGrN9A+e+fMfsPy6ujz29/en2WyeMT49PT33epEuueSSXHLJJYVmAADoVo1aM2N7DqZZn02SNOuzGdtzMCN7dyiQUIALiw5wPoaGhhZ8pvD0mOIGANC9qgcO5/iR2ryx40dqqR44XFAiWN26ujxu27YtTz/9dGq1+ReVQ4cOzb0OAEB3Ojb5/MLjT51ocxIg6fLy+MY3vjGzs7MZGxubG5uens4DDzyQ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aEl5BAAAoCXlEQAAgJaURwAAAFpSHgEAAGhJeQSALnHq1Kn81m/9Vn72Z382Dz300KJfA4CloDwCQJe44IILcvvtt+df/It/kT/6oz/K0aNH51771Kc+lb/927/Nrl278qY3vanAlACsVMojAHSRiy++OHfccUdqtVr27t2b2dnZPP744/mLv/iLXHbZZXnve99bdEQAVqgLTp06daroEADA2fmzP/uzfOpTn8ov//Iv59FHH823v/3t3HXXXRkeHi46GgArlPIIAF1oeno6N998cx5//PEkyW/8xm/kne98Z8GpAFjJTFsFgC7U19eXf/Nv/s3cP7/1rW8tOBEAK53yCABd6NChQ/nEJz6R9evXZ3p6On/0R39UdCQAVjjlEQC6zMmTJ7N379709PTkT/7kT/KGN7whX/rSl7Jv376iowGwgimPANBlPvShD+Xb3/52brnllmzdujW33XZbfvzHfzx/+qd/msOHDxcdD4AVSnkEgC7y4IMP5sEHH8y/+3f/Lr/wC7+QJFm7dm1++7d/O41GI3v37s3MzEzBKQFYiZRHAOgS3/72t/PhD384Q0ND+S//5b/Me+3Vr3513vWud6Varebuu+8uKCEAK5mtOgAAAGjJnUcAAABaUh4BAABoSXkEAACgJeURAACAlpRHAAAAWlIeAQAAaEl5BAAAoCXlEQAAgJaURwAAAFpSHgEAAGhJeQQAAKAl5REAAICWlEcAAABa+v/+bfsq/w1FxgAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1603b022",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0bf0b761",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:51.078218Z",
     "iopub.status.busy": "2024-09-10T16:02:51.077818Z",
     "iopub.status.idle": "2024-09-10T16:02:51.619408Z",
     "shell.execute_reply": "2024-09-10T16:02:51.618716Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">16:02:51 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m16:02:51\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=631492;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=976003;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=132579;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=217320;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=549485;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=794051;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f65008e",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1cee41b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-10T16:02:51.621713Z",
     "iopub.status.busy": "2024-09-10T16:02:51.621475Z",
     "iopub.status.idle": "2024-09-10T16:02:52.522002Z",
     "shell.execute_reply": "2024-09-10T16:02:52.521097Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=621278;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=693738;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=899939;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=179781;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=431823;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=922770;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
