{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1d6dd16b",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83aa1975",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91f08e6e",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ee8cecf",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "02364ec7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:44.749407Z",
     "iopub.status.busy": "2024-05-31T23:33:44.749212Z",
     "iopub.status.idle": "2024-05-31T23:33:44.755491Z",
     "shell.execute_reply": "2024-05-31T23:33:44.754895Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2d0aacf4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:44.757970Z",
     "iopub.status.busy": "2024-05-31T23:33:44.757610Z",
     "iopub.status.idle": "2024-05-31T23:33:47.909064Z",
     "shell.execute_reply": "2024-05-31T23:33:47.908382Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:46 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:46\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=350260;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=838856;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=888687;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=776346;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=281396;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=102992;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "49ebe3dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:47.911885Z",
     "iopub.status.busy": "2024-05-31T23:33:47.911476Z",
     "iopub.status.idle": "2024-05-31T23:33:47.944456Z",
     "shell.execute_reply": "2024-05-31T23:33:47.943881Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "804a4e0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:47.946970Z",
     "iopub.status.busy": "2024-05-31T23:33:47.946760Z",
     "iopub.status.idle": "2024-05-31T23:33:50.511206Z",
     "shell.execute_reply": "2024-05-31T23:33:50.510532Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:48 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:48\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=283461;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=752526;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:50 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:50\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=287084;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=404449;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bdd56aff",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e8dc967f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:50.513631Z",
     "iopub.status.busy": "2024-05-31T23:33:50.513245Z",
     "iopub.status.idle": "2024-05-31T23:33:50.516612Z",
     "shell.execute_reply": "2024-05-31T23:33:50.516051Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3741834",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "74d41063",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:50.518948Z",
     "iopub.status.busy": "2024-05-31T23:33:50.518584Z",
     "iopub.status.idle": "2024-05-31T23:33:50.521712Z",
     "shell.execute_reply": "2024-05-31T23:33:50.521204Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "478f89be",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dee8cb80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:50.524068Z",
     "iopub.status.busy": "2024-05-31T23:33:50.523603Z",
     "iopub.status.idle": "2024-05-31T23:33:51.164926Z",
     "shell.execute_reply": "2024-05-31T23:33:51.164227Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=193149;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=716553;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=382005;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=604697;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=484714;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=814481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=888101;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=420872;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=166529;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=939388;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=247543;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=888280;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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WosXCplA97fXy2UbGhrinnvuiXvvvTcOOeSQmDJlSpxyyikxYMCAlPUBAADQjez1TOa9994b11xzTRx++OHx6quvxo033hh///d/H1/72tfi2WefTVkjAAAA3cRez2SWlJTEGWecEWeccUasXr06HnjggXj00Ufjsccei8cffzze8573xJQpU2LSpEkxdOjQlDUDOVRX0/L92Nkd2airqW+xvbikKDKZTGeUBQBAnujw7rIREWVlZXHFFVfEpZdeGsuXL48HHnggnnnmmbjlllti0aJF8aEPfSimTJkSxx13XBQWJhkSyJELh81ttf28gXNabBs1vizmLZ0haAIA9GBJE1+fPn3i+OOPj+OPPz7+/Oc/x8MPPxxLliyJZ555Jn7961/HvvvuG/fdd1/KIYEuUFxSFKPGl8Wq5as7dJ5Vy1dHfW1D9C0tTlMYAAB5p9OmFQcNGhTnnXdeHHPMMXHDDTfEihUrYuvWrZ01HNCJMplMzFs6I+prW3900cwx82Phitm7Ha+raWhzBhQAgJ6hU0JmbW1tPProo/HAAw/E7373u8hms9G3b9848cQTO2M4oAtkMpk2ZyAzBW33AQCgZ0saMn/729/GkiVL4sknn4z6+vrIZrMxevTomDJlSpx00klRUlKScjgAAADyTIdD5oYNG+LBBx+MBx98MNavXx/ZbDYGDhwY06ZNiylTpkRZWVmCMgEAAOgO9jpkPvbYY7FkyZL47W9/Gzt27IiCgoI4+uij7SILANCLLV6wLKbOmpDrMoAc2usk+LWvfS0iIg444ICYPHlyTJ48Od7znvckKwwAgO5n8UIhE3q7vQ6ZJ598ckyZMiU++MEPpqwHAACAbmyvQ+ZXvvKVlHUAAADQAyS7cXL79u1x9913R0VFRfzxj3+M+vr6+MUvfhEREa+88kosXrw4zj777Bg+fHiqIQEA8srUmZaJAhSkOEl9fX1cddVV8f3vfz+qqqqitLQ0stlsU/sBBxwQS5YsiYceeijFcAAAeSkf7kVcvGBZrksAerkkIfO2226LFStWxCWXXBL33HNPTJkyZZf2/v37x7hx4+LXv/51iuEAAGjB4oVCJpBbSULm448/HkcddVScf/75kclkIpPJ7Nbnve99b1RVVaUYDgAAgDyV5J7MDRs2xPHHH99qn379+kVNTU2K4bqFioqKqKioiIiI6urq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tm3bFhUVFXHYYYftco/m+vXr413veleK4QAAAMhTSULmWWedFZs2bYqzzjorzj777HjzzTfjzDPP3KXPypUrY+TIkSmGA8hLU2dOyHUJAAA5l+QRJhMnToyrr746HnjggYiIOOmkk2Ly5MlN7c8//3zU1NTEMccck2I4gLw0dZaQCQCQJGRGRJx55pm7zV7uNG7cODvLAgAA9AJJlssCAABAhJAJAABAQkImAAAAyQiZAAAAJJNs4x92VVFRERUVFRERUV1dneNqAAAAuoaQ2UnKy8ujvLw8IiIqKytj+vTpOa4IoPN5VigAYLksAMl4VigA0KkhM5vNxuuvvx5VVVWdOQwAAAB5Isly2SeeeCKeeuqpuPLKK2PAgAEREfGnP/0prr322lizZk1EREycODG+/OUvR58+fVIMCQAAQB5KMpN57733xiuvvNIUMCMibrrppli9enUcddRRccghh8TSpUtjyZIlKYYDAAAgTyUJmatXr44jjjii6efa2tp4+umn46STToobbrgh/vVf/zUOOuggIRMAAKCHSxIyt27dGoMGDWr6+YUXXojGxsY4+eSTIyKisLAwPvShD8W6detSDAcAAECeShIyS0tLY+vWrU0/P/fcc1FQUBBjx45tOlZYWBh1dXUphgMAACBPJQmZ73vf+2L58uWxZcuW2LZtW1RUVMRhhx22yz2a69evj3e9610phgMAACBPJQmZZ511VmzatCnOOuusOPvss+PNN9+MM888c5c+K1eujJEjR6YYDgAAgDyV5BEmEydOjKuvvjoeeOCBiIg46aSTYvLkyU3tzz//fNTU1MQxxxyTYjgAAADyVJKQWVVVFaeccspus5c7jRs3Ln72s59FdXV1iuEAAADIU0mWy5577rlx5513ttrnrrvuinPPPTfFcAAAdJKpMyfkugSgm0sSMrPZbGSz2Tb70LO5KAFA9zd1lus50DFJQmZ7bNy4MUpKSrpqOHLARQkAANjrezIXLVq0y8/PPfdcs/127NgRGzZsiMceeyxGjx69t8MBAADQDex1yLz11lub/pzJZOL555+P559/vsX+Q4YMiUsvvXRvhwMAAKAb2OuQuWDBgoj4y72WV111VUyePDkmTZq0W7+CgoLYd999433ve18UFHTZ6lwAAAByYK9D5rhx45r+fMEFF8RRRx21yzEAAAB6nyTPybzw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CQAAQDJCJgAAAMkImXli8+bNMXv27Dj11FPjE5/4RDz77LO5LgmAbuiee+6JT3/603HiiSfGLbfckutyAOhmGhoa4lvf+lb8wz/8Q0yaNCkuvfTSePHFF/foHEJmnrjhhhti0KBBcd9998Vll10W//Iv/xJbt27NdVkAdDODBw+OCy+8ME444YRclwJAN9TY2Bj7779/fO9734slS5bE2WefHV/84hejtra23ecQMvNAbW1tPPnkk3HRRRdF375947jjjosRI0bEU089levSAOhmjj/++DjuuOOif//+uS4FgG6oX79+ccEFF8TQoUOjoKAgTj755CgsLIzXX3+93eco7MT6eqza2tr46U9/GitXroyXX345tm3bFl/84hdj8uTJu/VtaGiIm2++OR555JHYtm1bHHLIIXHxxRfH0Ucf3dRn7dq10a9fv3jPe97TdGzEiBHx2muvdcn7ASA3Ul9PAOh9Ovta8vrrr8e2bdti2LBh7a7JTOZe2LJlSyxatCjWrFkTI0eObLXvN7/5zbjjjjvilFNOiSuvvDIKCgpi9uzZ8cILLzT1efvtt6O0tHSX15WWlsbbb7/dKfUDkB9SX08A6H0681pSX18f1113XXziE5/YoxUyQuZeGDx4cPz85z+Pn/3sZ3HZZZe12G/lypXx2GOPxSWXXBKXX355TJs2Lb773e/G/vvvHz/4wQ+a+vXr1y9qamp2eW1NTU3069ev094DALmX+noCQO/TWdeS7du3x1e+8pUYNmxYXHDBBXtUk5C5F4qKimLw4MFt9nviiSeiT58+MW3atKZjxcXFMWXKlHjppZeiqqoqIiIOPPDAePvtt2Pjxo1N/V577bU4+OCD0xcPQN5IfT0BoPfpjGvJjh074rrrrotMJhNz5syJTCazRzUJmZ3olVdeiQMPPHC3pbBHHHFERES8+uqrERFRUlISxx13XNxyyy1RX18fy5cvj9///vdx3HHHdXnNAOSf9l5PIv7yzXN9fX3s2LEjGhsbo76+PhobG7u0XgDyz55cS77zne/Em2++GV/96lejsHDPt/Gx8U8nevPNN5v9VmHnsU2bNjUdu+aaa+Ib3/hGnH766fHud7875s6dG/vuu2+X1QpA/tqT68lPfvKTWLRoUdPPt912W4sbQADQe7T3WrJ+/fq4//77o6ioaJdZz/nz58fYsWPbNZaQ2Ynq6+tjn3322e14UVFRU/tOAwcOjOuvv77LagOg+9iT68lFF10UF110UZfVBkD30N5ryf777x/Lli3r0FiWy3ai4uLieOedd3Y73tDQ0NQOAG1xPQGgo7ryWiJkdqLBgwfHm2++udvxnceGDBnS1SUB0A25ngDQUV15LREyO9HIkSNj7dq1uz2eZOXKlU3tANAW1xMAOqorryVCZieaOHFiNDY2xn333dd0rKGhIZYsWRKjR4+OoUOH5rA6ALoL1xMAOqorryU2/tlLd911V1RXVzdNL//yl7+MDRs2RETEWWedFf3794/Ro0fHiSeeGD/60Y9i8+bNMWzYsHjooYdi/fr18YUvfCGX5QOQJ1xPAOiofLuWZLLZbDbpGXuJc845J9avX99s2+233x4HHHBARPxll6abb745Hnnkkaiuro4RI0bExRdfHMccc0xXlgtAnnI9AaCj8u1aImQCAACQjHsyAQAASEbIBAAAIBkhEwAAgGSETAAAAJIRMgEAAEhGyAQAACAZIRMAAIBkhEwAAACSETIBAABIRsgEgF7ijjvuiJNOOin+9Kc/NR178MEHY8KECfHggw/msLL/df/998fEiRPj97//fa5LAWAvCZkAdEt/+tOfYsKECa3+d8455+S6zLyxbdu2+MlPfhKnnXZaHHDAAZ061jPPPBMTJkyIz372s232/drXvhYTJkyIRx99NCIiJk2aFEOHDo0f/OAHnVojAJ2nMNcFAEBHDBs2LE455ZRm2/r379/F1eSvO+64I7Zu3RrnnXdep4/1oQ99KIYOHRrPPvtsVFVVxdChQ5vtV11dHU8++WT0798/JkyYEBERhYWFcc4558SCBQtixYoVMWbMmE6vF4C0hEwAurVhw4bFRRddlOsy8tr27dvj/vvvjzFjxsSwYcM6fbyCgoKYPHlyLFq0KB566KH41Kc+1Wy/ioqKqK+vj9NOOy2Ki4ubjp988slx0003xb333itkAnRDlssC0GtMmDAhrrzyyvjzn/8c3/jGN2Lq1KlRXl4el156aTz33HPNvqa2tjZuueWW+OQnPxnl5eVx2mmnxWc/+9l44YUXdut75ZVXxoQJE6K+vj5+/OMfx8c//vE48cQT45Zbbmnq88QTT8T06dOjvLw8zjjjjJg/f35s27YtzjnnnF2W937961+PCRMmxMqVK5ut6+abb44JEyZERUVFm+/7mWeeiTfffDMmTpzYZt+dNmzYEJ/61KeivLw8li5d2nT8rbfeioULF8Z5550XJ598ckydOjW+9KUvxR/+8IddXn/aaadFJpOJBx98MLLZbLNjLFmyJCIipkyZssvxgQMHxlFHHRVLly6N2tradtcMQH4QMgHoVaqrq+OKK66I1atXx6mnnhoTJkyIysrK+NznPrdbUNq6dWtcdtllsWjRohgwYECcccYZMWHChPjd734Xs2bNiieffLLZMb785S/HQw89FEcddVT8wz/8Q9M9kA888EB8+ctfjrVr18ZHP/rRmDRpUrz00ktxzTXXxPbt23c5x7Rp05pe8381NjbGkiVLYr/99mtaZtqaZ599NiIijjzyyLY/oIhYvXp1XH755bFhw4a4/vrrm8LpunXr4uKLL46f/exn8d73vjf+/u//Pv6//+//i2eeeSYuu+yyXQLx/vvvHx/84AfjjTfeaDbA/+EPf4hVq1bFoYceGocddthu7UceeWQ0NDTEiy++2K6aAcgflssC0K2tW7dul5nCv3XkkUfGhz/84V2Ovfrqq3HmmWfGVVddFQUFf/mu9QMf+EDMnz8/7r777vjc5z7X1Pe73/1uvPbaazF79uw4/fTTm46/9dZbMX369Lj++uvjmGOO2WWpZ0TEm2++Gbfeemvsu+++Tce2bdsWN954Y/Tr1y9+9KMfxfDhwyMiYvr06fG5z30uKisrY//992/qP3bs2CgrK4vHHnssZsyYEf369Wtqe+aZZ2Ljxo1x9tlnR1FRUZuf0YoVK6KgoCBGjhzZZt+XXnopvvCFL0RhYWEsXLhwl9d84xvfiD//+c/xne98J4455pim45/85Cdj+vTpMX/+/Fi0aFHT8SlTpsRvfvObWLJkSXzgAx/YZZyWZjF3OvzwwyMi4sUXX9xlLADyn5lMALq1devWxaJFi5r977//+79369+vX7+49NJLmwJmxF92NO3Tp0+sWrWq6djmzZvjF7/4RXzgAx/YJWBGRLzrXe+K8847LzZv3tw0S/i3Lrzwwl0CZkTEU089FW+//XacdtppTQEz4i8b3Vx88cXNvrdp06ZFbW1tPPbYY7scv//++yMiYurUqS19LLvYuHFj9O/fv81A+vTTT8fVV18dAwYMiO9///u7BMzf/e538eKLL8ZHP/rR3ULf8OHD4/TTT48//OEPu8wGH3/88bHffvvFE088ETU1NU3Ht2/fHo888kgUFRW1uGnToEGDIuIvy3YB6F7MZALQrR1zzDHxne98p939DzzwwCgpKdnlWGFhYQwaNCiqq6ubjq1atSoaGxvjnXfeaXamdO3atRERsWbNmhg/fvwubUccccRu/Xc+9/H973//bm2jR4+OPn367Hb8ox/9aPzrv/5r3H///U1B989//nMsX748/u7v/i7KysraeLd/sXXr1nj3u9/dap9f/OIX8etf/zoOOeSQuP766+Nd73rXLu07l8K+9dZbzX4ef/zjH5v+74gRIyIimkLknXfeGRUVFXHGGWdERMQvf/nL2Lx5c5SXl8eAAQOarWfn8S1btrTrPQKQP4RMAHqV0tLSZo/36dMnduzY0fTz1q1bI+IvS01XrFjR4vnq6up2O7ZzFu5v7ZzJ+7/hLeIvu7Hut99+ux0fMGBAnHjiifHQQw/FH/7whxgxYkQ8+OCD0djY2O5ZzIiI4uLiaGhoaLXPSy+9FI2NjfH+97+/2Rp3fh5PP/10PP300y2e5+23397l5ylTpsSdd94ZS5YsaQqZbS2VjYimevv27dtq3QDkHyETAJqxM4yee+65ccUVV+zRazOZTIvne+utt3Zr27FjR2zZsqXZ2cYzzjgjHnrooVi8eHHMmjUrHnjggSgtLY0TTzyx3fXst99+sXHjxlb7XHLJJfHUU0/FnXfeGX369NntPe+sf9asWXHWWWe1e+xDDjkkRo0aFS+//HK89tprMWDAgHjmmWfigAMO2O0+zb+1M9QOHDiw3WMBkB/ckwkAzRg1alRkMpl46aWXkpzvkEMOiYhodlb05ZdfjsbGxmZfd+SRR8YhhxwSjz76aDzzzDOxdu3aOOWUU/Zohm/EiBHR0NAQVVVVLfYpKiqKb3zjG3HsscfG7bffHjfddNMu7TuXAO/N57FzxvKBBx6Ihx9+OBobG5secdKSnctvdy69BaD7EDIBoBmDBw+OE088MV588cX4r//6r2af9bhy5cpml8s257jjjot+/frFAw88EOvWrWs6vn379rj55ptbfe20adNi69at8a1vfSsiYreNiNoybty4pnpbU1RUFNddd12MHz8+7rjjjli4cGFT2+jRo2P06NHx2GOP7bYRUcRfZmOff/75Zs9bXl4effv2jUceeSSWLFkSBQUFMWnSpFZrefnll3epHYDuw3JZALq11h5hEhHxiU98YrdHjLTXNddcE6+//nr84Ac/iIcffjiOPPLI6N+/f2zcuDFWrVoVa9eujZ///OftmlUcMGBAzJgxI66//vqYPn16nHTSSVFaWhq/+tWvoqioKIYMGdLizN6pp54aP/zhD2PTpk1x+OGHN/tcydYcd9xx8b3vfS9+85vftLnMdp999omvf/3r8ZWvfCV+9rOfRTabjSuvvDIiIr7yla/EVVddFV/96lfjzjvvjEMPPTSKi4tjw4YN8eKLL8aWLVuioqJit3OWlpbGCSecEA8//HBs3rw5PvzhD8fQoUNbrCGbzcazzz4bBx100C478QLQPQiZAHRrOx9h0pKzzz57r0PmvvvuG9///vfj7rvvjscffzwqKipix44dMWjQoBg5cmR86lOfanbDnpZMnTo1BgwYELfddls89NBDUVpaGh/5yEfi0ksvjbPPPjuGDRvW7OtKS0vj+OOPj0ceeWSPZzEjIg444IA4+uijY+nSpTFr1qw2H2WyM2j+y7/8S9x5552RzWZj1qxZ8d73vjduvvnmuP322+PJJ5+MBx98MAoKCmLw4MExduzYmDhxYovnnDJlSjz88MMREXHaaae1Ov7//M//RFVVVcycOXOP3ysAuZfJNrf+BwDoMmvXro3zzz8/TjzxxPjqV7/abJ9PfepTsX79+rj77rtb3CG3Nc8++2xcffXV8aUvfSlOPfXUjpbcqb7+9a/Hf//3f8d//dd/tfiIEwDyl3syAaCLbNu2bbdHidTX1zdtsnP88cc3+7pf/epX8dprr0V5efleBcyIiA9+8IPx4Q9/OH7yk5/s8qiWfPP666/H448/Hp/85CcFTIBuynJZAOgizz//fHz729+Oo48+Ot7znvfEli1b4re//W2sX78+PvCBD8RJJ520S/977rknNmzYEPfff38UFRXFJz7xiQ6Nf+WVV8ajjz4aGzdubPWeyFzasGFDXHDBBfGxj30s16UAsJcslwWALvL666/HzTffHC+++GJs3rw5IiKGDRsWJ510Unz84x/f7d7Rc845JzZu3BjDhw+PSy+9NMaPH5+DqgFgzwiZAAAAJOOeTAAAAJIRMgEAAEhGyAQAACAZIRMAAIBkhEwAAACSETIBAABIRsgEAAAgGSETAACAZIRMAAAAkvn/AcD3qEaIqJf5AAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84c55ac9",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a4eece22",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:51.167403Z",
     "iopub.status.busy": "2024-05-31T23:33:51.167007Z",
     "iopub.status.idle": "2024-05-31T23:33:51.867113Z",
     "shell.execute_reply": "2024-05-31T23:33:51.866433Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:51 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:51\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=826512;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=786301;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=671203;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=865026;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=6671;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=267763;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=508750;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=372306;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=863307;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=150812;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=979796;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=541941;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf013d7e",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b6c6b945",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:51.869755Z",
     "iopub.status.busy": "2024-05-31T23:33:51.869377Z",
     "iopub.status.idle": "2024-05-31T23:33:52.848273Z",
     "shell.execute_reply": "2024-05-31T23:33:52.847561Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=760754;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=732419;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=427459;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=957860;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=963393;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=350845;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=262197;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=859218;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=576619;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=826490;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=367025;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=263155;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=760519;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=548055;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=536633;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=230041;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=504982;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=662938;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:52 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:52\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=371124;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=32595;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=433994;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=823874;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=420786;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=63740;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64c25851",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "19ed86ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:52.850754Z",
     "iopub.status.busy": "2024-05-31T23:33:52.850367Z",
     "iopub.status.idle": "2024-05-31T23:33:53.554514Z",
     "shell.execute_reply": "2024-05-31T23:33:53.553831Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=970347;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=668937;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=422175;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=321606;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=484621;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=233786;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=610477;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=738188;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=122581;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=32916;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=442943;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=244346;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=456372;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=777711;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=751115;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=94701;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=463807;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=791132;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:53 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:53\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=830063;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=844951;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=64961;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=189224;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=900482;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=204084;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6IAAAMSCAYAAABwMnnyAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAB1l0lEQVR4nO3deXyU5b3///dkkskyYQ0YFVMjpIh4FBA1R0BEHJVFBOtRi562uMQVxKVFpYuouBTttyJuxxZJtb9WreKCguKggIKiRjmgQEAlGLCEsCcZMpOZuX9/0ORIMzMJmXvmnuX1fDzyOOa+rrmvz+RwzuSd67qvy2YYhiEAAAAAAOIkw+oCAAAAAADphSAKAAAAAIgrgigAAAAAIK4IogAAAACAuCKIAgAAAADiiiAKAAAAAIgrgigAAAAAIK4IogAAAACAuCKIJpDGxkZVVlaqsbHR6lIAAAAAIGYIoglky5YtKisr05YtW2I2xoqaqpjdGwAAAADagyCaZlbUxC7kAgAAAEB7EEQBAAAAAHFFEAUAAAAAxFWm1QUAAAAAaFswGJTf71cwGLS6FKQAu92uzMxM2Ww2S8ZnRjTJsNkQAABA+qmvr9f+/fvl9/utLgUpwuv1at++fTIMw5LxmRFNMitqtmhoYbHVZQCWWjB7ucZNHW51GQAAxEXzLGjXrl2tLgUppr6+Xn6/X1lZWXEfmxlRHJYFs5dbXQKgBXP4dwgASB9+v18Oh8PqMpCCMjMzFQgELBmbIIrDQgAAAAAAEC2W5lrM7XbL7XZLOjg1DgAAAACpjiBqMZfLJZfLJUmqrKxUWVmZxRUBAAAAkY0fP16S1NTUpM2bN6tv376SpOOOO06PPvpoq/7r16/Xt99+q7Fjx7Z5761bt2rChAn67LPPTK0ZiYUgCgAAAOCwvP7665L+LzQ2fx/O+vXr5Xa72xVEkR4IogAAAEASMQxDXo8vpmNk5zk6dL7ka6+9prlz50qSjjrqKN13333KzMzUY489prq6Oo0fP14DBgzQvffeq9tvv12bN29WU1OTjjrqKN1///3q2bOn2W8FCYogCgAAACQRr8eniV2nx3SMv+99QDnO7MN6zcaNG/Xwww9r/vz5Kiws1FNPPaVf//rX+vOf/6ybb75ZbrdbTz75ZEv/X//61+revbsk6ZlnntGcOXN07733mvo+kLgIogAAAACitmrVKp155pkqLCyUJF1++eV64oknwh4PsmDBAr3++uvy+Xzyer3q1q1bPMuFxQiiAAAAQBLJznPo73sfiPkY0Yq0tPezzz7T888/rxdffFEFBQVasmSJHnvssajHRPIgiAIAAABJxGazHfay2XgoLS3V008/rZqaGhUWFuqFF17QGWecIbvdrvz8fNXV1bX03b9/v5xOp7p27Sqfz6cXX3zRwsphBYIoAAAAgKj17dtXv/rVr3TNNddIOrhZ0cyZMyVJZ5xxhp599lmNGzdOgwYN0m9/+1u98cYbGjVqlLp27aohQ4aopqbGyvIRZwRR4DAtmL1c46YOt7oMAAAAyx1zzDGHnPc5YcIETZgwoVW/Tp066YUXXjjk2r+fN3rrrbeGvCdSU4bVBQDJZsGc5VaXAAAAACQ1gigAAAAAIK4IogAAAACAuCKIIq5W1FRZXQIAAAAAixFEEVcrarZEfY8Fs3lGEwAAAEhmBFEkHTYLAgAAAJIbQRQAAAAAEFcEUQAAAACHbfHixfrJT36i8ePHa9SoUfr5z3+uYDDY4fuNHDlS69evP+zX/eQnP9GqVava7HfnnXfqzDPP1Pjx4zVu3DhdccUV+uabbzpSqiRp69atOvXUUzv8+nhqaGjQ8ccfb3UZh8i0ugAAAAAAyWXHjh367W9/q/nz56tXr16SpK+++ko2m83iyiK7+uqrNWnSJEnSM888o9mzZ+uxxx6zrJ7m4J6RkX7zgwRRAAAAIMm89O0aefxNMbt/XmaWLu19ctj2Xbt2yW63q0uXLi3XTjzxxJb//uabb/TAAw9ox44dkqTLL79cEydO1Lx58/Tmm2/K7/crMzNTv/nNbzRo0KBW96+trdXMmTO1bds2eb1ejRw5Urfeeqsk6fPPP9c999yjQCCgk046SYFA4LDfn2EYqq+vb6nf7/fruuuu0549e+T1etWvXz/dd999ysvLkyS98soreu6552QYhjIzM1uFV5/Pp+nTpysvL0933323du3apTvvvFPbt2/XkUceqS5duqh3796aMmWK5syZo40bN8rj8eif//yn5s2bp48++khz586VJB111FG67777VFhYqPnz58vtduvJJ5+UJL3//vt69tln9fzzz2vVqlW67777dOqpp+rzzz9XIBDQQw89pJNOOkmS9MILL+jZZ59VXl6ezj333MP+GcUaQRQAAABIMh5/kxr8PsvGP/744zV48GCNHDlSp512mgYNGqRx48apsLBQfr9fN954o6ZMmaILLrhAkrR7925J0vjx43XllVdKklavXq0777xTb7/9dqv733nnnbruuut0+umnt4TERYsW6ZxzztGtt96qBx98UEOGDNGHH36o+fPnt7vuuXPn6tVXX9Xu3btlt9v117/+VZJkt9v1yCOPqFu3bjIMQzNmzNBf//pXXXvttVq1apWeeOIJvfDCCzriiCN04MABSQfDuCTt379fkydP1pAhQ3T99ddLkmbOnKmBAwfq5ptvVm1trSZMmKDevXu31PHFF1/otddeU48ePbRx40Y9/PDDmj9/vgoLC/XUU0/p17/+tf785z+3+X6+/fZb3X///ZoxY4b+/ve/69FHH9XcuXO1ceNGzZkzR6+++qqOOOII/b//9//a/TOKF4IogIRhGIa8nrY/VI2gocYGb8i27DxHwi8LAgAgWnmZWZbePyMjQ3PmzNE333yjTz/9VMuXL9fTTz+tV155RT6fT16vtyWESlL37t0lSevWrdPTTz+tvXv3ym63a/PmzWpsbFROTk5LX4/Ho48++kg7d+485NrmzZv17bffym63a8iQIZKkYcOGqaioqN3v64dLc1955RXdfPPNmj9/vgzDUHl5uZYtW6ZAIKC6urqWmdqlS5dq/PjxOuKIIyRJubm5LfdramrSxIkTVVZWpgkTJrRc//jjj3XHHXdIknr27KkRI0YcUsdZZ52lHj16SJJWrVqlM888U4WFhZIOzh4/8cQT7Zrp/dGPfqQBAwZIkgYNGqRnn322Zfzhw4e31Dxx4kT9z//8T7t/TvFAEAWQEAzD0PSzHteGj6ra1X9i1+khr/cbUqwHlk4mjAIAUlqkZbPx1KdPH/Xp00c//elPdfXVV+u9997TsGHDQvb1+XyaMmWK/vKXv+jkk09WfX29Bg8eLJ/Pd0gQNQxDkvTSSy8pOzv7kHts2LCh1X07+pk/ZswYTZ8+Xbt379YHH3ygVatW6a9//avy8/P13HPP6eOPP27zHpmZmRo8eLDee+89jR07VllZoQP8v9fYvOS3rb52u/2QDaC83kP/EP/Dn09GRkbY8JqIvxel31OxABKS1+NrdwiNZMPKqnbNqgIAgI6rqalRRUVFy/f79u3T1q1bVVRUpOOOO045OTl68803W9p3794tn8+npqYmHX300ZKk559/PuS9nU6nSktL9cwzzxwy3vbt29W7d28FAoGWkLhy5Up99913HXoPH330kbp166auXbtq//796tq1q/Lz81VfX69XX321pd/IkSP1xhtvtDzveuDAgZbluTabTffee6+OOuoo3XTTTWpsbJQk/ed//mfLPXbu3KmlS5eGraO0tFQffPCBampqJB18tvOMM86Q3W7Xscceq8rKSjU2Nsrv9x/yM43kP//zP/XBBx+otrZWkvT3v//98H44ccCMKICEM2/bDOU4HWHbp5w0S3PWTjvkWmODT1f2mhHjygAAgHRwc58nn3xSW7duVU5OjgKBgC666CK5XC5J0pNPPqmZM2fqf/7nf2Sz2XT55Zfrpz/9qaZOnapLLrlE3bp105gxY8Le/5FHHtGDDz6oCy64QDabTbm5ubr33nt15JFH6o9//KPuueceBYNB/cd//If69evX7rqbnxE1DEMOh0OPPfaYMjIyNGHCBC1ZskTnn3++unfvrsGDB+v777+XJJ122mmaPHmyrr76atlsNmVlZbXarOiuu+7So48+qrKyMj399NP69a9/rTvuuENjxozREUccoZNPPlmdOnUKWVPfvn31q1/9Stdcc42kg5sVzZw5U5I0cOBADR8+XBdccIF69uypU045RWvWrGnzffbt21eTJ0/WFVdckbCbFdmM5rlvWMLtdsvtdkuS6uvrtWbNGv3pT38Ke87PrDXLNO3kszo8XrSvv7Zkpp75+jeWjW9GDdGyevxU1djgbVlu+/e9DyjHmR22b6j/HRzO6wEASCbNs2w/XL6KxNbY2KjMzExlZmZqz549uuyyy/Twww+3PM+ZKKz8t8WMqMVcLlfLX44qKytVVlZmcUUAAAAAolFVVaU77rhDhmGoqalJl19+ecKFUKsRRAEAAADARP369dPrr79udRkJjc2KAAAAgARmt9vbdZQHcLiCwaAyMqyJhARRAAAAIIFlZmaqsbFRbO0Cs/l8PmVmWrNIlqW5AAAAQAKz2Wzq2rWrdu/erZycHNntdqtLQgpoDqFWzYgSRAEAAIAEZ7fb1b17d/n9fpbpwhR5eXmWzYZKBFEAAAAgKTSfYZmVlWV1KUDUeEYUAAAAABBXBFEAcbVg9nKrSwAAAIDFCKIA4mrBHIIoAABAuuMZUbQwDENejy9yn6Ch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+/2H3OPCCy9sec2/CwQCWrhwobp06dKypDWSiooKSdKJJ57Y9g9IUlVVlW688Ubt2LFDDz/8cEuA3bZtm6655hr94x//0NFHH62f/OQn+s///E998sknuuGGGw4JzUceeaQGDx6s77//PmTI//bbb7Vhwwb9+Mc/Vt++fVu1n3jiifL5fPryyy/bVTMAIHGwNBcAkPK2bdt2yIzjD5144okqLS095NrXX3+tCRMm6JZbblFGxsG/2Z5yyimaNWuW5s+fr1/+8pctfR999FFt3rxZ06ZN0wUXXNByfc+ePSorK9PDDz+s008//ZBlpZK0a9cuzZs3T507d265VldXp8cee0y5ubl65plnVFRUJEkqKyvTL3/5S1VWVurII49s6T9gwAAVFxdryZIlmjx5snJzc1vaPvnkE9XW1uqSSy6Rw+Fo82e0du1aZWRkqKSkpM2+X331le644w5lZmZqzpw5h7zm/vvv1+7du/XII4/o9NNPb7n+85//XGVlZZo1a5bKy8tbro8dO1afffaZFi5cqFNOOeWQccLNhjY7/vjjJUlffvnlIWMBABIfM6IAgJS3bds2lZeXh/xatWpVq/65ubm6/vrrW0KodHCnVrvdrg0bNrRc27t3r95//32dcsoph4RQSerWrZsmTpyovXv3tsw2/tCVV155SAiVpA8//FAHDhzQmDFjWkKodHBznmuuuSbke7vwwgvl8Xi0ZMmSQ66/+eabkqRx48aF+7Ecora2Vvn5+W2G1o8++ki33nqrOnXqpCeffPKQELpx40Z9+eWXOv/881sFw6KiIl1wwQX69ttvD5lVPvPMM9WlSxctW7ZMDQ0NLdf9fr8WL14sh8MRdqOp7t27Szq4RBgAkFyYEQUApLzTTz9djzzySLv7H3PMMcrLyzvkWmZmprp37676+vqWaxs2bFAgEFBTU1PIGdetW7dKkrZs2aIhQ4Yc0nbCCSe06t98LubJJ5/cqq1///6y2+2trp9//vn6n//5H7355pstYXj37t1auXKl/uM//kPFxcVtvNuD9u/fr549e0bs8/777+vTTz9Vnz599PDDD6tbt26HtDcvu92zZ0/In8d3333X8j979+4tSS1B8+WXX5bb7db48eMlSStWrNDevXvlcrnUqVOnkPU0X9+3b1+73iMAIHEQRAEA+DdOpzPkdbvdrmAw2PL9/v37JR1c1rp27dqw92tsbGx1rXk274eaZwT/PeBJB3eZ7dKlS6vrnTp10tlnn623335b3377rXr37q1FixYpEAi0ezZUkrKzs+Xz+SL2+eqrrxQIBHTyySeHrLH55/HRRx/po48+CnufAwcOHPL92LFj9fLLL2vhwoUtQbStZbmSWurNycmJWDcAIPEQRAEA6KDmwHrZZZfppptuOqzX2my2sPfbs2dPq7ZgMKh9+/aFnLUcP3683n77bS1YsEBTp07VW2+9JafTqbPPPrvd9XTp0kW1tbUR+1x77bX68MMP9fLLL8tut7d6z831T506VRdffHG7x+7Tp4/69eun9evXa/PmzerUqZM++eQTHXXUUa2eG/2h5uDbtWvXdo8FAEgMPCMKAEAH9evXTzabTV999ZUp9+vTp48khZxdXb9+vQKBQMjXnXjiierTp4/effddffLJJ9q6davOPffcw5op7N27t3w+n2pqasL2cTgcuv/++3XGGWfoxRdf1OOPP35Ie/Ny4478PJpnPt966y298847CgQCLce7hNO81Ld5mS8AIHkQRAEA6KCCggKdffbZ+vLLL/X3v/895FmY69atC7k0N5Rhw4YpNzdXb731lrZt29Zy3e/3a+7cuRFfe+GFF2r//v166KGHJKnV5kltGThwYEu9kTgcDs2cOVNDhgzRSy+9pDlz5rS09e/fX/3799eSJUtabZ4kHZzVXb16dcj7ulwu5eTkaPHixVq4cKEyMjI0atSoiLWsX7/+kNoBAMmDpbkAgJQX6fgWSbriiitaHa/SXrfddpuqq6v11FNP6Z133tGJJ56o/Px81dbWasOGDdq6dateffXVds1OdurUSZMnT9bDDz+ssrIyjRw5Uk6nUx9//LEcDod69OgRdobwvPPO09NPP62dO3fq+OOPD3nuZiTDhg3TE088oc8++6zNJb1ZWVm677779Lvf/U7/+Mc/ZBiGbr75ZknS7373O91yyy2655579PLLL+vHP/6xsrOztWPHDn355Zfat2+f3G53q3s6nU6dddZZeuedd7R3716VlpaqsLAwbA2GYaiiokLHHnvsITsMAwCSA0EUAJDymo9vCeeSSy7pcBDt3LmznnzySc2fP1/vvfee3G63gsGgunfvrpKSEv3iF78IuclQOOPGjVOnTp30/PPP6+2335bT6dTQoUN1/fXX65JLLlGvXr1Cvs7pdOrMM8/U4sWLD3s2VJKOOuoonXbaaVq6dKmmTp3a5jEuzWH07rvv1ssvvyzDMDR16lQdffTRmjt3rl588UV98MEHWrRokTIyMlRQUKABAwZoxIgRYe85duxYvfPOO5KkMWPGRBz/f//3f1VTU6MpU6Yc9nsFAFjPZoRaRwQAABLK1q1bdfnll+vss8/WPffcE7LPL37xC23fvl3z588Pu/NvJBUVFbr11lv1m9/8Ruedd160JcfUfffdp1WrVunvf/972ONdAACJi2dEAQBIIHV1da2OUfF6vS0bA5155pkhX/fxxx9r8+bNcrlcHQqhkjR48GCVlpbqueeeO+SYmkRTXV2t9957Tz//+c8JoQCQpFiaCwBAAlm9erV+//vf67TTTtMRRxyhffv26fPPP9f27dt1yimnaOTIkYf0f+2117Rjxw69+eabcjgcuuKKK6Ia/+abb9a7776r2traiM9oWmnHjh2aNGmSLrroIqtLAQB0EEtzAQBIINXV1Zo7d66+/PJL7d27V5LUq1cvjRw5Uj/96U9bPct66aWXqra2VkVFRbr++us1ZMgQC6oGAODwEEQBAAAAAHHFM6IAAAAAgLgiiAIAAAAA4oogCgAAAACIK4IoAAAAACCuCKIAAAAAgLgiiAIAAAAA4oogCgAAAACIK4IoAAAAACCuCKIAAAAAgLj6/wFSLI6ILmPxXAAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7429353",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "13d28161",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:53.556807Z",
     "iopub.status.busy": "2024-05-31T23:33:53.556603Z",
     "iopub.status.idle": "2024-05-31T23:33:53.574146Z",
     "shell.execute_reply": "2024-05-31T23:33:53.573604Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "db4899bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:53.576339Z",
     "iopub.status.busy": "2024-05-31T23:33:53.575992Z",
     "iopub.status.idle": "2024-05-31T23:33:53.619458Z",
     "shell.execute_reply": "2024-05-31T23:33:53.618930Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=266162;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=74892;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=99811;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=758032;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=252956;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=993219;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=708614;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=969254;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=514429;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=553554;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=642725;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=953672;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=241148;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=260333;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=29716;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=847776;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=72917;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=648898;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=187454;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=173884;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=784185;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=810826;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=583145;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=126310;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c7a6ea9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:53.621531Z",
     "iopub.status.busy": "2024-05-31T23:33:53.621332Z",
     "iopub.status.idle": "2024-05-31T23:33:54.354811Z",
     "shell.execute_reply": "2024-05-31T23:33:54.354103Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d919fc4",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e719acd",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4104180b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:54.357278Z",
     "iopub.status.busy": "2024-05-31T23:33:54.356880Z",
     "iopub.status.idle": "2024-05-31T23:33:55.353239Z",
     "shell.execute_reply": "2024-05-31T23:33:55.352565Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:54 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:54\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=718821;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=928293;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1045</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=13878;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=973764;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\u001b\\\u001b[2m1045\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1062</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=188263;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=59026;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\u001b\\\u001b[2m1062\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140095187519232\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0aed822",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f3799e7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:55.355679Z",
     "iopub.status.busy": "2024-05-31T23:33:55.355472Z",
     "iopub.status.idle": "2024-05-31T23:33:55.763491Z",
     "shell.execute_reply": "2024-05-31T23:33:55.762762Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:55 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:55\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=814472;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=996169;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA48AAAMSCAYAAADKkfGSAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAABKX0lEQVR4nO3dfXCdZ2Em7juRjoQix2ajtMZNHNfGHW+ya5odhu56CYWYQ6jXoJlt2s5SymxKo7QJ23SX2YZNput2PekA/YB+LJNpOjDZdmYbwkcYLY5J9sRA2sTTdpl0EDWcJoxGcRYbsLNxrOPToyOR3x8Q/RBW/MqWdF4d6br+ip/zdctyXuv287zPc9GLL774YgAAAOAcLi47AAAAACuf8ggAAEAh5REAAIBCyiMAAACFlEcAAAAKKY8AAAAUUh4BAAAopDwCAABQSHksyT/+4z+mXq/nH//xH8uOAgAAUEh5LMnExERGRkYyMTFRdhQAAIBCyiMAAACFlEcAAAAKKY8AAAAUUh4BAAAopDwCAABQSHkEAACgkPIIAABAIeURAACAQsojAAAAhZRHAAAACimPAAAAFFIeAQAAKKQ8AgAAUEh5BAAAoJDyCAAAQCHlEQAAgELKIwAAAIWURwAAAAopjwAAABRSHgEAACikPAIAAFBIeQQAAKBQb9kB1pJarZZarZYkmZycLDkNAADAwimPHVStVlOtVpMk9Xo9IyMjJScCAABYGMtWAQAAKKQ8AgAAUEh5BAAAoJDyCAAAQCHlEQAAgELKIwAAAIWURwAAAAo555FZYwfGM9WcTt9Ab3bu3Vp2HAAAYAVRHpk1dnA8Z55r5ZLL+pVHAABgDstWAQAAKKQ8AgAAUEh5BAAAoJDyCAAAQCHlEQAAgELKIwAAAIWUR5IkrUY77eZ0kqTdnE6r0S45EQAAsJIoj6TVaGd03+G0mzNJknZzJqP7DiuQAADALOWR1A8dzaljjTljp441Uj90tKREAADASqM8kpMTL8w//szpDicBAABWKuWRDG1ZP//4VZd2OAkAALBSKY9kx+7N2bBpcM7Yhk2D2bF7c0mJAACAlUZ5JP2DlQzv35XKQE+SpDLQk+H9u9I/WCk5GQAAsFIojyT5boGsDPQmSSoDvYojAAAwh/IIAABAIeURAACAQsojAAAAhZRHAAAACimPAAAAFFIeAQAAKKQ8fp/nn38+d9xxR2644Ya8853vzJe+9KWyIwEAAKwIyuP3+fCHP5zLLrsso6OjufXWW/Obv/mbeeGFF8qOBQAAULresgOsFGfOnMlf/uVf5v77788rXvGKXHfdddm2bVv+6q/+Kv/m3/ybsuN1xM49WzPVnE7fgD8WAADAXF3bEs6cOZP7778/R44cyVe/+tWcPn06d955Z/bs2XPWc6empvLRj340jzzySE6fPp1Xv/rVufnmm/O6171u9jnPPvtsBgYG8sM//MOzY9u2bcv4+HhHvp6VYOferWVHAAAAVqiuXbZ66tSp3HfffZmYmMj27dvP+dz3v//9eeCBB/KWt7wlt99+ey6++OLccccd+fKXvzz7nGazmcHBwTmvGxwcTLPZXJb8AAAA3aRry+PQ0FAefPDBfOITn8itt976ss87cuRIHn300dxyyy257bbbMjw8nD/4gz/Iq171qtxzzz2zzxsYGEij0Zjz2kajkYGBgWX7GgAAALpF15bHvr6+DA0NFT7vi1/8Ynp6ejI8PDw71t/fn7179+bv//7v881vfjNJcuWVV6bZbObb3/727PPGx8ezdaulnAAAAF1bHhfqqaeeypVXXnnWktSrr746SfL0008nSS655JJcd911+djHPpZWq5UnnngiX//613Pdddd1PDMAAMBK07Ub5izUyZMn552hfGnsxIkTs2Pvfe9789u//dt529velh/6oR/Kb/3Wb2X9+vUX/NknTpzIyZMn531sYmLigt8XAACg01Z9eWy1WqlUKmeN9/X1zT7+kle+8pX53d/93SX77NHR0dx3331L9n4AAABlWfXlsb+/P+12+6zxqamp2ceXy/DwcF7/+tfP+9jExETuvvvuZftsAACApbTqy+PQ0NCcTXBe8tJy0ssvv3zZPvvyyy9f1vcHAADolFW/Yc727dvz7LPPnnUMx5EjR2YfBwAA4NxWfXl805velJmZmYyOjs6OTU1N5aGHHso111yTjRs3lpgOAACgO3T1stVPfepTmZycnF2C+vjjj+db3/pWkuTGG2/MunXrcs011+T666/Pvffem+effz5XXHFFPve5z+X48eN53/veV2Z8AACArtHV5fHjH/94jh8/Pvvrxx57LI899liS5IYbbsi6deuSJHfddVc2btyYhx9+OJOTk9m2bVs++MEP5tprr+1o3lqtllqt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AAAopDwCAABQyG6rwIrkaBEAgJVFeQRWJEeLAACsLJatAgAAUEh5BAAAoJBlq8Cycd8iAMDqoTwCy8Z9iwAAq4dlqwAAABRSHgEAACikPAIAAFBIeQQAAKCQ8ggAAEAh5RFYcVqNdtrN6SRJuzmdVqNdciIAAJRHYEVpNdoZ3Xc47eZMkqTdnMnovsMKJABAyZRHWAO6aSavfuhoTh1rzBk7dayR+qGjJSUCACBRHmHV67aZvJMTL8w//szpDicBAOD7KY+wynXbTN7QlvXzj191aYeTAADw/XrLDgAs3M49WzPVnE7fwML/1+22mbwduzen/oVn5xTeDZsGs2P35hJTAQBg5hG6yM69W/Pan/mx7Ny7dcGv6baZvP7BSob370ploCdJUhnoyfD+XekfrJScDABgbVMeYZXbsXtzNmwanDO20mfy+gcrqXxvdrUy0Ks4AgCsAMojrHJm8gAAWArKI6wBZczkddPxIAAAFFMegSXXbceDAABQTHkElly3HQ8CAEAx5RFYct12PAgAAMWUxx/wmc98Jr/0S7+U66+/Ph/72MfKjgNdqduOBwEAoJjy+AOGhobyi7/4i3njG99YdhToWt14PAgAAOemPP6AN7zhDbnuuuuybt26sqNA13I8CADA6tNbdoD5nDlzJvfff3+OHDmSr371qzl9+nTuvPPO7Nmz56znTk1N5aMf/WgeeeSRnD59Oq9+9atz880353Wve10JyYGXvHQ8SLs507HjQQAAWD4rcubx1KlTue+++zIxMZHt27ef87nvf//788ADD+Qtb3lLbr/99lx88cW544478uUvf7lDaQEAAFa/FTnzODQ0lAcffDBDQ0P52te+lltuuWXe5x05ciSPPvpobr311rzjHe9Ikrz1rW/NTTfdlHvuuSf33HPP7HPf8573ZGxsbN73ede73pWRkZGl/0IAAABWiRVZHvv6+jI0NFT4vC9+8Yvp6enJ8PDw7Fh/f3/27t2be++9N9/85jezcePGJMlHPvKRZcsL52Pnnq2Zak6nb2BF/u8HAADz6uqfXp966qlceeWVGRycu6vj1VdfnSR5+umnZ8vjQk1PT2dmZibf+c53MjMzk1arld7e3vT09CxZbta2nXu3lh0BAADOW1eXx5MnT847Q/nS2IkTJ877Pf/sz/4s99133+yv//zP//xlN+spcuLEiZw8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S5oRAFY65RGAVW+xS0/7ByupDPQmSSoDvYojAGuS8ghA17jQTW8sPQWAxVMeAegKi9n0psylpxdaeAFgpVEeAegKiz1vsYylp4spvACw0iiPAHSFbjxvcbGFFwBWkt6yAwDAQgxtWZ+vP3Hs7PEVfN7iUhTesQPjmWpOp2+gNzv3bl2qaABw3sw8AtAVunHTm8Xu8pokYwfH8+Snn87YwfGligUAF0R5BKArdON5i91YeAHg5SiPAHSNbjtvsRsLLwC8HOURAJZRtxVeAHg5yiMAAACFlEcAAAAKKY8AAAAUcs7j95mamsqHPvSh/J//838yOTmZH/3RH81/+A//If/8n//zsqMBAACUyszj95mZmcmrXvWqfOQjH8lDDz2Un/3Zn82dd96ZM2fOlB0NAACgVMrj9xkYGMhNN92UjRs35uKLL86b3/zm9Pb25ujRo2VHAwAAKNWKXLZ65syZ3H///Tly5Ei++tWv5vTp07nzzjuzZ8+es547NTWVj370o3nkkUdy+vTpvPrVr87NN9+c173udYvOcfTo0Zw+fTpXXHHFot8LADpt7MB4pprT6Rvozc69W8uOA0CXW5Ezj6dOncp9992XiYmJbN++/ZzPff/7358HHnggb3nLW3L77bfn4osvzh133JEvf/nLi8rQarVy9913553vfGfWrVu3qPcCgDKMHRzPk59+OmMHx8uOAsAqsCJnHoeGhvLggw9maGgoX/va13LLLbfM+7wjR47k0Ucfza233pp3vOMdSZK3vvWtuemmm3LPPffknnvumX3ue97znoyNjc37Pu9617syMjIy++vp6ens27cvV1xxRW666aal+8IA6Fo792ydncUDgLVoRf4N2NfXl6GhocLnffGLX0xPT0+Gh4dnx/r7+7N3797ce++9+eY3v5mNGzcmST7ykY8s6LO/853v5O67785FF12Uu+66KxdddNGFfREArCplLPtsNdppN6eTJO3mdFqNdvoHKx3PAQDJCi2PC/XUU0/lyiuvzODg4Jzxq6++Okny9NNPz5bHhfq93/u9nDx5Mr/3e7+X3t7F/facOHEiJ0+enPexiYmJRb03AKtbq9HO6L7DaTdnkiTt5kxG9x3O8P5dCiQApejq8njy5Ml5ZyhfGjtx4sR5vd/x48fz2c9+Nn19fXNmM3/nd34nP/7jP37e+UZHR3Pfffed9+sAoH7oaE4da8wZO3Wskfqho3nN27ct++fbbAeAH9TV5bHVaqVSOftfX/v6+mYfPx+vetWr8thjjy1JtiQZHh7O61//+nkfm5iYyN13371knwXA6nJy4oX5x5853ZHPHzs4njPPtXLJZf3KIwBJurw89vf3p91unzU+NTU1+3iZLr/88lx++eWlZgCgOw1tWZ+vP3Hs7PGrLi0hDQCs0KM6FmpoaGjeewpfGlPcAOhWO3ZvzoZNc+/p37BpMDt2by4pEQBrXVeXx+3bt+fZZ59NozH3npAjR47MPg4AZdu5Z2v+xU9vz849C1/+2T9YyfD+XakM9CRJKgM9NssBoFRdXR7f9KY3ZWZmJqOjo7NjU1NTeeihh3LNNdec906rALAcdu7dmtf+zI+d972D/YOVVL53rmRloFdxBKBUK/aex0996lOZnJycXYL6+OOP51vf+laS5MYbb8y6detyzTXX5Prrr8+9996b559/PldccUU+97nP5fjx43nf+95XZvx51Wq11Gq1JMnk5GTJaQBgedipFWB1WrHl8eMf/3iOHz8+++vHHntsdifUG264IevWrUuS3HXXXdm4cWMefvjhTE5OZtu2bfngBz+Ya6+9tozY51StVlOtVpMk9Xo9IyMjJScCWFt27tk6W2pYPnZqBVidVuzfng888MCCntff35/bbrstt9122zInAqDbKTIAcOG6+p5HAGB+rUY77eZ0kqTdnE6rcfbRVgBwPpRHAFhlWo12RvcdTrs5kyRpN2cyuu+wAgnAoiiPALDK1A8dzaljc4+xOnWskfqhowt6vVlLAOajPALAKnNy4oX5x585Xfjasmctxw6M50uffCpjB8Y78nkALNyK3TBnNXJUBwCdMLRlfb7+xLGzx6+6tPC155q1fM3bty1Zxpdjp1aAlUt57CBHdQDQCTt2b079C8/OKYEbNg1mx+7Nha9dzKwlAKubZasAsMr0D1YyvH9XKgM9SZLKQE+G9+9K/2Cl8LVDW9bPP76AWUsAVjflEQBWof7BSioD311gVBnoXVBxTL47a7lh0+CcsYXOWgKwul1wefz1X//1PPbYY5mZmVnKPABAiRYza5nYqRVgNbvgex7/5m/+Jn/7t3+bV77yldmzZ0/27t2bK6+8cimzAQAleGnWst2cOa9Zy5fbqfV8yicAK9cFzzz+xV/8Rd7xjnfk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f1f6ByvLFRM4hxU58zg0NJQHH3wwQ0ND+drXvpZbbrll3ucdOXIkjz76aG699da84x3vSJK89a1vzU033ZR77rkn99xzz+xz3/Oe92RsbGze93nXu96VkZGROWM9PT157Wtfm0984hO58sors2vXriX66gAA1p4LnfHsH6ykMtCbdnMmlYFexRFKtCLLY19fX4aGhgqf98UvfjE9PT0ZHh6eHevv78/evXtz77335pvf/GY2btyYJPnIRz5yQVlmZmbyf//v/72g1wIAUK6xA+Oz93h205JdWIlW5LLVhXrqqady5ZVXZnBwcM741VdfnSR5+umnz+v9Jicn87//9//OmTNnMj09nc9//vN58skn8+M//uNLlhkAgM4ZOzieJz/9dMYOjpcdBbreipx5XKiTJ0/OO0P50tiJEyfO6/0uuuiifPazn82HP/zhvPjii7niiivyX//rf82P/diPXVC+EydO5OTJk/M+NjExcUHvCQAAUIauLo+tViuVytnr3vv6+mYfPx+Dg4P5wz/8wyXJliSjo6O57777luz9AAAAytLV5bG/vz/tdvus8ampqdnHyzQ8PJzXv/718z42MTGRu+++u8OJAABYKPdLwlxdXR6Hhoby7W9/+6zxl5aKXn755Z2ONMfll19eegYAYPns3LN1tlyw+owdHM+Z51q55LJ+5RHS5eVx+/btefLJJ9NoNOZsmnPkyJHZxwEAlotCAawlXb3b6pve9KbMzMxkdHR0dmxqaioPPfRQrrnmmtljOgAAAFicFTvz+KlPfSqTk5OzS1Aff/zxfOtb30qS3HjjjVm3bl2uueaaXH/99bn33nvz/PPP54orrsjnPve5HD9+PO973/vKjA8AALCqrNjy+PGPfzzHjx+f/fVjjz2Wxx57LElyww03ZN26dUmSu+66Kxs3bszDDz+cycnJbNu2LR/84Adz7bXXlhH7nGq1Wmq1WpLvnikJAADQLVZseXzggQcW9Lz+/v7cdtttue2225Y50eJVq9VUq9UkSb1ez8jISMmJAAAWptVop92cTpK0m9NpNdrpHzz7yDRg9erqex4BAFh+rUY7o/sOp92cSZK0mzMZ3Xc4rcbZR6bxXWMHxvOlTz6VsQPjZUeBJbNiZx4BAFgZ6oeO5tSxxpyxU8caqR86mte8fduyf/6FHolS5mypYz5YjZRHAADO6eTE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",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc0f5f8a",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bca8182d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:55.765988Z",
     "iopub.status.busy": "2024-05-31T23:33:55.765507Z",
     "iopub.status.idle": "2024-05-31T23:33:56.306599Z",
     "shell.execute_reply": "2024-05-31T23:33:56.305857Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=856540;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=462112;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=419604;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=387603;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=395176;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=620063;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab31e60c",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7addf550",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T23:33:56.308859Z",
     "iopub.status.busy": "2024-05-31T23:33:56.308647Z",
     "iopub.status.idle": "2024-05-31T23:33:56.999236Z",
     "shell.execute_reply": "2024-05-31T23:33:56.998537Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">23:33:56 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m23:33:56\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=937597;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=887386;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=555228;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=121537;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=67673;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=855862;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
