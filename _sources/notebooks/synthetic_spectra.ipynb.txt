{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a4f4a104",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ac54c71",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0c00706",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99bf17fe",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "32e4131a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:34.808942Z",
     "iopub.status.busy": "2024-09-11T20:23:34.808470Z",
     "iopub.status.idle": "2024-09-11T20:23:34.814895Z",
     "shell.execute_reply": "2024-09-11T20:23:34.814393Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b2c98738",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:34.817164Z",
     "iopub.status.busy": "2024-09-11T20:23:34.816790Z",
     "iopub.status.idle": "2024-09-11T20:23:37.815033Z",
     "shell.execute_reply": "2024-09-11T20:23:37.814369Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:36 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:36\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=935800;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=232252;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=719744;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=64195;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=637093;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=958212;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fa68ac9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:37.817985Z",
     "iopub.status.busy": "2024-09-11T20:23:37.817347Z",
     "iopub.status.idle": "2024-09-11T20:23:37.847251Z",
     "shell.execute_reply": "2024-09-11T20:23:37.846675Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c2b1c4b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:37.849341Z",
     "iopub.status.busy": "2024-09-11T20:23:37.849144Z",
     "iopub.status.idle": "2024-09-11T20:23:40.506509Z",
     "shell.execute_reply": "2024-09-11T20:23:40.505827Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:38 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:38\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=444993;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=289619;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:39 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:39\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=985700;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=292238;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0979b284",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "662805da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:40.509100Z",
     "iopub.status.busy": "2024-09-11T20:23:40.508563Z",
     "iopub.status.idle": "2024-09-11T20:23:40.512283Z",
     "shell.execute_reply": "2024-09-11T20:23:40.511773Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f87eb369",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "88b1af17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:40.514434Z",
     "iopub.status.busy": "2024-09-11T20:23:40.514097Z",
     "iopub.status.idle": "2024-09-11T20:23:40.517370Z",
     "shell.execute_reply": "2024-09-11T20:23:40.516728Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a067e6f7",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "79306619",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:40.519585Z",
     "iopub.status.busy": "2024-09-11T20:23:40.519252Z",
     "iopub.status.idle": "2024-09-11T20:23:41.009707Z",
     "shell.execute_reply": "2024-09-11T20:23:41.008971Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:40 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:40\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=205389;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=616025;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=963925;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=999487;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=804592;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=882858;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=430721;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=728982;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=561430;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=679070;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=824534;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=84711;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "66fc14d0",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "143909d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:41.012168Z",
     "iopub.status.busy": "2024-09-11T20:23:41.011765Z",
     "iopub.status.idle": "2024-09-11T20:23:41.664634Z",
     "shell.execute_reply": "2024-09-11T20:23:41.663938Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:41 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:41\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=524712;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=398275;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=379940;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=765263;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=453911;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=624907;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=674178;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=950919;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=321833;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=198544;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=262185;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=553038;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b96a6b5d",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "07ff4411",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:41.666957Z",
     "iopub.status.busy": "2024-09-11T20:23:41.666646Z",
     "iopub.status.idle": "2024-09-11T20:23:42.600207Z",
     "shell.execute_reply": "2024-09-11T20:23:42.599505Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=868211;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=812621;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=122341;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=89560;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=868790;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=939535;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=572126;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=423835;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=148250;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=957000;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=960465;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=605230;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=167691;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=186523;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=68382;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=851322;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=847677;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=848319;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:42 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:42\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=183371;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=23739;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=278616;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=362564;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=720641;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=144922;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dade45b9",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0a7a5d48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:42.602638Z",
     "iopub.status.busy": "2024-09-11T20:23:42.602429Z",
     "iopub.status.idle": "2024-09-11T20:23:43.466653Z",
     "shell.execute_reply": "2024-09-11T20:23:43.465935Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=82952;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=360852;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=540966;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=118761;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=774133;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=301311;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=707720;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=806954;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=671297;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=159063;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=146730;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=638918;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=391960;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=756806;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=769454;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=790004;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=723069;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=481987;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=998584;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=750059;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=436467;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=880318;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=383231;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=270278;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "071f025b",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "de922a36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:43.469116Z",
     "iopub.status.busy": "2024-09-11T20:23:43.468719Z",
     "iopub.status.idle": "2024-09-11T20:23:43.486099Z",
     "shell.execute_reply": "2024-09-11T20:23:43.485575Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "592531f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:43.488081Z",
     "iopub.status.busy": "2024-09-11T20:23:43.487887Z",
     "iopub.status.idle": "2024-09-11T20:23:43.531166Z",
     "shell.execute_reply": "2024-09-11T20:23:43.530655Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:43 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:43\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=550678;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=818110;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=120968;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=473886;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=896810;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=866496;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=876205;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=199494;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=275427;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=455929;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=933672;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=802729;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=544438;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=120437;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=692481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=608681;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=205407;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=413945;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=506658;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=114025;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=859717;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=613036;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=504871;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=866724;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ce7a0a69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:43.533448Z",
     "iopub.status.busy": "2024-09-11T20:23:43.533091Z",
     "iopub.status.idle": "2024-09-11T20:23:44.053273Z",
     "shell.execute_reply": "2024-09-11T20:23:44.052572Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad5b7715",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0254ef6a",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4b51be0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:44.055633Z",
     "iopub.status.busy": "2024-09-11T20:23:44.055429Z",
     "iopub.status.idle": "2024-09-11T20:23:45.020963Z",
     "shell.execute_reply": "2024-09-11T20:23:45.020254Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:44 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:44\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=537735;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=243356;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=414251;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=234764;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=328572;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=861271;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139778846693456\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ed08dab",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "af114f7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:45.023542Z",
     "iopub.status.busy": "2024-09-11T20:23:45.023149Z",
     "iopub.status.idle": "2024-09-11T20:23:45.415226Z",
     "shell.execute_reply": "2024-09-11T20:23:45.414609Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:45 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:45\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=375656;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=302967;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "becfb75e",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "22fd8c9c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:45.417716Z",
     "iopub.status.busy": "2024-09-11T20:23:45.417302Z",
     "iopub.status.idle": "2024-09-11T20:23:45.950159Z",
     "shell.execute_reply": "2024-09-11T20:23:45.949449Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=983001;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=686053;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=144110;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=804183;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=340156;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=387991;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA5QAAAMSCAYAAAAV34uNAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAB0/klEQVR4nO3de3wU5d3///dmk03IBggEjIiRCBEBq4CIVKiIuiqIHFq+asG7FX8leADEUz2ktaVKUdG7iqC0WCStfbSKZ1FAXBSwgKhUblBIkGpiwBICEsgmZDfZzO8PmpWQzWkyyWw2r2cfeZi55pq5Pptq5O11zTUOwzAMAQAAAADQRDF2FwAAAAAAaJsIlAAAAAAAUwiUAAAAAABTCJQAAAAAAFMIlAAAAAAAUwiUAAAAAABTCJQAAAAAAFMIlAAAAAAAUwiUEaS8vFy5ubkqLy+3uxQAAAAAaBCBMoLk5+crMzNT+fn5dpcCAAAAAA0iUAIAAAAATCFQAgAAAABMibW7gEgXCAT0hz/8QZ9++ql8Pp/S09M1c+ZM/eAHP7C7NAAAAACwFYGyAcFgUKeeeqqeeeYZde/eXR988IEeeOABvfTSS0pMTLS7PAAAALQThmGosrJSwWDQ7lIQBWJiYhQbG6uYmOYtWmXJawM6dOigqVOnKjU1VTExMbr88ssVGxurgoICu0sDAABAO2EYho4cOSK/3293KYgSlZWVOnr0qHw+X7Pu02ZmKMvKyvTiiy9q586d2rVrl0pKSvTAAw9ozJgxtfoGAgEtXbpUa9asUUlJifr06aNp06Zp6NChza6joKBAJSUl6tmzZ7PvBQAAADRGZWWlYmNjlZSUZHcpiCKJiYk6evRo6O8vM9rMDOWRI0eUnZ2t/Px8ZWRk1Nv3kUce0fLly3XFFVfo9ttvV0xMjO69915t3769WTX4/X7NnTtXN9xwA/8wAwAAoNUEg0HTf+AH6uNyuVRZWWn6+jbzd2VKSopef/11paSkKCcnR9OnTw/bb+fOnVq7dq1uvfVWTZ48WZJ01VVXaerUqVq8eLEWL14c6jtjxgzt2LEj7H1+9rOfKTMzM3RcWVmp3/zmN+rZs6emTp1q3QcDAAAAgDaqzQRKl8ullJSUBvutX79eTqdT48ePD7XFx8dr7NixWrJkiQoLC5WamipJeuaZZxo1dlVVlebOnSuHw6GsrCw5HA5zHwIAAAAAokibCZSN9eWXX+r000+X2+2u0d6/f39J0p49e0KBsrGeeOIJHTp0SE888QRLDQAAANDuTZgwQZJUUVGhr7/+Wn379pUknXnmmXrqqadq9d+1a5e++uorjR07tsF77927VxMnTtSnn35qac1oGVGXjg4dOhR2JrO67eDBg0263/79+/X222/L5XLVmPWcP3++Bg4c2OT6Dh48qEOHDoU9l5+f3+T7AQAAAK3tzTfflPR9+Ks+rsuuXbvk9XobFSjRtkRdoPT7/YqLi6vV7nK5Queb4tRTT9WGDRssqU2S3nrrLWVnZ1t2PwAAALQvhmHIXxZo0THiE12mHvN64403tHTpUklSjx499PDDDys2NlZPP/20SkpKNGHCBA0cOFAPPfSQ7r77bn399deqqKhQjx499Pvf/17du3e3+qOghUVdoIyPj1dFRUWt9kAgEDpvp/Hjx2vEiBFhz+Xn52vu3LmtXBEAAADaEn9ZQJOTs1p0jH8Uz1OCu2l/bt69e7cef/xxvfbaa0pNTdXixYv1q1/9Sn/+8591++23y+v16tlnnw31/9WvfqWuXbtKkpYsWaKFCxfqoYcesvRzoOVFXaBMSUlRUVFRrfbqZabdunVr7ZJq6Natm+01AAAAAFbbsmWLLr744tB+JVOmTNEzzzyjYDAYtv+KFSv05ptvKhAIyO/3q0uXLq1ZLiwSdYEyIyNDn332mUpLS2tszLNz587QeQAAAKCtik906R/F81p8jOaqb8nsp59+qhdeeEEvvfSSUlJStHbtWj399NPNHhOtL8buAqw2atQoBYNBvfXWW6G2QCCglStXasCAAU3e4RUAAACIJA6HQwnu+Bb9MvP85LBhw/Thhx+qsLBQkvTiiy/qoosuktPpVFJSkkpKSkJ9jx49KrfbreTkZAUCAb300kuW/XzQutrUDOWrr74qn88XWr66ceNGHThwQJI0adIkJSUlacCAAbr00ku1ZMkSFRcXq2fPnlq9erX279+v++67z87yAQAAgKjVt29f/fKXv9S0adMkHd+Up3p/kIsuukjPP/+8xo0bp8GDB+vBBx/UW2+9pdGjRys5OVnDhw8PBVG0LQ7DMAy7i2is6667Tvv37w977qWXXlKPHj0kHd/JdenSpVqzZo18Pp969+6tadOm6cILL2zNcpssNzdXmZmZeu6553T22WfbXQ4AAAAiRHl5uSQpISHB5koQbZr791abmqFcvnx5o/rFx8frtttu02233dbCFQEAAABA+9WmAmU08nq98nq9kiSfz2dzNQAAAADQeARKm3k8Hnk8HknfL3kFAAAAgLYg6nZ5BQAAAAC0DgIlAAAAAMAUAiUAAAAAwBQCJQAAAADAFAIlWsSKBRvsLgEAAAAtaM2aNfrJT36iCRMmaPTo0fr5z3+uqqoq0/e77LLLtGvXriZf95Of/ERbtmxpsN/999+viy++WBMmTNC4ceN0ww036N///reZUiVJe/fu1QUXXGD6+tZUWlraYu+5Z5dXtIgVCzdo3OyRdpcBAACAFnDgwAE9+OCDeu2119SzZ09J0hdffCGHw2FzZfX7xS9+oalTp0qSlixZogULFujpp5+2rZ7qAB4T03bn+QiUAAAAQBuz/KvtKqusaLH7J8bG6bre59V5/tChQ3I6nercuXOo7Zxzzgl9/+9//1vz5s3TgQMHJElTpkzR5MmTtWzZMr399tuqrKxUbGysfv3rX2vw4MG17l9UVKS5c+dq37598vv9uuyyy3TnnXdKkv71r3/pd7/7nYLBoM4991wFg8Emfz7DMOTz+UL1V1ZW6uabb9bhw4fl9/vVr18/Pfzww0pMTJQkvfrqq/rrX/8qwzAUGxtbK4QGAgFlZWUpMTFRv/3tb3Xo0CHdf//92r9/v0499VR17txZvXv31qxZs7Rw4ULt3r1bZWVl+s9//qNly5Zp8+bNWrp0qSSpR48eevjhh5WamqrXXntNXq9Xzz77rCTpgw8+0PPPP68XXnhBW7Zs0cMPP6wLLrhA//rXvxQMBvXoo4/q3HPPlSS9+OKLev7555WYmKgrrriiyT+jxiJQ2szr9crr9UqSfD6fzdUAAACgLSirrFBpZcC28c8++2wNGTJEl112mYYOHarBgwdr3LhxSk1NVWVlpW677TbNmjVL11xzjSTpu+++kyRNmDBBN910kyRp27Ztuv/++7V69epa97///vt1880368ILLwyFvVWrVunyyy/XnXfeqUceeUTDhw/XP//5T7322muNrnvp0qV6/fXX9d1338npdOpvf/ubJMnpdOqJJ55Qly5dZBiG5syZo7/97W+aPn26tmzZomeeeUYvvviiTjnlFB07dkzS8VAtSUePHtXMmTM1fPhw3XLLLZKk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ihUr1L9/f5WWltpdChA1CJQAEIXKysr04osvaufOndq1a5dKSkr0wAMPaMyYMbX6BgIBLV26VGvWrFFJSYn69OmjadOmaejQobX6/uEPf9DKlSsVCAT0wx/+UL17926NjwOgnWmJ32FHjhzRyy+/rMWLF2vhwoWt9VGAqMczlAAQhY4cOaLs7Gzl5+crIyOj3r6PPPKIli9friuuuEK33367YmJidO+992r79u21+t51111699139eSTT2ro0KFyOBwt9REAtGMt8Tvsueee07XXXquOHTu2ZOlAu0OgBIAolJKSotdff10vv/yybr311jr77dy5U2vXrtX06dN12223afz48Xrqqad06qmnavHixWGvcTqdGjJkiLZu3arNmze31EcA0I5Z/Tts9+7dysnJ0TXXXNMa5QPtCkteASAKuVwupaSkNNhv/fr1cjqdGj9+fKgtPj5eY8eO1ZIlS1RYWKjU1NSw1waDQe3bt8+ymgGgmtW/w7Zt26aCggJNmjRJkuTz+eR0OvXtt9/qgQceaLHPAbQHBEoAaMe+/PJLnX766XK73TXa+/fvL0nas2ePUlNT5fP5tHnzZo0YMUIul0sffvihPvvsM02fPt2OsgFAUuN/h40fP16XX3556PzTTz+tHj166IYbbmjVeoFoRKAEgHbs0KFDYWcBqtsOHjwo6fiurm+//baefPJJGYahnj176sEHH9RZZ53VqvUCwIka+zssISFBCQkJofPx8fHq0KEDz1MCFiBQAkA75vf7FRcXV6vd5XKFzkuS2+3WggULWrU2AGhIY3+HnSwrK6tF6wLaEzblAYB2LD4+XhUVFbXaA4FA6DwARCp+hwH2I1ACQDuWkpKiQ4cO1WqvbuvWrVtrlwQAjcbvMMB+BEoAaMcyMjK0d+9elZaW1mjfuXNn6DwARCp+hwH2I1ACQDs2atQoBYNBvfXWW6G2QCCglStXasCAAXW+MgQAIgG/wwD7sSkPAESpV199VT6fL7T0a+PGjTpw4IAkadKkSUpKStKAAQN06aWXasmSJSouLlbPnj21evVq7d+/X/fdd5+d5QNo5/gdBrQNDsMwDLuLAABY77rrrtP+/fvDnnvppZfUo0cPScd3QVy6dKnWrFkjn8+n3r17a9q0abrwwgtbs1wAqIHfYUDbQKAEAAAAAJjCM5QAAAAAAFMIlAAAAAAAUwiUAAAAAABTCJQAAAAAAFMIlAAAAAAAUwiUAAAAAABTCJQAAAAAAFMIlAAAAAAAUwiUAAAAAABTCJQAAKCG5cuX67LLLtN//vOfUNuqVas0cuRIrVq1ysbKvvf2229r1KhR+ve//213KQDQrhEoAQBR7T//+Y9GjhxZ79d1111nd5kRo6SkRH/961919dVXq0ePHi061scff6yRI0fq7rvvbrDvQw89pJEjR+q9996TJI0ePVqpqalavHhxi9YIAKhfrN0FAADQGnr27Kkrrrgi7LmkpKRWriZyLV++XEePHtXkyZNbfKwLLrhAqamp2rp1qwoLC5Wamhq2n8/n04cffqikpCSNHDlSkhQbG6vrrrtOCxYs0I4dO3Tuuee2eL0AgNoIlACAdqFnz576//6//8/uMiJaZWWl3n77bZ177rnq2bNni48XExOjMWPGKDs7W6tXr9aNN94Ytp/X65Xf79fVV1+t+Pj4UPvll1+uRYsW6c033yRQAoBNWPIKAMBJRo4cqdtvv13fffedfv/732vcuHHyeDy65ZZb9Nlnn4W9pqysTM8//7x+/vOfy+Px6Oqrr9bdd9+t7du31+p7++23a+TIkfL7/Xruuef005/+VJdeeqmef/75UJ/169crMzNTHo9HEyZM0Pz581VSUqLrrruuxhLdhx9+WCNHjtTOnTvD1rV06VKNHDlSXq+3wc/98ccf69ChQxo1alSDfasdOHBAN954ozwej9atWxdqP3z4sBYuXKjJkyfr8ssv17hx4/TrX/9aX331VY3rr776ajkcDq1atUqGYYQdY+XKlZKksWPH1mhPTk7W4MGDtW7dOpWVlTW6ZgCAdQiUAACE4fP5NGPGDOXl5enKK6/UyJEjlZubq3vuuadWKDp69KhuvfVWZWdnq2PHjpowYYJGjhyp3bt3a/bs2frwww/DjvHggw9q9erVGjx4sP7f//t/oWcW33nnHT344IPau3evrrrqKo0ePVpffPGF7rrrLlVWVta4x/jx40PXnCwYDGrlypXq3LlzaKlofbZu3SpJOueccxr+AUnKy8vTbbfdpgMHDujxxx8PBdF9+/Zp2rRpevnll3XaaafpJz/5iX74wx/q448/1q233loj/J566qkaMmSIvv3227Bh/auvvlJOTo7OOuss9e3bt9b5c845R4FAQJ9//nmjagYAWIslrwCAdmHfvn01ZgBPdM4552jYsGE12vbs2aOJEyfqjjvuUEzM8f/+ev7552v+/Pl67bXXdM8994T6PvXUU/r6669177336pprrgm1Hz58WJmZmXr88cd14YUX1liuKUmHDh3SsmXL1KlTp1BbSUmJnn76aXXo0EFLlixRWlqaJCkzM1P33HOPcnNzdeqpp4b6Dxw4UOnp6Vq7dq1mzpypDh06hM59/PHHKioq0rXXXiuXy9Xgz2jHjh2KiYlRRkZGg32/+OIL3XfffYqNjdXChQtrXPP73/9e3333nZ544gldeOGFofaf//znyszM1Pz585WdnR1qHzt2rD799FOtXLlS559/fo1x6pqdrHb22WdLkj7//PMaYwEAWgczlACAdmHfvn3Kzs4O+7Vly5Za/Tt06KBbbrklFCal4zuLOp1O5eTkhNqKi4v1wQcf6Pzzz68RJiWpS5cumjx5soqLi0Ozfye66aabaoRJSfrnP/+pY8eO6eqrrw6FSen4JjTTpk0L+9nGjx+vsrIyrV27tkb722+/LUkaN25cXT+WGoqKipSUlNRg+Ny8ebPuvPNOdezYUc8++2yNMLl79259/vnnuuqqq2oFvLS0NF1zzTX66quvaszyXnzxxercubPWr1+v0tLSUHtlZaXWrFkjl8tV54ZKXbt2lXR86S0AoPUxQwkAaBcuvPBCPfHEE43uf/rppysxMbFGW2xsrLp27Sqfzxdqy8nJUTAYVEVFRdgZ0L1790qS8vPzNXz48Brn+vfvX6t/9XsVzzvvvFrnBgwYIKfTWav9qquu0p/+9Ce9/fbboVD73XffadOmTfrBD36g9PT0Bj7tcUePHlX37t3r7fPBBx/ok08+UZ8+ffT444+rS5cuNc5XL2c9fPhw2J/HN998E/pr7969JSkUGF955RV5vV5NmDBBkrRx40YVFxfL4/GoY8eOYeupbj9y5EijPiMAwFoESgAAwnC73WHbnU6nqqqqQsdHjx6VdHy56I4dO+q8X3l5ea226tm1E1XP0J0c1KTju6J27ty5VnvHjh116aWXavXq1frqq6/Uu3dvrVq1SsFgsNGzk5IUHx+vQCBQb58vvvhCwWBQ5513Xtgaq38emzdv1ubNm+u8z7Fjx2ocjx07Vq+88opWrlwZCpQNLXeVFKo3ISGh3roBAC2DQAkAQDNUB8/rr79eM2bMaNK1DoejzvsdPny41rmqqiodOXIk7CzihAkTtHr1aq1YsUKzZ8/WO++8I7fbrUsvvbTR9XTu3FlFRUX19pk+fbr++c9/6pVXXpHT6az1mavrnz17tiZNmtTosfv06aN+/fpp165d+vrrr9WxY0d9/PHH6tGjR63nKk9UHWCTk5MbPRYAwDo8QwkAQDP069dPDodDX3zxhSX369OnjySFne3ctWuXgsFg2OvOOecc9enTR++9954+/vhj7d27V1dccUWTZu569+6tQCCgwsLCOvu4XC79/ve/10UXXaSXXnpJixYtqnG+ehmvmZ9H9UzkO++8o3fffVfBYDD0WpG6VC+hrV4+CwBoXQRKAACaISUlRZdeeqk+//xz/eMf/wj7LsWdO3eGXfIazo9+9CN16NBB77zzjvbt2xdqr6ys1NKlS+u9dvz48Tp69KgeffRRSaq1SVBDBg0aFKq3Pi6XS3PnztXw4cO1fPlyLVy4MHRuwIABGjBggNauXVtrkyDp+Czrtm3bwt7X4/EoISFBa9as0cqVKxUTE6PRo0fXW8uuXbtq1A4AaF0seQUAtAv1vTZEkm644YZar/VorLvuuksFBQVavHix3n33XZ1zzjlKSkpSUVGRcnJytHfvXr3++uuNmi3s2LGjZs6cqccff1yZmZm67LLL5Ha79dFHH8nlcqlbt251zthdeeWV+uMf/6iDBw/q7LPPDvvexvr86Ec/0jPPPKNPP/20waWycXFxevjhh/Wb3/xGL7/8sgzD0O233y5J+s1vfqM77rhDv/vd7/TKK6/orLPOUnx8vA4cOKDPP/9cR44ckdfrrXVPt9utSy65RO+++66Ki4s1bNgwpaam1lmDYRjaunWrevXqVWNHXABA6yFQAgDaherXhtTl2muvNR0oO3XqpGeffVavvfaa3n//fXm9XlVVValr167KyMjQjTfeGHYznbqMGzdOHTt21AsvvKDVq1fL7XZrxIgRuuWWW3TttdeqZ8+eYa9zu926+OKLtWbNmibPTkpSjx49NHToUK1bt06zZ89u8PUh1aHyt7/9rV555RUZhqHZs2frtNNO09KlS/XSSy/pww8/1KpVqxQTE6OUlBQNHDhQo0aNqvOeY8eO1bvvvitJuvrqq+sd///+7/9UWFioWbNmNfmzAgCs4TDCrc0BAAARZ+/evZoyZYouvfRS/e53vwvb58Ybb9T+/fv12muv1blTbX22bt2qO++8U7/+9a915ZVXNrfkFvXwww9ry5Yt+sc//lHna0UAAC2LZygBAIgwJSUltV7f4ff7QxvgXHzxxWGv++ijj/T111/L4/GYCpOSNGTIEA0bNkx//etfa7weJdIUFBTo/fff189//nPCJADYiCWvAABEmG3btumxxx7T0KFDdcopp+jIkSP617/+pf379+v888/XZZddVqP/G2+8oQMHDujtt9+Wy+XSDTfc0Kzxb7/9dr333nsqKiqq9xlGOx04cEBTp07Vj3/8Y7tLAYB2jSWvAABEmIKCAi1dulSff/65iouLJUk9e/bUZZddpp/+9Ke1nvW87rrrVFRUpLS0NN1yyy0aPny4DVUDANojAiUAAAAAwBSeoQQAAAAAmEKgBAAAAACYQqAEAAAAAJhCoAQAAAAAmEKgBAAAAACYQqAEAAAAAJhCoAQAAAAAmEKgBAAAAACYQqAEAAAAAJjy/wOm44Q409+f3wAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a91f3d4c",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d5cd9f61",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-11T20:23:45.952812Z",
     "iopub.status.busy": "2024-09-11T20:23:45.952283Z",
     "iopub.status.idle": "2024-09-11T20:23:46.801993Z",
     "shell.execute_reply": "2024-09-11T20:23:46.801274Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:23:46 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:23:46\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=552572;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=423658;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=614954;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=595776;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=957976;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=104429;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
