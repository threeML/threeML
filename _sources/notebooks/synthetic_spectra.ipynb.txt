{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9f2a0a29",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "359e8ec4",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39c877ae",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e609edb",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b0b62b74",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:15.572633Z",
     "iopub.status.busy": "2025-02-05T03:03:15.572436Z",
     "iopub.status.idle": "2025-02-05T03:03:15.578896Z",
     "shell.execute_reply": "2025-02-05T03:03:15.578376Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7c89edf8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:15.580691Z",
     "iopub.status.busy": "2025-02-05T03:03:15.580520Z",
     "iopub.status.idle": "2025-02-05T03:03:18.754825Z",
     "shell.execute_reply": "2025-02-05T03:03:18.754038Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:17 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#47\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">47</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:17\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=249435;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=776380;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#47\u001b\\\u001b[2m47\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#68\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">68</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=111714;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=71864;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#68\u001b\\\u001b[2m68\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=714643;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=843903;file:///opt/hostedtoolcache/Python/3.9.21/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3e1de7e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:18.757498Z",
     "iopub.status.busy": "2025-02-05T03:03:18.756945Z",
     "iopub.status.idle": "2025-02-05T03:03:18.788906Z",
     "shell.execute_reply": "2025-02-05T03:03:18.788176Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7a4ad7b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:18.791212Z",
     "iopub.status.busy": "2025-02-05T03:03:18.790988Z",
     "iopub.status.idle": "2025-02-05T03:03:21.347800Z",
     "shell.execute_reply": "2025-02-05T03:03:21.347103Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:19 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:19\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=179292;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=244425;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:20 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:20\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=181307;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=682495;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46261001",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eae57b07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:21.349806Z",
     "iopub.status.busy": "2025-02-05T03:03:21.349594Z",
     "iopub.status.idle": "2025-02-05T03:03:21.353109Z",
     "shell.execute_reply": "2025-02-05T03:03:21.352586Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97d8d89a",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "20cd6873",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:21.355105Z",
     "iopub.status.busy": "2025-02-05T03:03:21.354743Z",
     "iopub.status.idle": "2025-02-05T03:03:21.358100Z",
     "shell.execute_reply": "2025-02-05T03:03:21.357466Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af7a46cf",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ad549188",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:21.359927Z",
     "iopub.status.busy": "2025-02-05T03:03:21.359737Z",
     "iopub.status.idle": "2025-02-05T03:03:22.031354Z",
     "shell.execute_reply": "2025-02-05T03:03:22.030657Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:21 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:21\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=176136;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=718562;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=430377;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=67488;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=923643;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=269055;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=944696;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=107382;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=476464;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=366236;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=301370;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=115283;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f35a5600",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "074bfab4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:22.033408Z",
     "iopub.status.busy": "2025-02-05T03:03:22.033201Z",
     "iopub.status.idle": "2025-02-05T03:03:22.731308Z",
     "shell.execute_reply": "2025-02-05T03:03:22.730555Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:22 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:22\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=206522;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=47769;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=890638;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=512305;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=323511;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=898375;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=483911;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=574713;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=224390;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=985380;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=508071;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=595896;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a841501",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "16eac22d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:22.733476Z",
     "iopub.status.busy": "2025-02-05T03:03:22.733267Z",
     "iopub.status.idle": "2025-02-05T03:03:23.717741Z",
     "shell.execute_reply": "2025-02-05T03:03:23.716956Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=239060;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=384674;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=519672;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=699418;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=643215;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=388303;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=931047;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=885154;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=100113;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=415050;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=35426;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=73305;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=266977;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=449461;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=160591;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=84596;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=956856;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=424760;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:23 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:23\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=540417;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=830197;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=642803;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=991728;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=980291;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=571415;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5bddfcb",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "82d92888",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:23.719879Z",
     "iopub.status.busy": "2025-02-05T03:03:23.719679Z",
     "iopub.status.idle": "2025-02-05T03:03:24.436221Z",
     "shell.execute_reply": "2025-02-05T03:03:24.435529Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=13932;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=505036;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=190035;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=407818;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=111866;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=296186;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=99840;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=468459;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=895125;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=308324;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=481935;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=21453;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=822510;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=713574;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=798124;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=578259;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=578928;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=977877;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:24 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:24\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=598612;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=694640;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=953382;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=31626;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=48019;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=717829;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9001d8ac",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1a8acb3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:24.438604Z",
     "iopub.status.busy": "2025-02-05T03:03:24.437979Z",
     "iopub.status.idle": "2025-02-05T03:03:24.455607Z",
     "shell.execute_reply": "2025-02-05T03:03:24.455095Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "aec62292",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:24.457659Z",
     "iopub.status.busy": "2025-02-05T03:03:24.457458Z",
     "iopub.status.idle": "2025-02-05T03:03:24.690575Z",
     "shell.execute_reply": "2025-02-05T03:03:24.690043Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=655240;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=531392;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=989974;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=239706;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=430387;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=685493;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=534378;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=478614;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=252815;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=287709;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=698625;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=377057;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=954121;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=164076;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=755276;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=739719;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=99995;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=474624;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=575446;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=336665;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=234807;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=3029;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=917001;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=294686;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "76e64c76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:24.692694Z",
     "iopub.status.busy": "2025-02-05T03:03:24.692487Z",
     "iopub.status.idle": "2025-02-05T03:03:25.232515Z",
     "shell.execute_reply": "2025-02-05T03:03:25.231790Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "153b99a6",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "536d5653",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "12e043b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:25.234733Z",
     "iopub.status.busy": "2025-02-05T03:03:25.234317Z",
     "iopub.status.idle": "2025-02-05T03:03:26.236757Z",
     "shell.execute_reply": "2025-02-05T03:03:26.236012Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:25 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:25\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=521355;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=540408;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=902042;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=423428;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=851317;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=555222;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139833140388864\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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AGgTY2Njue222/KVr3wlzz//fNO3AcBEUB4BoE3MmjUrW7ZsySc/+cnce++9GRgYGL9tx44deemll7JmzZpceeWVFaYEYLpSHgGgjVxwwQW54447Mjg4mK1bt2Z0dDT79u3Lgw8+mMWLF+fWW2+tOiIA09SssbGxsapDAACn5/7778+OHTvyrW99K3v37s2hQ4fywAMPZPny5VVHA2CaUh4BoA2NjIxk48aN2bdvX5Lk5ptvzre//e2KUwEwnVm2CgBtqKOjI1/4whfG/3311VdXnAiA6U55BIA21NfXl8cffzznnXdeRkZGcu+991YdCYBpTnkEgDZz7NixbN26NbNnz84vf/nLXH755fnDH/6Q3//+91VHA2AaUx4BoM38/Oc/z6FDh7Jp06b09PRk8+bNufDCC/OrX/0qBw4cqDoeANOU8ggAbWT37t3ZvXt3vvSlL+Ub3/hGkuScc87JnXfemeHh4WzdujUnTpyoOCUA05HyCABt4tChQ7nvvvvS3d2d733veyfddtlll2XdunXp7+/P9u3bK0oIwHTmozoAAAAocuYRAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAIuURAACAov8BHED0xY6DcEgAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "212b593a",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b345ade0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:26.238910Z",
     "iopub.status.busy": "2025-02-05T03:03:26.238705Z",
     "iopub.status.idle": "2025-02-05T03:03:26.652958Z",
     "shell.execute_reply": "2025-02-05T03:03:26.652239Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:26 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:26\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=492910;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=171244;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0341139",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2cb3b3e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:26.655179Z",
     "iopub.status.busy": "2025-02-05T03:03:26.654786Z",
     "iopub.status.idle": "2025-02-05T03:03:27.209546Z",
     "shell.execute_reply": "2025-02-05T03:03:27.208881Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=995528;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=677719;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=231799;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=638410;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=597419;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=19749;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41aa059f",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "90e61ddf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T03:03:27.211852Z",
     "iopub.status.busy": "2025-02-05T03:03:27.211460Z",
     "iopub.status.idle": "2025-02-05T03:03:28.106903Z",
     "shell.execute_reply": "2025-02-05T03:03:28.106221Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">03:03:27 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m03:03:27\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=255259;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=401743;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=255355;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=896746;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=35098;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=821933;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
