{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2f0cfec3",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "669123de",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9b6abdb",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7079a56",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "280746b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:45:59.606809Z",
     "iopub.status.busy": "2024-09-12T13:45:59.606600Z",
     "iopub.status.idle": "2024-09-12T13:45:59.613286Z",
     "shell.execute_reply": "2024-09-12T13:45:59.612660Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "26e5bd95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:45:59.615714Z",
     "iopub.status.busy": "2024-09-12T13:45:59.615353Z",
     "iopub.status.idle": "2024-09-12T13:46:02.773472Z",
     "shell.execute_reply": "2024-09-12T13:46:02.772651Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:01 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:01\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=619898;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=773933;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=768043;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=739432;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=642051;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=786133;file:///opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "281dadce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:02.776764Z",
     "iopub.status.busy": "2024-09-12T13:46:02.776302Z",
     "iopub.status.idle": "2024-09-12T13:46:02.810074Z",
     "shell.execute_reply": "2024-09-12T13:46:02.809381Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "52fae22e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:02.813071Z",
     "iopub.status.busy": "2024-09-12T13:46:02.812472Z",
     "iopub.status.idle": "2024-09-12T13:46:05.516537Z",
     "shell.execute_reply": "2024-09-12T13:46:05.515737Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:03 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:03\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=59062;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=921028;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:04 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:04\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=533646;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=225507;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA44AAAMSCAYAAAAlU5qsAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAABKEElEQVR4nO39f2zd130f/j9t8ZKlKUuZ6VZWbVmV4kGIV6UeinTQ4jaxcuNWU0Jgc1uszYq5runWaucCxerMRqG2gop80qZJtn4Doy4cGC2wOE4TB1xkxca1kriN1V9BhrBRemcHBE2hUhLLsyxe3V5e0v7+EZsLK/otSiLv+17y8fgrOvd97/tFMX6TT53XOeeyV1999dUAAADAG7i87AIAAADoboIjAAAAhQRHAAAACgmOAAAAFBIcAQAAKCQ4AgAAUEhwBAAAoJDgCAAAQCHBsST/9E//lHq9nn/6p38quxQAAIBCgmNJJicnMzo6msnJybJLAQAAKCQ4AgAAUEhwBAAAoJDgCAAAQCHBEQAAgEKCIwAAAIUERwAAAAoJjgAAABQSHAEAACgkOAIAAFBIcAQAAKBQX9kFrCW1Wi21Wi1JMj09XXI1AAAASyM4dlC1Wk21Wk2S1Ov1jI6OllwRAADA+WlVBQAAoJDgCAAAQCHBEQAAgEKCIwAAAIUERwAAAAoJjgAAABQSHAEAACgkOAIAAFBIcAQAAKCQ4AgAAEAhwREAAIBCgiMAAACFBEcAAAAKCY4AAAAUEhwBAAAoJDgCAABQSHAEAACgkOAIAABAIcERAACAQn1lF0D3GD80kZnmbPoH+7Jz77ayywEAALqE4Mi88cMTOftiK1dcNSA4AgAA87SqAgAAUEhwBAAAoJDgCAAAQCHBEQAAgEKCIwAAAIUERwAAAAo5joNl4QxIAABYvQRHloUzIAEAYPUSHF8zMzOTD3/4w/m7v/u7TE9P54d+6Ifya7/2a/nhH/7hskvriFajnXZzNknSbs6m1WhnYKhSclUAAEA3sMbxNXNzc7nmmmvysY99LI8//nh+5md+Jvfdd1/Onj1bdmkrrtVoZ2z/0bSbc0mSdnMuY/uPptVol1wZAADQDQTH1wwODub222/Ppk2bcvnll+dd73pX+vr6MjU1VXZpK65+ZCqnTzQWjJ0+0Uj9yOr/2gEAgPPr2VbVs2fP5pFHHsmxY8fyjW98I2fOnMl9992XPXv2nHPtzMxMHnrooTz55JM5c+ZM3vzmN+fOO+/M2972tjf8/KmpqZw5cybXXnvtSn4ZXeHU5MuLjz9/psOVAAAA3ahnZxxPnz6dhx9+OJOTk7nhhhsKr/3ABz6QRx99NO9+97tzzz335PLLL8+9996br33ta4te32q1cvDgwbzvfe/L+vXrV6L8rjK8dcPi49df2eFKAACAbtSzwXF4eDiPPfZYPvWpT+Xuu+9+w+uOHTuWp556KnfddVf27duXkZGRfPSjH80111yTBx544JzrZ2dns3///lx77bW5/fbbV/Ar6B47dm/Jxs1DC8Y2bh7Kjt1bSqoIAADoJj0bHPv7+zM8PHze6770pS9l3bp1GRkZmR8bGBjI3r178/Wvfz3f+ta35sdfeeWVHDx4MJdddlnuv//+XHbZZStSe7cZGKpk5MCuVAbXJUkqg+sycmCXXVUBAIAkPbzGcameffbZXHfddRkaWjij9pa3vCVJ8txzz2XTpk1Jkg996EM5depUPvShD6Wv79L/al544YWcOnVq0dcmJycv+fOX08BQJZXBvrSbc6kM9gmNAADAvFUfHE+dOrXozOTrYy+88EKS5OTJk/nc5z6X/v7+BbOTv//7v58f+ZEfuah7j42N5eGHH76o9wIAAHSLVR8cW61WKpVzZ8/6+/vnX0+Sa665Jk8//fSy3ntkZCRvf/vbF31tcnIyBw8eXNb7laXVaKfdnE2StJuzaTXaZiwBAGAVWfXBcWBgIO32uQfZz8zMzL++Uq6++upcffXVK/b53aDVaGds/9G0m3NJknZzLmP7j1ojCQAAq0jPbo6zVMPDw4uuM3x9bLUHu5VWPzKV0ycaC8ZOn2ikfmSqpIoAAIDltuqD4w033JDjx4+n0VgYbo4dOzb/Ohfv1OTLi48/f6bDlQAAACtl1QfHd77znZmbm8vY2Nj82MzMTB5//PHceOON8zuqcnGGt25YfPz6KztcCQAAsFJ6eo3jpz/96UxPT8+3nX75y1/Ot7/97STJbbfdlvXr1+fGG2/MLbfckgcffDAvvfRSrr322nz+85/PyZMn8/73v7+j9dZqtdRqtSTJ9PR0R++9Unbs3pL6F48vaFfduHkoO3ZvKbEqAABgOV326quvvlp2ERfrZ3/2Z3Py5MlFX/vkJz+ZzZs3J/nuzqkPPfRQnnzyyUxPT2f79u25884782M/9mOdLHeBer2e0dHR/Mmf/El27NhRWh3f63/+2pGcfbGVK64ayM///3Yv+X2tRjuP3POF186AXJf/+D9usTEOAACsIj094/joo48u6bqBgYHs27cv+/btW+GK1qaBoUoqg32vBcc+oREAAFaZVb/GEQAAgEvT0zOOrG3jhyYy05xN/2Bfdu7dVnY5AACwagmO9KzxwxPzazIFRwAAWDlaVQEAAChkxrGDVuNxHAAAwOonOHZQtVpNtVpN8v+O4+gmO/dsm18zCAAA8DoJgXnWCQIAAIuxxhEAAIBCgiMAAACFBEcAAAAKWeNIT2o12mk3Z5Mk7eZsWo12BoYqHbn3+KGJ+U2ErAsFAGAtMONIz2k12hnbfzTt5lySpN2cy9j+o2k12h25//jhiXz1M89l/PBER+4HAABlM+PYQav5HMdOHuVRPzKV0ycaC8ZOn2ikfmQqb33v9hW/PwAArDWCYwd1+zmOl6KTLZunJl9efPz5Mx2rAQAA1hKtqvSc4a0bFh+//soOVwIAAGuD4EjP2bF7SzZuHlowtnHzUHbs3lJSRQAAsLoJjvScgaFKRg7sSmVwXZKkMrguIwd2dWxXVQAAWGuscaR0F3O8xcBQJZXBvrSbc6kM9nUsNJZ5DAgAAJTFjCOl65XjLco+BgQAAMoiOMISFR0DAgAAq5lW1Q5azec4rgWOAQEAYK0SHDtoNZ/juBYMb92Qbz5z4txxx4AAALDKCY6sSRezIc+O3VtS/+LxBe2qjgEBAGAtsMaRNeliNuRxDAgAAGuV4AgX4PVjQJJ09BgQAAAok+AIAABAIcERAACAQoIjAAAAhQRHAAAACgmOAAAAFHKOIz1r555t82cxAgAAK8dv3B1Uq9VSq9WSJNPT0yVX0/t27t1WdgkAALAmCI4dVK1WU61WkyT1ej2jo6MlV8TFMNMJAMBa4zdfuEBmOgEAWGtsjgMAAEAhwZE1p9Vop92cTZK0m7NpNdolVwQAAN1NcGRNaTXaGdt/NO3mXJKk3ZzL2P6jwiMAABQQHClVp2f/6kemcvpEY8HY6RON1I9Mreh9AQCglwmOlKaM2b9Tky8vPv78mRW753IZPzSRr/z5sxk/NFF2KQAArDGCI6UpY/ZveOuGxcevv3LF7rlcxg9P5KufeS7jhwVHAAA6y3EclKaM2b8du7ek/sXjCwLrxs1D2bF7y4rd83uNH5qYPwPSsR4AAPQKM46UpozZv4GhSkYO7EplcF2SpDK4LiMHdmVgqLJi9/xeZg0BAOhFgiOl2bF7SzZuHlow1onZv4GhSiqD351srwz2dSw0AgBArxIcKU3Zs38AAMDSWOPYQbVaLbVaLUkyPT1dcjXd4fXZv3ZzzuwfAAB0KcGxg6rVaqrVapKkXq9ndHS05IoAAADOT6sqAAAAhQRH6AGtRjvt5mySpN2cTavRLrkiAADWEsERulyr0c7Y/qNpN+eSJO3mXMb2HxUeAQDoGMERulz9yFROn2gsGDt9opH6kamSKgIAYK0RHKHLnZp8efHx5890uBIAANYqwRE65GLXKQ5v3bD4+PVXLlttAABQRHCEDriUdYo7dm/Jxs1DC8Y2bh7Kjt1bVqRWAAD45wRH6IBLWac4MFTJyIFdqQyuS5JUBtdl5MCuDAxVVqRWAAD45wRH6IBLXac4MFRJZbAvSVIZ7BMaAQDoKMEROsA6RQAAepngCB1gnSIAAL1McIQOsE4RAIBeJjhCh1inCABArxIcAQAAKNRXdgFrSa1WS61WS5JMT0+XXM3atnPPtsw0Z9M/6D8BAAA4H781d1C1Wk21Wk2S1Ov1jI6OllzR2rVz77aySwAAgJ4hOMIaMH5oYn6GVWgGAOBCCY6wBowfnsjZF1u54qoBwREAgAsmOEKPsC4TAICy+A0UeoSZQgAAyuI4DgAAAAoJjgAAABQSHAEAACgkOAIAAFBIcAQAAKCQ4AgAAEAhwREAAIBCznEECo0fmshMczb9g33OkgQAWKMER+ignXu2zYewTmk12mk3Z5Mk7eZsWo12BoYqS37/+OGJnH2xlSuuGhAcAQDWKMEROqjTwavVaGds/9G0m3NJknZzLmP7j2bkwK4LCo8AAKxt1jjCKlY/MpXTJxoLxk6faKR+ZKqkigAA6EVmHCldGe2ba8WpyZcXH3/+TIcrAQCgl/lNndJZN7dyhrduyDefOXHu+PVXduT+NtYBAFgdtKrCKrZj95Zs3Dy0YGzj5qHs2L2lI/cfPzyRr37muYwfnujI/QAAWBmCI6xiA0OVjBzYlcrguiRJZXCdjXEAALhggiOscgNDlVReWz9aGewTGgEAuGCCIwAAAIVsjtNBtVottVotSTI9PV1yNQAAAEsjOHZQtVpNtVpNktTr9YyOjpZcEQAAwPlpVQXeUKvRTrs5myRpN2fTarRLrggAgDIIjsCiWo12xvYfTbs5lyRpN+cytv+o8AgAsAYJjsCi6kemcvpEY8HY6RON1I9MlVQRAABlERyBRZ2afHnx8efPdLgSAADKJjgCixreumHx8euvXNL7rY8EAFg9BEdgUTt2b8nGzUMLxjZuHsqO3VvO+17rIwEAVhfBEVjUwFAlIwd2pTK4LklSGVyXkQO7MjBUOe97rY8EAFhdBEfgDQ0MVVIZ/O5xr5XBviWFxsT6SACA1UZwBJbdpa6PBACgu/SVXQCw+uzYvSX1Lx5f0K661PWRrxs/NJGZ5mz6B/uyc++2lSgTAIAlMuMILLtLWR/5uvHDE/nqZ57L+OGJlSoTAIAlEhyBFXGx6yMBAOg+WlVhDdi5Z9t82ycAAFwov0XCGrDW1ghaHwkAsLwER2DVGT88kbMvtnLFVQOCIwDAMrDGEQAAgEKCIwAAAIUERwAAAAoJjgAAABQSHAEAACgkOAJdp9Vop92cTZK0m7NpNdolVwQAsLYJjkBXaTXaGdt/NO3mXJKk3ZzL2P6jHQuP44cm8pU/fzbjhyY6cj8AgF4gOAJdpX5kKqdPNBaMnT7RSP3I1JLef6mzleOHJ/LVzzyX8cOCIwDA6/rKLgDobjv3bMtMczb9g515XJyafHnx8efPnPe9bzRbOXJgVwaGKstaJwDAWiI4AoV27t3W0fsNb92Qbz5z4tzx668873uLZivf+t7ty1YjAMBaIzgCK+ZiZit37N6S+hePLwiAGzcPZcfuLed976XMVgIA8MascQRWzM692/KjP/0vL2jWcmCokpEDu1IZXJckqQyuW3Kr6fDWDYuPL2G2EgCANyY4Al1nYKiSymuzlJXBviWvT9yxe0s2bh5aMLbU2UoAAN6Y4AisGpcyWwkAwBsTHL/HZz/72fzSL/1Sbrnllnz84x8vuxzgIlzsbCUAAG9McPwew8PD+cVf/MW84x3vKLsUAACArmFX1e/x4z/+40mSv/qrvyq5EqAMrUY77eZskqTdnE2r0TZjCQCQHp5xPHv2bD7+8Y/nv/7X/5q9e/fmJ37iJ3L48OFFr52ZmckDDzyQf//v/32q1Wp++Zd/OX/7t3/b4YqBbtZqtDO2/2jazbkkSbs5l7H9R9NqtEuuDACgfD0bHE+fPp2HH344k5OTueGGGwqv/cAHPpBHH3007373u3PPPffk8ssvz7333puvfe1rHaoW6Hb1I1MLzo5MktMnGqkfmSqpIgCA7tGzwXF4eDiPPfZYPvWpT+Xuu+9+w+uOHTuWp556KnfddVf27duXkZGRfPSjH80111yTBx54oIMVA93s1OTLi48/f6bDlQAAdJ+eDY79/f0ZHh4+73Vf+tKXsm7duoyMjMyPDQwMZO/evfn617+eb33rWytZJtAjhrduWHz8+is7XAkAQPdZ9ZvjPPvss7nuuusyNLTwUPC3vOUtSZLnnnsumzZtSpLMzs5mbm4ur7zySubm5tJqtdLX15d169Zd1L1feOGFnDp1atHXJicnL+ozgZWxY/eW1L94fEG76sbNQ9mxe0uJVQEAdIdVHxxPnTq16Mzk62MvvPDC/Nif/umf5uGHH57/85/92Z/lvvvuy549ey7q3mNjYws+D+heA0OVjBzYlUfu+ULazblUBtdl5MAuu6oCAGQNBMdWq5VK5dxf/Pr7++dff90dd9yRO+64Y9nuPTIykre//e2LvjY5OZmDBw8u272ASzcwVEllsO+14Nh3waFx/NBEZpqz6R/sy86921aoSgCAzlv1wXFgYCDt9rnb6c/MzMy/vlKuvvrqXH311Sv2+UB3GT88kbMvtnLFVQOCIwCwqvTs5jhLNTw8vOg6w9fHBDsAAIBiqz443nDDDTl+/HgajYXnsx07dmz+dQAAAN7Yqg+O73znOzM3N5exsbH5sZmZmTz++OO58cYb53dUBVaPnXu25V//hxuyc492UQCA5dDTaxw//elPZ3p6er7t9Mtf/nK+/e1vJ0luu+22rF+/PjfeeGNuueWWPPjgg3nppZdy7bXX5vOf/3xOnjyZ97///R2tt1arpVarJUmmp6c7em9YS6wvBABYXj0dHD/5yU/m5MmT839++umn8/TTTydJbr311qxfvz5Jcv/992fTpk154oknMj09ne3bt+eDH/xgbrrppo7WW61WU61WkyT1ej2jo6MdvT/0kp17ts3vUEoxu7kCACutp38je/TRR5d03cDAQPbt25d9+/atcEXAchGAls5urgDASlv1axwBAAC4NIIjAAAAhQRHAAAACgmOAMug1Win3ZxNkrSbs2k12iVXBACwfHp6c5xe4zgO6H4Xs5trq9HO2P6jaTfnkiTt5lzG9h/N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x1rfgEhwBAAAOI+1vgGR4AgAAHAea30DIsERAABgCdbyBkSCIwAAAIUERwAAAAoJjgAAABQSHAEAACjUV3YBAAAAF2r80ERmmrPpH+zLzr3byi5n1RMcAQCAnjN+eCJnX2zliqsGLjg47tyzbT50dlIvh13BEQAAWFPKCm2XEnbLZo0jAAAAhcw4fo+ZmZl8+MMfzt/93d9leno6P/RDP5Rf+7Vfyw//8A+XXRoAAEBpzDh+j7m5uVxzzTX52Mc+lscffzw/8zM/k/vuuy9nz54tuzQAAIDSCI7fY3BwMLfffns2bdqUyy+/PO9617vS19eXqampsksDAAAoTVe2qp49ezaPPPJIjh07lm984xs5c+ZM7rvvvuzZs+eca2dmZvLQQw/lySefzJkzZ/LmN785d955Z972trddch1TU1M5c+ZMrr322kv+LAAAoPeVtSNr2bpyxvH06dN5+OGHMzk5mRtuuKHw2g984AN59NFH8+53vzv33HNPLr/88tx777352te+dkk1tFqtHDx4MO973/uyfv36S/osAABgddi5d1t+9Kf/Zc/tinqpujImDw8P57HHHsvw8HD+4R/+IXfdddei1x07dixPPfVU7r777vzcz/1ckuQnf/Inc/vtt+eBBx7IAw88MH/tr/7qr2Z8fHzRz/mFX/iFjI6Ozv95dnY2+/fvz7XXXpvbb799+b4wAACAHtSVwbG/vz/Dw8Pnve5LX/pS1q1bl5GRkfmxgYGB7N27Nw8++GC+9a1vZdOmTUmSj33sY0u69yuvvJKDBw/msssuy/3335/LLrvs4r4IAACAVaIrW1WX6tlnn811112XoaGhBeNvectbkiTPPffcBX/mhz70oZw6dSq/+7u/m76+rszVAAAAHdXTyejUqVOLzky+PvbCCy9c0OedPHkyn/vc59Lf379gFvP3f//38yM/8iMXXN8LL7yQU6dOLfra5OTkBX8eAABAGXo6OLZarVQqlXPG+/v751+/ENdcc02efvrpZaktScbGxvLwww8v2+cBAACUoaeD48DAQNrt9jnjMzMz86+XaWRkJG9/+9sXfW1ycjIHDx7scEUAAEAZWo122s3ZJEm7OZtWo52BoXMnwbpVTwfH4eHhfOc73zln/PX20KuvvrrTJS1w9dVXl14DAABQrlajnbH9R9NuziVJ2s25jO0/mpEDu3om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",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc98c9da",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c351d916",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:05.519432Z",
     "iopub.status.busy": "2024-09-12T13:46:05.518986Z",
     "iopub.status.idle": "2024-09-12T13:46:05.522827Z",
     "shell.execute_reply": "2024-09-12T13:46:05.522156Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1df2d499",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9403cc07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:05.525323Z",
     "iopub.status.busy": "2024-09-12T13:46:05.524966Z",
     "iopub.status.idle": "2024-09-12T13:46:05.528442Z",
     "shell.execute_reply": "2024-09-12T13:46:05.527791Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc78e2ca",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f98fd86d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:05.530862Z",
     "iopub.status.busy": "2024-09-12T13:46:05.530487Z",
     "iopub.status.idle": "2024-09-12T13:46:06.046367Z",
     "shell.execute_reply": "2024-09-12T13:46:06.045585Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:05 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:05\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=102510;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=411804;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=204026;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=819394;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=519303;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=525421;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=421756;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=804948;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=171043;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=142908;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=826329;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=622250;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25d05337",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0bcbe13a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:06.048894Z",
     "iopub.status.busy": "2024-09-12T13:46:06.048668Z",
     "iopub.status.idle": "2024-09-12T13:46:06.748423Z",
     "shell.execute_reply": "2024-09-12T13:46:06.747687Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:06 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:06\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=429738;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=137108;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=985110;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=768241;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=194384;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=577057;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=726784;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=641410;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=523911;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=543134;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=925077;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=208993;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffa134af",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "69a29f39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:06.751261Z",
     "iopub.status.busy": "2024-09-12T13:46:06.750822Z",
     "iopub.status.idle": "2024-09-12T13:46:07.750950Z",
     "shell.execute_reply": "2024-09-12T13:46:07.750151Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=664387;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=394268;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=620146;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=905761;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=366385;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=107448;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=732294;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=739700;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=800388;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=157499;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=253159;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=118680;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=136260;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=660960;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=328129;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=677771;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=872714;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=690105;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:07 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:07\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=395897;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=160500;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=369053;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=931559;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=833986;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=364023;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0b6169b",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2d8af884",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:07.754057Z",
     "iopub.status.busy": "2024-09-12T13:46:07.753562Z",
     "iopub.status.idle": "2024-09-12T13:46:08.710903Z",
     "shell.execute_reply": "2024-09-12T13:46:08.710122Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=892928;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=629052;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=326432;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=202996;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=602670;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=323649;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=83077;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=802314;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=424741;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=63163;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=850388;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=542994;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=334429;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=699202;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=207049;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=327772;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=840542;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=637351;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:08 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:08\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=937094;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=325314;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=573286;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=430242;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=754199;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=442657;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef0527f8",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7eb53d3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:08.713633Z",
     "iopub.status.busy": "2024-09-12T13:46:08.713105Z",
     "iopub.status.idle": "2024-09-12T13:46:08.731752Z",
     "shell.execute_reply": "2024-09-12T13:46:08.731074Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a54c6609",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:08.734699Z",
     "iopub.status.busy": "2024-09-12T13:46:08.734209Z",
     "iopub.status.idle": "2024-09-12T13:46:08.777342Z",
     "shell.execute_reply": "2024-09-12T13:46:08.776775Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=828144;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=169441;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=447609;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=318120;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=326309;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=673670;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=190059;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=840442;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=462706;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=961144;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=748884;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=662331;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=595016;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=369208;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=877684;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=368031;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=204650;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=806837;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=180092;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=275083;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=912990;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=892597;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=549587;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=880924;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fd5aef9a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:08.779902Z",
     "iopub.status.busy": "2024-09-12T13:46:08.779503Z",
     "iopub.status.idle": "2024-09-12T13:46:09.336950Z",
     "shell.execute_reply": "2024-09-12T13:46:09.336144Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f1cad0a",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4989ea0",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9ca6576f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:09.339816Z",
     "iopub.status.busy": "2024-09-12T13:46:09.339396Z",
     "iopub.status.idle": "2024-09-12T13:46:10.357661Z",
     "shell.execute_reply": "2024-09-12T13:46:10.356873Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:09 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:09\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=293108;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=475434;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1046</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=812227;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=505686;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1046\u001b\\\u001b[2m1046\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1063</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=111462;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=242325;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1063\u001b\\\u001b[2m1063\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140175632525968\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1c0367a",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "22070871",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:10.360480Z",
     "iopub.status.busy": "2024-09-12T13:46:10.360032Z",
     "iopub.status.idle": "2024-09-12T13:46:10.781751Z",
     "shell.execute_reply": "2024-09-12T13:46:10.780926Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:10 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:10\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=682282;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=166476;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a520535",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "5738bf7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:10.784697Z",
     "iopub.status.busy": "2024-09-12T13:46:10.784238Z",
     "iopub.status.idle": "2024-09-12T13:46:11.346110Z",
     "shell.execute_reply": "2024-09-12T13:46:11.345305Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=470734;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=298719;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=817585;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=525175;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=420839;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=370209;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e397a104",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "eb5c6ca5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T13:46:11.348994Z",
     "iopub.status.busy": "2024-09-12T13:46:11.348554Z",
     "iopub.status.idle": "2024-09-12T13:46:12.298663Z",
     "shell.execute_reply": "2024-09-12T13:46:12.297902Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">13:46:11 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m13:46:11\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=996443;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=181266;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=716438;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=989797;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=785936;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=38288;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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XX755fr2229VXFysZ555Rl26dJEkvfPOO3rttdcUGRmp6667rsbfo+pqMIHy2LFjWrhwoeLi4tSuXTtt2rSpwr5PP/20MjIyNGzYMJ177rlavny5pkyZotmzZ+uSSyr+g1GVwsJCTZ8+Xbfffruio6NNjwMAAADURn7RCeUVeW2bv0OHDrrsssvUt29fde/eXd26ddPAgQMVFxenoqIijRs3ThMmTNBNN90kSfrll18kSYMHD9add94pSdq8ebMefvhhrVixotz4Dz/8sO6++25dccUVvrC3fPly9evXT/fdd5+efvpp9ejRQ//+97+1dOnSatc9f/58vf/++/rll18UGhqqt956S5IUGhqq5557TmeccYYMw9C0adP01ltvacyYMfryyy/10ksv6Z133tFZZ52lX3/9VdLJUC1Jx48fV0pKinr06KF77rlHkjR9+nQlJCRo4sSJOnjwoIYMGaI2bdr46ti0aZM++OADtWjRQjt27NCsWbO0dOlSxcXFae7cuXr00Uf1z3/+s8rP8+OPP+qpp57StGnT9Pbbb+uFF17Q/PnztWPHDqWmpur999/XWWedpb///e/V/h7VVIMJlLGxsXr//fcVGxurzMxMjRkzxm+/bdu2adWqVRo7dqxGjBghSbrhhhs0atQozZ07V3PnzvX1HT9+vLZs2eJ3nD/+8Y9KTk72vS4qKtJf//pXtWrVSqNGjbLug/nhLTihgrzCOp2jrhklRkB9hvBIZ8BvwQAAAKiuyLDTbB0/JCREqamp+u9//6uvv/5aa9as0SuvvKIlS5bI6/WqsLDQFyYlqXnz5pJO/l39lVde0dGjRxUaGqqffvpJBQUFioiI8PXNz8/Xhg0bdOjQoTJtP/30k3788UeFhoaqR48ekqRrrrlGrVu3rvbnuuuuu3x/l1+yZIkmTpyopUuXyjAMLVy4UKtXr1ZxcbFyc3N9K6cZGRkaPHiwzjrrLEknb4krdeLECY0YMULJyckaMmSIr/2LL77QQw89JEk688wz1bt37zJ19OrVSy1atJAkffnll7r22msVFxcn6eRq7ksvvVStldfzzjtPXbt2lSR169ZNr732mm/+xMREX80jRozQP/7xj2p/n2qiwQRKp9Op2NjYKvutXr1aoaGhGjRokK8tPDxcSUlJmjdvnnJycny/WS+99FK15i4pKdH06dPlcDg0derUOg8mU3vNUVheVJ3OUR9GxEy1uwSfjj3iNSMjhVAJAACCQmXbUetT27Zt1bZtW912222666679Nlnn+maa67x29fr9WrChAl6/fXXdckll8jj8eiyyy6T1+stEygNw5AkLV68WOHh4WXGyMzMLDeu2b/f3XjjjZo6dap++eUXrV27Vl9++aXeeustRUdH64033tAXX3xR5RhhYWG67LLL9NlnnykpKUmnneY/iP++xtKttFX1DQ0NLXOPZWFh2QWbU78/ISEhFYbQuvw7cNAdyrNz506de+65iooqG8g6deokSfrhhx9qPOZzzz2nw4cP6/HHH1dYWIPJ4DhF5vpsFebbty0EAAAgmOTk5Gjjxo2+18eOHdOePXvUunVrXXDBBYqIiNBHH33ku/7LL7/I6/XqxIkTOueccyRJb775pt+xo6KidOWVV2revHll5tu/f7/atGmj4uJiX9hbv369fv75Z1OfYcOGDTrjjDMUExOj48ePKyYmRtHR0fJ4PHr//fd9/fr27asPP/zQdz/or7/+6tv26nA49MQTT6hly5YaP368CgoKJElXXXWVb4xDhw4pIyOjwjquvPJKrV27Vjk5OZJO3vt49dVXKzQ0VOeff76ysrJUUFCgoqKiMt/Tylx11VVau3atDh48KEl6++23a/bNqYGgS0eHDx/2u5JZ2nbq0nl17N+/Xx999JGcTmeZVc+ZM2f6lpdr4tChQ7791r+3a9cuSdKM1Sm6sN2FNR47kEzoMlOpW6bYXYYK8ry6s9U0u8sAAAAIKkVFRXr55Ze1Z88eRUREqLi4WDfffLNcLpck6eWXX9b06dP1j3/8Qw6HQyNHjtRtt92mSZMmadiwYTrjjDN04403Vjj+c889p6efflo33XSTHA6HmjRpoieeeEJnn322nn/+eT3++OMqKSnRxRdfrI4dO1a77tJ7KA3DkNPp1IsvvqiQkBANGTJEq1at0g033KDmzZvrsssu0759+yRJ3bt3V0pKiu666y45HA6ddtpp5Q7leeSRR/TCCy8oOTlZr7zyih599FE99NBDuvHGG3XWWWfpkksuUdOmTf3W1L59ez344IMaPXq0pJOH8kyfPl2SlJCQoMTERN10000688wzdemll+q7776r8nO2b99eKSkpuv322+v8UB6HUbqm3ICU3kPp75TX2267Ta1bt9asWbPK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49H48eOVnZ2t66+/XomJicrKytIDDzxQLhQdP35cY8eO1cKFC9W0aVMNHjxYiYmJ2rFjhyZNmqS1a9f6neOxxx7TihUr1K1bN/3f//2f757Fjz/+WI899pj27NmjG264Qf3799f333+vyZMnq6ioqMwYgwYN8r3n94qLi5Wenq5mzZr5topWZuPGjZKkiy66qOpvkKTs7GyNGzdOBw4c0KxZs3xBdO/evRo9erTeffddnXPOObrlllt01VVX6auvvtLYsWPLhN+zzz5bl112mfbt2+c3rP/444/KzMzUhRdeqPbt25e7ftFFF8nr9Wrr1q3VqhkAYC22vAIAGoW9e/eWWQE81UUXXaQrr7yyTNsPP/ygIUOG6N5771VIyMl/f7300ks1c+ZMLV26VA888ICv7wsvvKCffvpJU6ZM0U033eRrP3LkiJKTkzVr1ixdccUVZbZrStLhw4e1YMECnX766b623Nxcvfjii2rSpInmzZun1q1bS5KSk5P1wAMPKCsrS2effbavf9euXRUfH69Vq1YpJSVFTZo08V376quvdPDgQQ0bNkxOp7PK79GWLVsUEhKidu3aVdn3+++/10MPPaSwsDClpqaWec9TTz2lX375Rc8995yuuOIKX/uf/vQnJScna+bMmVq4cKGvPSkpSd98843S09N16aWXlpmnotXJUh06dJAkbd26tcxcAID6wQolAKBR2Lt3rxYuXOj315dfflmuf5MmTXTPPff4wqR08mTR0NBQZWZm+tqOHj2qzz//XJdeemmZMClJZ5xxhkaMGKGjR4/6Vv9Odeedd5YJk5L073//W7/++qtuvPFGX5iUTh5CM3r0aL+fbdCgQcrPz9eqVavKtH/00UeSpIEDB1b0bSnj4MGDio6OrjJ8btiwQffdd5+aNm2ql19+uUyY3LFjh7Zu3aobbrihXMBr3bq1brrpJv34449lVnmvvfZaNWvWTKtXr1ZeXp6vvaioSCtXrpTT6azwQKXmzZtLOrn1FgBQ/1ihBAA0CldccYWee+65avc/99xzFRkZWaYtLCxMzZs3l8fj8bVlZmaquLhYJ06c8LsCumfPHknSrl271KNHjzLXOnXqVK5/6XMVL7nkknLXOnfurNDQ0HLtN9xwg/7xj3/oo48+8oXaX375RevXr9fFF1+s+Pj4Kj7tScePH9eZZ55ZaZ/PP/9cX3/9tdq2batZs2bpjDPOKHO9dDvrkSNH/H4/fv75Z9//tmnTRpJ8gfG9996T2+3W4MGDJUnr1q3T0aNH5XK51LRpU7/1lLYfO3asWp8RAGAtAiUAAH5ERUX5bQ8NDVVJSYnv9fHjxyWd3C66ZcuWCscrKCgo11a6unaq0hW63wc16eSpqM2aNSvX3rRpU/Xp00crVqzQjz/+qDZt2mj58uUqLi6u9uqkJIWHh8vr9Vba5/vvv1dxcbEuueQSvzWWfj82bNigDRs2VDjOr7/+WuZ1UlKS3nvvPaWnp/sCZVXbXSX56o2IiKi0bgBA3SBQAgBQC6XB89Zbb9X48eNr9F6Hw1HheEeOHCl3raSkRMeOHfO7ijh48GCtWLFCaWlpmjRpkj7++GNFRUWpT58+1a6nWbNmOnjwYKV9xowZo3//+9967733FBoaWu4zl9Y/adIkDR06tNpzt23bVh07dtT27dv1008/qWnTpvrqq6/UsmXLcvdVnqo0wMbExFR7LgCAdbiHEgCAWujYsaMcDoe+//57S8Zr27atJPld7dy+fbuKi4v9vu+iiy5S27Zt9emnn+qrr77Snj17dN1119Vo5a5Nmzbyer3KycmpsI/T6dRTTz2lq6++WosWLdKcOXPKXC/dxmvm+1G6Evnxxx/rk08+UXFxse+xIhUp3UJbun0WAFC/CJQAANRCbGys+vTpo61bt+rtt9/2+yzFbdu2+d3y6s8111yjJk2a6OOPP9bevXt97UVFRZo/f36l7x00aJCOHz+uZ555RpLKHRJUlYSEBF+9lXE6nZo+fbp69OihxYsXKzU11Xetc+fO6ty5s1atWlXukCDp5Crr5s2b/Y7rcrkUERGhlStXKj09XSEhIerfv3+ltWzfvr1M7QCA+sWWVwBAo1DZY0Mk6fbbby/3WI/qmjx5snbv3q25c+fqk08+0UUXXaTo6GgdPHhQmZmZ2rNnj95///1qrRY2bdpUKSkpmjVrlpKTk9W3b19FRUXpiy++kNPpVIsWLSpcsbv++uv1yiuv6NChQ+rQoYPf5zZW5pprrtFLL72kb775psqtsqeddpqefPJJ/fWvf9W7774rwzA0ceJESdJf//pX3XvvvXr88cf13nvv6cILL1R4eLgOHDigrVu36tixY3K73eXGjIqKUq9evfTJJ5/o6NGjuvLKKxUXF1dhDYZhaOPGjTr//PPLnIgLAKg/BEoAQKNQ+tiQigwbNsx0oDz99NP18ssva+nSpfrss8/kdrtVUlKi5s2bq127drrjjjv8HqZTkYEDB6pp06Z68803tWLFCkVFRalnz5665557NGzYMLVq1crv+6KionTttddq5cqVNV6dlKSWLVuqe/fuysjI0KRJk6p8fEhpqPzb3/6m9957T4ZhaNKkSTrnnHM0f/58LVq0SGvXrtXy5csVEhKi2NhYde3aVb17965wzKSkJH3yySeSpBtvvLHS+f/zn/8oJydHEyZMqPFnBQBYw2H425sDAAACzp49ezRy5Ej16dNHjz/+uN8+d9xxh/bv36+lS5dWeFJtZTZu3Kj77rtPf/nLX3T99dfXtuQ69eSTT+rLL7/U22+/XeFjRQAAdYt7KAEACDC5ubnlHt9RWFjoOwDn2muv9fu+L774Qj/99JNcLpepMClJl112ma688kq98cYbZR6PEmh2796tzz77TH/6058IkwBgI7a8AgAQYDZv3qxnn31W3bt311lnnaVjx47p22+/1f79+3XppZeqb9++Zfp/8MEHOnDggD766CM5nU7dfvvttZp/4sSJ+vTTT3Xw4MFK72G004EDBzRq1CjdfPPNdpcCAI0aW14BAAgwu3fv1vz587V161YdPXpUktSqVSv17dtXt912W7l7PYcPH66DBw+qdevWuueee9SjRw8bqgYANEYESgAAAACAKdxDCQAAAAAwhUAJAAAAADCFQAkAAAAAMIVACQAAAAAwhUAJAAAAADCFQAkAAAAAMIVACQAAAAAwhUAJAAAAADCFQAkAAAAAMOX/A1g2HaR0POytAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
