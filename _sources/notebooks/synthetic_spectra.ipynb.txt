{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3b4b942f",
   "metadata": {},
   "source": [
    "# Generating Synthetic Data\n",
    "In data analysis, it is important that we have the ability to test our assumptions. One powerful tool to enable these tests is simulation. In 3ML, we have several ways to generate synthetic data sets both from models and from fits."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d238c9b",
   "metadata": {},
   "source": [
    "## Synthetic data from spectra"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3af0bc1",
   "metadata": {},
   "source": [
    "### Genertating data from models\n",
    "\n",
    "Most of the current plugins support the ability to generate synthetic data directly from a model. This can be very useful to assertain the detectability of a source/component/line or simply to see how models look once they are transformed into data. Below we will demonstrate how different plugins transform a model into synthetic data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1757428c",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "In many of the examples, the basic XYLike plugin has been used to generate synthetic data. Here, we will revisit the plugin for completeness.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c28c7162",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:48.105177Z",
     "iopub.status.busy": "2024-09-23T20:11:48.104975Z",
     "iopub.status.idle": "2024-09-23T20:11:48.111454Z",
     "shell.execute_reply": "2024-09-23T20:11:48.110967Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "079e3d4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:48.113520Z",
     "iopub.status.busy": "2024-09-23T20:11:48.113162Z",
     "iopub.status.idle": "2024-09-23T20:11:51.220240Z",
     "shell.execute_reply": "2024-09-23T20:11:51.219557Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:49 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The naima package is not available. Models that depend on it will not be         </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">48</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                         </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:49\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The naima package is not available. Models that depend on it will not be        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=261624;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=282536;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#48\u001b\\\u001b[2m48\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                        \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it  </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">functions.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">69</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">will not be available.                                                            </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">               </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=444837;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py\u001b\\\u001b[2mfunctions.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=252969;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/functions.py#69\u001b\\\u001b[2m69\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mwill not be available.                                                           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m               \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:50 </span><span style=\"color: #af5fd7; text-decoration-color: #af5fd7\">WARNING </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> The ebltable package is not available. Models that depend on it will not be     </span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">absorption.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">33</span></a>\n",
       "<span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span>         <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">available                                                                        </span><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">                </span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:50\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;134mWARNING \u001b[0m \u001b[1;38;5;251m The ebltable package is not available. Models that depend on it will not be    \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=173830;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py\u001b\\\u001b[2mabsorption.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=476802;file:///opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/astromodels/functions/functions_1D/absorption.py#33\u001b\\\u001b[2m33\u001b[0m\u001b]8;;\u001b\\\n",
       "\u001b[38;5;46m         \u001b[0m         \u001b[1;38;5;251mavailable                                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b[2m                \u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.io.package_data import get_path_of_data_file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "52fce4aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:51.222630Z",
     "iopub.status.busy": "2024-09-23T20:11:51.222293Z",
     "iopub.status.idle": "2024-09-23T20:11:51.252849Z",
     "shell.execute_reply": "2024-09-23T20:11:51.252239Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "set_threeML_style()\n",
    "silence_warnings()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ced596a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:51.254990Z",
     "iopub.status.busy": "2024-09-23T20:11:51.254597Z",
     "iopub.status.idle": "2024-09-23T20:11:53.921615Z",
     "shell.execute_reply": "2024-09-23T20:11:53.920947Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:51 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:51\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=848657;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=205303;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:53 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:53\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=845898;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=667989;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select an astromodels function to from which to simualte\n",
    "generating_function = Powerlaw(K=1.0, index=-2, piv=10.0)\n",
    "\n",
    "# set up the x grig points\n",
    "x_points = np.logspace(0, 2, 50)\n",
    "\n",
    "# call the from_function classmethod\n",
    "xyl_generator = XYLike.from_function(\n",
    "    \"sim_data\",\n",
    "    function=generating_function,\n",
    "    x=x_points,\n",
    "    yerr=0.3 * generating_function(x_points),\n",
    ")\n",
    "\n",
    "\n",
    "fig = xyl_generator.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bab40ac1",
   "metadata": {},
   "source": [
    "#### SpectrumLike\n",
    "\n",
    "Generating synthetic spectra from SpectrumLike (non-energy dispersed count spectra) can take many forms with different inputs.\n",
    "\n",
    "First, let's set the energy bins we will use for all generated spectra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "24e4a111",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:53.923869Z",
     "iopub.status.busy": "2024-09-23T20:11:53.923461Z",
     "iopub.status.idle": "2024-09-23T20:11:53.926786Z",
     "shell.execute_reply": "2024-09-23T20:11:53.926276Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "energies = np.logspace(0, 2, 51)\n",
    "\n",
    "# create the low and high energy bin edges\n",
    "low_edge = energies[:-1]\n",
    "high_edge = energies[1:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d11fb63",
   "metadata": {},
   "source": [
    "Now, let's use a blackbody for the source spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4f950fb9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:53.928513Z",
     "iopub.status.busy": "2024-09-23T20:11:53.928318Z",
     "iopub.status.idle": "2024-09-23T20:11:53.931499Z",
     "shell.execute_reply": "2024-09-23T20:11:53.930987Z"
    }
   },
   "outputs": [],
   "source": [
    "# get a BPL source function\n",
    "source_function = Blackbody(K=1, kT=5.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "307a33d1",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "13cbfe48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:53.933374Z",
     "iopub.status.busy": "2024-09-23T20:11:53.933184Z",
     "iopub.status.idle": "2024-09-23T20:11:54.445205Z",
     "shell.execute_reply": "2024-09-23T20:11:54.444577Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=299369;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=653384;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=531410;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=202046;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=611614;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=451301;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:54 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:54\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=801702;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=573621;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=834385;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=209459;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=206810;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=781718;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\", source_function=source_function, energy_min=low_edge, energy_max=high_edge\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7828e2ba",
   "metadata": {},
   "source": [
    "##### Gaussian spectrum with no background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1fe377b5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:54.447156Z",
     "iopub.status.busy": "2024-09-23T20:11:54.446960Z",
     "iopub.status.idle": "2024-09-23T20:11:55.123519Z",
     "shell.execute_reply": "2024-09-23T20:11:55.122804Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=767469;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=94398;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=152536;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=21853;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=780950;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=506851;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=73408;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=909321;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=771107;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=449454;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=20336;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=326144;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    source_errors=0.5 * source_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc67b061",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Poisson Background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "766421c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:55.125803Z",
     "iopub.status.busy": "2024-09-23T20:11:55.125448Z",
     "iopub.status.idle": "2024-09-23T20:11:56.067376Z",
     "shell.execute_reply": "2024-09-23T20:11:56.066662Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:55 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:55\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=960324;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=242286;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=94416;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=792230;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=818481;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=389630;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=360218;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=497950;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=588259;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=505308;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=940088;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=752585;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=95171;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=136721;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=136133;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=22102;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=971521;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=917275;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=66461;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=762399;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=750406;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=435212;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=438157;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=599371;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# power law background function\n",
    "background_function = Powerlaw(K=0.7, index=-1.5, piv=10.0)\n",
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca351c90",
   "metadata": {},
   "source": [
    "##### Poisson spectrum with Gaussian background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "4cdefc7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:56.069705Z",
     "iopub.status.busy": "2024-09-23T20:11:56.069235Z",
     "iopub.status.idle": "2024-09-23T20:11:56.953864Z",
     "shell.execute_reply": "2024-09-23T20:11:56.953164Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:56 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:56\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=725641;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=68513;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=107746;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=87892;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=901534;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=921529;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=228660;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=918256;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: gaussian                                                      </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: gaussian                                                     \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=759953;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=228852;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=582213;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=728585;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=932209;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=868551;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=52811;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=313224;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=579483;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=686662;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=932670;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=762079;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=31796;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=271581;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: gaussian                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: gaussian                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=709014;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=466752;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "spectrum_generator = SpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    background_errors=0.1 * background_function(low_edge),\n",
    "    energy_min=low_edge,\n",
    "    energy_max=high_edge,\n",
    ")\n",
    "\n",
    "\n",
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67ac2c28",
   "metadata": {},
   "source": [
    "#### DispersionSpectrumLike\n",
    "\n",
    "DispersionSpectrumLike behaves in the same fashion as SpectrumLike except that a 3ML Instrument response must be set which means that the energy bins do not need to be specified as they are derived from the response\n",
    "\n",
    "Let's grab a response from an instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6a4042c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:56.955997Z",
     "iopub.status.busy": "2024-09-23T20:11:56.955770Z",
     "iopub.status.idle": "2024-09-23T20:11:56.973359Z",
     "shell.execute_reply": "2024-09-23T20:11:56.972842Z"
    }
   },
   "outputs": [],
   "source": [
    "from threeML.io.package_data import get_path_of_data_file\n",
    "from threeML.utils.OGIP.response import OGIPResponse\n",
    "\n",
    "# we will use a demo response\n",
    "response = OGIPResponse(get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c22ccd17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:56.975402Z",
     "iopub.status.busy": "2024-09-23T20:11:56.975023Z",
     "iopub.status.idle": "2024-09-23T20:11:57.018331Z",
     "shell.execute_reply": "2024-09-23T20:11:57.017805Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=624055;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=939313;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=160563;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=506108;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=481276;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=399054;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=492775;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=457849;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=854110;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=314470;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: </span><span style=\"color: #800080; text-decoration-color: #800080; font-weight: bold; font-style: italic\">None</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">                                                           </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: \u001b[0m\u001b[1;3;35mNone\u001b[0m\u001b[1;38;5;251m                                                          \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=260735;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=931368;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=387630;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=375283;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:57 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:57\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=539338;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=492918;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=222265;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=871572;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=21615;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=508758;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=857604;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=372164;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=118959;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=175181;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# rescale the functions for the response\n",
    "source_function = Blackbody(K=1e-7, kT=500.0)\n",
    "background_function = Powerlaw(K=1, index=-1.5, piv=1.0e3)\n",
    "spectrum_generator = DispersionSpectrumLike.from_function(\n",
    "    \"fake\",\n",
    "    source_function=source_function,\n",
    "    background_function=background_function,\n",
    "    response=response,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4201f5d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:57.020259Z",
     "iopub.status.busy": "2024-09-23T20:11:57.020056Z",
     "iopub.status.idle": "2024-09-23T20:11:57.557103Z",
     "shell.execute_reply": "2024-09-23T20:11:57.556368Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = spectrum_generator.view_count_spectrum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6c238eb",
   "metadata": {},
   "source": [
    "### Generating spectra from fitted models\n",
    "\n",
    "When performing goodness of fit tests, likelihood ratio tests (both automatic in 3ML) or posterior predictive checks, we need to generate synthetic data from our fitted models. Therefore, we proved methods to do this for most current plugins."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f140cdc2",
   "metadata": {},
   "source": [
    "#### XYLike\n",
    "\n",
    "Let's load some example, generic XY data and fit it with a power law."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5dd6c9d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:57.559142Z",
     "iopub.status.busy": "2024-09-23T20:11:57.558936Z",
     "iopub.status.idle": "2024-09-23T20:11:58.545698Z",
     "shell.execute_reply": "2024-09-23T20:11:58.545037Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=156048;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=732650;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to minuit                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1045</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to minuit                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=41126;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=326065;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1045\u001b\\\u001b[2m1045\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> set the minimizer to MINUIT                                             </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">joint_likelihood.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">1062</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m set the minimizer to MINUIT                                            \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=253876;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py\u001b\\\u001b[2mjoint_likelihood.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=253950;file:///home/runner/work/threeML/threeML/threeML/classicMLE/joint_likelihood.py#1062\u001b\\\u001b[2m1062\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.K</th>\n",
       "      <td>(8.8 +/- 0.8) x 10^-1</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>source.spectrum.main.Powerlaw.index</th>\n",
       "      <td>-1.974 +/- 0.033</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    result             unit\n",
       "parameter                                                                  \n",
       "source.spectrum.main.Powerlaw.K      (8.8 +/- 0.8) x 10^-1  1 / (keV s cm2)\n",
       "source.spectrum.main.Powerlaw.index       -1.974 +/- 0.033                 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table139651245061840\">\n",
       "<tr><td>1.00</td><td>-0.87</td></tr>\n",
       "<tr><td>-0.87</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.87\n",
       "-0.87  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>xyl</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>22.762756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       -log(likelihood)\n",
       "xyl           22.762756\n",
       "total         22.762756"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>49.780832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>53.349559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             49.780832\n",
       "BIC             53.349559"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_path = get_path_of_data_file(\"datasets/xy_powerlaw.txt\")\n",
    "\n",
    "\n",
    "xyl = XYLike.from_text_file(\"xyl\", data_path)\n",
    "\n",
    "fit_function = Powerlaw()\n",
    "\n",
    "xyl.fit(fit_function)\n",
    "\n",
    "fig = xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abfc8e8c",
   "metadata": {},
   "source": [
    "Once our fit has been finished, we can produce simulated data sets from those model parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c0338ab1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:58.547850Z",
     "iopub.status.busy": "2024-09-23T20:11:58.547422Z",
     "iopub.status.idle": "2024-09-23T20:11:58.960556Z",
     "shell.execute_reply": "2024-09-23T20:11:58.959856Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:58 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Using Gaussian statistic (equivalent to chi^</span><span style=\"color: #c0c0c0; text-decoration-color: #c0c0c0; font-weight: bold\">2</span><span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\">) with the provided errors.            </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">XYLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">93</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:58\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Using Gaussian statistic \u001b[0m\u001b[1;38;5;251m(\u001b[0m\u001b[1;38;5;251mequivalent to chi^\u001b[0m\u001b[1;37m2\u001b[0m\u001b[1;38;5;251m)\u001b[0m\u001b[1;38;5;251m with the provided errors.           \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=933568;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py\u001b\\\u001b[2mXYLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=688073;file:///home/runner/work/threeML/threeML/threeML/plugins/XYLike.py#93\u001b\\\u001b[2m93\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_xyl = xyl.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_xyl.plot(x_scale=\"log\", y_scale=\"log\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4d05675",
   "metadata": {},
   "source": [
    "#### SpectrumLike and DispersionSpectrumLike (OGIPLike)\n",
    "\n",
    "Both spectrum plugins work in the same way when generating data from a fit. They both keep track of the statistical properties of the likelihoods in the plugin so that the simulated datasets have the appropriate statistical properties. Additionally, background, responsses, etc. are simulated and/or kept track of as well.\n",
    "\n",
    "Let's fit an example energy dispersed spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4f7b17e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:58.962829Z",
     "iopub.status.busy": "2024-09-23T20:11:58.962421Z",
     "iopub.status.idle": "2024-09-23T20:11:59.511469Z",
     "shell.execute_reply": "2024-09-23T20:11:59.510727Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">20:11:59 </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m20:11:59\u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=952367;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=276718;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=23859;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=484728;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=62016;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=821081;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ogip_data = OGIPLike(\n",
    "    \"ogip\",\n",
    "    observation=get_path_of_data_file(\"datasets/ogip_powerlaw.pha\"),\n",
    "    background=get_path_of_data_file(\"datasets/ogip_powerlaw.bak\"),\n",
    "    response=get_path_of_data_file(\"datasets/ogip_powerlaw.rsp\"),\n",
    ")\n",
    "\n",
    "ogip_data.view_count_spectrum()\n",
    "# define the function\n",
    "fit_function = Cutoff_powerlaw(K=1e-3, xc=1000, index=-0.66)\n",
    "\n",
    "# define the point source\n",
    "point_source = PointSource(\"ps\", 0, 0, spectral_shape=fit_function)\n",
    "\n",
    "# define the model\n",
    "model = Model(point_source)\n",
    "\n",
    "ogip_data.set_model(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c58bc117",
   "metadata": {},
   "source": [
    "Now we can now generate synthetic datasets from the fitted model. This will include the background sampled properly from the profile likelihood. The instrument response is automatically passed to the new plugin."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "36de127b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-23T20:11:59.513373Z",
     "iopub.status.busy": "2024-09-23T20:11:59.513167Z",
     "iopub.status.idle": "2024-09-23T20:12:00.416618Z",
     "shell.execute_reply": "2024-09-23T20:12:00.415937Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> Auto-probed noise models:                                                    </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">490</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m Auto-probed noise models:                                                   \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=839220;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=630533;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#490\u001b\\\u001b[2m490\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - observation: poisson                                                       </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">491</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - observation: poisson                                                      \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=943589;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=736181;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#491\u001b\\\u001b[2m491\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ff00; text-decoration-color: #00ff00\">         </span><span style=\"color: #00ffaf; text-decoration-color: #00ffaf\">INFO    </span> <span style=\"color: #c6c6c6; text-decoration-color: #c6c6c6; font-weight: bold\"> - background: poisson                                                        </span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">SpectrumLike.py</span></a><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">:</span><a href=\"file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\" target=\"_blank\"><span style=\"color: #7f7f7f; text-decoration-color: #7f7f7f\">492</span></a>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[38;5;46m        \u001b[0m\u001b[38;5;46m \u001b[0m\u001b[38;5;49mINFO    \u001b[0m \u001b[1;38;5;251m - background: poisson                                                       \u001b[0m\u001b[1;38;5;251m \u001b[0m\u001b]8;id=785412;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py\u001b\\\u001b[2mSpectrumLike.py\u001b[0m\u001b]8;;\u001b\\\u001b[2m:\u001b[0m\u001b]8;id=285934;file:///home/runner/work/threeML/threeML/threeML/plugins/SpectrumLike.py#492\u001b\\\u001b[2m492\u001b[0m\u001b]8;;\u001b\\\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA5QAAAMSCAYAAAAV34uNAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAABqgElEQVR4nO3de1xVVf7/8fcGOgcBk8SGzCxSM7VMrOxiE5mdSjMvjd8sbGbSX2GpqGVlxUzzdcqxsr5ThmVjY1rN41tZ2oVSs2ODOGqXsZw0BW0KUhtRLJQDwRHYvz/8chI53DYb9gFez8eDx3DWXmetz2GKfLvWXtswTdMUAAAAAACNFOZ0AQAAAACA1olACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAZQkpLS5WTk6PS0lKnSwEAAACAehEoQ0heXp5SUlKUl5fndCkAAAAAUC8CJQAAAADAEgIlAAAAAMASAiUAAAAAwJIIpwsAAAAAUD/TNFVeXq6KigqnS0EbEBYWpoiICIWFNW2NkRVKAAAAIMSZpqlDhw6prKzM6VLQRpSXl+vw4cPy+XxNGocVSgAAACDElZeXKyIiQjExMU6XgjYkKipKhw8fDvzzZQUrlAAAAECIq6iosPwHfqAuLpdL5eXllt9PoAQAAAAAWEKgBAAAAABYwro5AAAAgEYZPXq0JOnIkSP69ttv1bt3b0nSmWeeqaeffrpG/x07duibb77RiBEj6h17z549GjNmjP75z3/aWjOaB4ESAAAAQKO88847kn4Of1Wva7Njxw55vd4GBUq0LgRKAAAAoBUxTVNlJf5mncMd5ZJhGI1+39tvv63FixdLkrp27apHHnlEEREReuaZZ1RUVKTRo0drwIABevjhh3XPPffo22+/1ZEjR9S1a1f96U9/0sknn2z3R0EzI1ACAAAArUhZiV/JsWnNOserhXMVGe1u1Ht27typJ554QitWrFB8fLwWLlyo3/3ud/rrX/+q6dOny+v16rnnngv0/93vfqfOnTtLkhYtWqT09HQ9/PDDtn4OND8CJQAAAIAm++STT3T55ZcrPj5ekjR+/Hg9++yzqqioCNo/IyND77zzjvx+v8rKynTSSSe1ZLmwCYESAAAAaEXcUS69Wji32edoqrq2zP7zn//UK6+8otdff11xcXFau3atnnnmmSbPiZZHoAQAAABaEcMwGr0dtSVcfPHFev7555Wfn6/4+Hi99tpruvTSSxUeHq6YmBgVFRUF+h4+fFjR0dGKjY2V3+/X66+/7mDlaAoCJQAAAIAm6927t+677z7dfvvtko4eyjNnzhxJ0qWXXqoXX3xRI0eO1MCBA/XQQw/p3Xff1bBhwxQbG6vBgwcrPz/fyfJhkWGapul0ETgqJydHKSkpeuGFF3T22Wc7XQ4AAABCRGlpqSQpMjLS4UrQ1jT1n60wO4sBAAAAALQfBEoAAAAAgCXcQ1kPv9+vP//5z/rnP/8pn8+nhIQEpaam6txzz3W6NAAAAABwFCuU9aioqNApp5yiZ599VitXrtSNN96oBx98UCUlJU6XBgAAAACOIlDWo0OHDpowYYLi4+MVFhamq666ShEREdq9e7fTpQEAAACAo1rNlteSkhK99tpr2r59u3bs2KGioiI9+OCDGj58eI2+fr9fixcv1po1a1RUVKSePXvq9ttv16BBg5pcx+7du1VUVKRu3bo1eSwAAAAAaM1azQrloUOHtHTpUuXl5alXr1519n300Ue1bNkyXX311Zo+fbrCwsI0a9Ysffnll02qoaysTHPmzNEtt9yimJiYJo0FAAAAAK1dqwmUcXFxeuutt/TGG29o8uTJtfbbvn271q5dq0mTJmnKlCkaNWqUnn76aZ1yyilauHBhtb5Tp05VUlJS0K8XXnihWt/y8nL94Q9/ULdu3TRhwoTm+IhtSsb8LKdLAAAAQDNas2aNfvWrX2n06NEaNmyYfvvb36qystLyeEOHDtWOHTsa/b5f/epX+uSTT+rt98ADD+jyyy/X6NGjNXLkSN1yyy3697//baVUSdKePXt04YUXWn5/SyouLm6259y3mi2vLpdLcXFx9fZbt26dwsPDNWrUqECb2+3WiBEjtGjRIuXn5ys+Pl6S9OyzzzZo7srKSs2ZM0eGYSgtLU2GYVj7EO1IRnqWRs5IcroMAAAANIP9+/froYce0ooVKwK3gn311Vch/+fk2267LbA4tGjRIs2fP1/PPPOMY/VUBfCwsFazzldDqwmUDbVr1y6ddtppio6Ortbet29fSdLXX38dCJQN9eSTT+rgwYN68sknFRHR5n5kAAAAaGWWffOlSsqPNNv4UREnaFyP82q9fvDgQYWHh6tTp06BtnPOOSfw/b///W/NnTtX+/fvlySNHz9eycnJWrJkid577z2Vl5crIiJCv//97zVw4MAa4x84cEBz5szR3r17VVZWpqFDh+ruu++WJH3++ef64x//qIqKCvXv318VFRWN/nymacrn8wXqLy8v1x133KEff/xRZWVl6tOnjx555BFFRUVJkpYvX66XX35ZpmkqIiKiRgj1+/1KS0tTVFSU/vu//1sHDx7UAw88oH379umUU05Rp06d1KNHD02bNk3p6enauXOnSkpK9J///EdLlizRpk2btHjxYklS165d9cgjjyg+Pl4rVqyQ1+vVc889J0n6+9//rhdffFGvvPKKPvnkEz3yyCO68MIL9fnnn6uiokKPPfaY+vfvL0l67bXX9OKLLyoqKkpXX311o39GDdXm0tHBgweDrmRWtRUUFDRqvH379um9996Ty+Wqtuo5b948DRgwoNH1FRQU6ODBg0Gv5eXlNXo8AAAAtD8l5UdUXO53bP6zzz5bF1xwgYYOHapBgwZp4MCBGjlypOLj41VeXq4pU6Zo2rRpuv766yVJP/zwgyRp9OjRmjhxoiRpy5YteuCBB7R69eoa4z/wwAO64447dNFFFwXC3qpVq3TVVVfp7rvv1qOPPqrBgwfrH//4h1asWNHguhcvXqy33npLP/zwg8LDw/W3v/1NkhQeHq4nn3xSJ510kkzT1OzZs/W3v/1NkyZN0ieffKJnn31Wr732mn7xi1/op59+kqTAn+kPHz6s1NRUDR48WHfeeackac6cOUpMTNT06dN14MABjRkzRj169AjU8cUXX+jtt99Wly5dtHPnTj3xxBNasWKF4uPjtXDhQv3ud7/TX//613o/zzfffKM//elPmj17tl599VU9/fTTWrx4sXbu3Kn09HS99dZb+sUvfqE///nPDf4ZNVabC5RlZWU64YQTarS7XK7A9cY45ZRTlJVl3/2A7777rpYuXVpnH3/pEZUWN67OUGNWmiH1GdxRrpDfggEAANBQURE1/7zbkuOHhYUpPT1d//73v/XZZ58pKytLzz//vJYvXy6/36+ysrJAmJSkzp07Szp63snzzz+vwsJChYeH69tvv1VpaakiIyMDfUtKSrRp06ZqC0ElJSX69ttv9c033yg8PFyDBw+WJP3yl79U9+7dG/y5jt3yunz5ck2fPl0rVqyQaZpaunSp1q1bp4qKChUVFQVWTjMzMzV69Gj94he/kHT0sYJVjhw5ouTkZKWkpGjMmDGB9o8//lj333+/JOnkk0/WkCFDqtVxxRVXqEuXLpKkTz75RJdffnlgF+X48eP17LPPNmjl9fTTTw8scg0cOFAvvvhiYP6kpKRAzcnJyfrLX/7S4J9TY7S5QOl2u3XkSM3lf7/fH7jupFGjRumyyy4Lei0vL09z5sxR2hULFFEcHbRPa5Icm+Z0CQF9BidobmYqoRIAALQJdW1HbUk9e/ZUz549dfPNN+u2227TRx99pF/+8pdB+/r9fk2bNk0vvfSSzjvvPPl8Pl1wwQXy+/3VAqVpmpKkZcuW1fize3Z2do1xrf757rrrrlNaWpp++OEHrV+/Xp988on+9re/KSYmRi+//LI+/vjjeseIiIjQBRdcoI8++kgjRowIurAVrMaqrbT19Q0PD6920NHxi2PH/nzCwsJqDaHN+Wfg1nv3Zy3i4uKCbimtaqv6mwCndOnSRWeffXbQrzPOOMPR2tqy7I25KitxblsIAABAW5Kfn6/NmzcHXh86dEh79uxR9+7ddeaZZyoyMlLvvfde4PoPP/wgv9+vI0eO6NRTT5UkvfLKK0HHjo6O1sUXX6xFixZVm2/fvn3q0aOHKioqAmFv48aN+u677yx9hk2bNumkk05SbGysDh8+rNjYWMXExMjn8+mtt94K9Bs6dKjefffdwP2gP/30U2Dbq2EYevjhh9W1a1dNnTpVpaWlkqRLLrkkMEZBQYEyMzNrrePiiy/W+vXrlZ+fL+novY+XXnqpwsPDdcYZZygnJ0elpaUqLy+v9jOtyyWXXKL169frwIEDkqRXX321cT+cRmhzK5S9evXSF198oeLi4moH82zfvj1wPdTNXZeqs3qd5XQZTTKt/zylb53ldBkqLfZrYrfZTpcBAADQppSXl+u5557Tnj17FBkZqYqKCt1www3yeDySpOeee05z5szRX/7yFxmGofHjx+vmm2/WjBkzdOONN+qkk07SddddV+v4Tz75pB599FFdf/31MgxDHTp00MMPP6xTTjlFTz31lP74xz+qsrJS5557rvr06dPguqvuoTRNUy6XS88884zCwsI0ZswYrV27Vtdee606d+6sCy64QN9//70kadCgQUpNTdVtt90mwzB0wgkn1DiU58EHH9TTTz+tlJQUPf/88/rd736n+++/X9ddd51+8Ytf6LzzzlPHjh2D1tS7d2/dd999uv322yUdPZRnzpw5kqTExEQlJSXp+uuv18knn6zzzz9fX375Zb2fs3fv3kpNTdUtt9zS7IfyGGbVmnIrkp2drUmTJunBBx/U8OHDq13bvn277rzzTk2ePFnJycmSji6v33rrrerUqZOef/55J0pukJycHKWkpOiFF15otufEtJRJveZo0de/d7oMlRaXBbbevlo4V5HRzm55BgAAsKJq5evYraEIXaWlpYqIiFBERIR+/PFH3XTTTXriiScsHerZ3Jr6z1arWqFcvny5fD5fYPvqhg0bAkvPY8eOVUxMjPr166crr7xSixYtUmFhobp166bVq1dr3759gRtjAQAAAKC55Obm6v7775dpmjpy5IjGjx8fkmHSDq0qUL7++uvat29f4HVWVlbgBNZrrrlGMTExkqS0tDTFx8frgw8+kM/nU48ePfT4448rMTHRibIBAAAAtCN9+vTRO++843QZLaJVBcply5Y1qJ/b7daUKVM0ZcqUZq4IAAAAaH5hYWEqLy93ugy0QRUVFYFHLFrR5k55RWgYOS3J6RIAAADajIiIiMBj8AC7mKYZuN/Tqla1QtkWeb1eeb1eSZLP53O4GvuMnEGgBAAAsEtYWJgiIiJ0+PDhJq0mAVUqKipUWlqq2NjYJj2nkkDpMI/HEzheueqUVwAAAOB4MTExKi8vZ+srbOFyuRQVFdWkMCkRKAEAAIBWo+pRFECo4B5KAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAAAAAIAlPMTGYV6vV16vV5Lk8/kcrgYAAAAAGo5A6TCPxyOPxyNJysnJUUpKisMVAQAAAEDDsOUVAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESAAAAAGAJgRIAAAAAYAmBEgAAAABgSYTTBbR3Xq9XXq9XkuTz+RyuBgAAAAAajkDpMI/HI4/HI0nKyclRSkqKwxUBAAAAQMOw5RUAAAAAYAmBEmgGGfOznC4BAAAAaHYESqAZZKQTKAEAAND2ESgBAAAAAJYQKAEAAAAAlhAoAQAAAACWECgBAAAAAJYQKAEAAAAAlhAoAQAAAACWECgBAAAAAJYQKAEAAAAAlhAoAQAAAACWRDhdQHvn9Xrl9XolST6fz+FqUB/TNFVW4q+/X6Wp0uKyWq+7o1wyDMPO0gAAAIAWR6B0mMfjkcfjkSTl5OQoJSXF4YpQG9M0lXbFAmVvym1Q/+TYtFqv9RmcoLmZqYRKAAAAtGpseQWOkTE/q9ZrZSX+BofJ+mRvzG3QSicAAAAQylihBI6RkZ6lkTOS6u23ZO9sRUa7ar0+rf88pW+dVaO9tNivid1mN6VEAAAAIGQQKAELIqNdiox213rdCDPqvA4AAAC0BWx5BQAAAABYQqAEAAAAAFhCoAQAAAAAWEKgBAAAAABYQqAEAAAAAFhCoAQAAAAAWEKgBAAAAABYQqAEAAAAAFhCoAQAAAAAWBLhdAFASykt9tfbx6w0VVpcZvn9AAAAQHtCoHSY1+uV1+uVJPl8PoeradsmdpvdoH7JsWnNWwgAAADQRhAoHebxeOTxeCRJOTk5SklJcbiitsUd5VKfwQnK3phr25h9BifIHeWqs8/IaUm2zQcAAACEKgIl2jTDMDQ3M1VlJQ3brjqt/zylb51VZx93lEuGYdTZZ+QMAiUAAADaPgIl2jzDMBQZ7W5Y37CG9wUAAADaO055BQAAAABYQqAEAAAAAFhCoAQAAAAAWEKgBAAAAABYQqAEQlDG/CynSwAAAADqRaAEQlBGOoESAAAAoY9ACbQhrGwCAACgJREogTaElU0AAAC0JAIlAAAAAMASAiUAAAAAwBICJQAAAADAEgIlAAAAAMASAiUAAAAAwBICJXCMkdOSnC4BAAAAaDUIlMAxRs4gUAIAAAANFeF0Ae2d1+uV1+uVJPl8PoerAQAAAICGI1A6zOPxyOPxSJJycnKUkpLicEVoTzLmZ7EqCwAAAMsIlIBDSov9tV4zK02VFpcFveaOcskwDFtqyEgnUAIAAMA6AiXgkIndZtd5PTk2LWh7n8EJmpuZaluoBAAAAKziUB6gBbmjXOozOKFJY2RvzFVZSe2rmwAAAEBLYYUSaEGGYWhuZmq9gXBa/3lK3zqrWltpsT+wqlnbdtnatsrauU0WAAAAqEKgBFqYYRiKjHbX3Ses7j51bZcNtlWWbbIAAABoDmx5BVqJpmyXZZssAAAAmgMrlEAr0ZDtssdvlT12mywAAABgNwIl0IrUt122vq2yAAAAgJ3Y8goAAAAAsIRACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEx4YA7URpcc3nV5qVpkqLy2q0u6NcMgyjJcoCAABAK0agBNqJid1mB21Pjk2r0dZncILmZqYSKgEAAFAntrwCbZg7yqU+gxMa/b7sjbkqK6m5ogkAAAAcixVKoA0zDENzM1NrDYfT+s9T+tZZgdelxf5aVzIBAACA4xEogTbOMAxFRruDXwur/RoAAABQH7a8AmiwjPlZTpcAAACAEEKgBNBgGekESgAAAPyMQAmEoJHTkpwuAQAAAKgXgRIIQSNnECgBAAAQ+jiUx2Fer1der1eS5PP5HK4GaFkZ87MIzwAAAK0YgdJhHo9HHo9HkpSTk6OUlBSHK0Jr1tq2ymakEygBAABaM7a8Am0I4QwAAAAtiUAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwJMLpAgCEptJif402s9JUaXFZtTZ3lEuGYbRUWQAAAAghBEqgHRs5LanWaxO7zQ7anhybVu11n8EJmpuZSqgEAABoh9jyCrRjI2dUD5TuKJf6DE5o1BjZG3NVVlJzNRMAAABtHyuUAAIMw9DczNRaA+K0/vOUvnWWpKNbYmtbxWxJGfOzagRjAAAAtAxWKAFUYxiGIqPdQb+MsGOvuWodI2N+VovVm5HecnMBAACgOgIlANsdH/JM8+hhPsd/VR3yE3htmg5VDAAAACvY8gqgWZmmqbQrFih7U27Q68ce8sMBPwAAAK0LK5QAmlVZib/WMHm8UD7gpyW38QIAALQWrFACaDFL9s6udu9l1SE/oXLAT10y0jn8BwAA4HgESgAtJjLapchod+B11SE/AAAAaJ3Y8goAAAAAsIRACQAAAACwhEAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEQAkgpGXMz3K6BAAAANSCQAkgpGWkEygBAABCFYESAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESAAAAAGBJhNMFAEBDmaapshJ/9bZKU6XFZYHX7iiXDMNo6dIAAADaJQKlw7xer7xeryTJ5/M5XA1gTWlx7SHv+GtWmaaptCsWKHtTbo1rybFpge/7DE7Q3MxUy6EyWGiVCK4AAADBECgd5vF45PF4JEk5OTlKSUlxuCKg8SZ2m12j7diQZ4eyEn/QMHm87I25KivxKzLa3eg56gqtkr3BFQAAoC3gHkoAlrijXOozOKHB/fsMTpA7ymXL3Ev2ztarhXP1auFcdekeq1cL52rJ3tlNHrehoVX6ObgCAAC0Z6xQAmiwkdOSAt8bhqG5malBQ9W0/vOUvnVWtTY7t4hGRrsCK5BGmGFpNbI+S/bOVmT0zwG46jOVFvuDrsgCAAC0RwRKAA02ckZStdeGETzMNVfIa0nHhlapbXwmAAAAu7HlFQAAAABgCYESAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESgGOOPTUWAAAArQ+BEoBjjj81FgAAAK0LgRIAAAAAYAmBEgAAAABgCYESAAAAAGBJhNMFAMCxSov91V6blaZKi8tqtAMAAMB5BEoAIWVit9k12pJj01q+EAAAANSLLa8AHOeOcqnP4IQG9e0zOEHuKFfzFgQAAIAGYYUSgOMMw9DczFSVldTc1jqt/zylb50VeO2OcskwjJYsDwAAALUgUAIICYZhKDLaXbM9LHg7AAAAnMeWVwAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAGiAkdOSnC4BAAAg5BAoAaABRs4gUAIAAByPQAkAAAAAsIRACaBVYysqAACAcwiUAGzXkiGPragAAADOIVACsB0hDwAAoH0gUAJAC8mYn+V0CQAAALYiUAJAC8lIJ1ACAIC2hUAJAAAAALCEQAkAAAAAsIRACQAAAACwhEAJAAAAALCEQAmgTeNkVQAAgOZDoATQpnGyKgAAQPMhUAIAAAAALCFQAmj32BYLAABgDYESQLvHtlgAAABrCJQAAAAAAEsIlAAAAAAASwiUAAAAAABLCJQAAAAAAEsIlABC2shpSU6XAAAAgFoQKAGEtJEzCJQAAAChikAJAAAAALCEQAkAAAAAsIRA2QBPPPGExowZo2HDhunWW2/Vhg0bnC4JQAjKmJ/lyHsBAACcQqBsgHHjxmnZsmVavXq1HnjgAc2ZM0eHDh1yuiwAISYjvQmBsgnvBQAAcAqBsgHOOOMMuVwuSZJhGDpy5IgKCgocrgoAAAAAnBXhdAENVVJSotdee03bt2/Xjh07VFRUpAcffFDDhw+v0dfv92vx4sVas2aNioqK1LNnT91+++0aNGiQ5fn//Oc/a+XKlfL7/brkkkvUo0ePpnwcAAAAAGj1Ws0K5aFDh7R06VLl5eWpV69edfZ99NFHtWzZMl199dWaPn26wsLCNGvWLH355ZeW5585c6Y++OADPfXUUxo0aJAMw7A8FoC2zzRNlRaXVfsyK39uM03T6RIBAACarNWsUMbFxemtt95SXFycsrOzNWnSpKD9tm/frrVr12ry5MlKTk6WJF177bWaMGGCFi5cqIULFwb6Tp06VVu3bg06zm9+8xulpKRUawsPD9cFF1ygN954Q6eddpouvfRSmz4dgLbENE2lXbFA2Ztya1xLjk2TJPUZnKC5man85RQAAGjVWk2gdLlciouLq7ffunXrFB4erlGjRgXa3G63RowYoUWLFik/P1/x8fGSpGeffdZSLRUVFdq7d6+l9wJo+8pK/EHD5LGyN+aqrMSvyGh3yxQFAADQDFpNoGyoXbt26bTTTlN0dHS19r59+0qSvv7660CgbAifz6dNmzbpsssuk8vl0vr16/XFF1/UukJan4KCAh08eDDotby8PEtjAghdS/bOVmT00UO9pvWfpyc+vksTu812tigAAACbtLlAefDgwaArmVVtjT2d1TAMvffee3rqqadkmqa6deumhx56SGeddZal+t59910tXbrU0nsBtD6R0a7AKqQRZgTCJQAAQFvQ5gJlWVmZTjjhhBrtVY/9KCsra9R40dHRmj9/vi21SdKoUaN02WWXBb2Wl5enOXPm2DYXAAAAADSnNhco3W63jhw5UqPd7/cHrjupS5cu6tKli6M1AIAdMuZnaeSMJKfLAAAADmo1jw1pqLi4uKD3KFa1EeYAtDYZ87OcLiGojPTQrAsAALScNhcoe/XqpT179qi4uLha+/bt2wPXAaA1IbgBAIBQ1eYC5ZAhQ1RRUaF333030Ob3+7Vy5Ur169evUSe8AgAAAABq16ruoVy+fLl8Pl9g++qGDRu0f/9+SdLYsWMVExOjfv366corr9SiRYtUWFiobt26afXq1dq3b5/uv/9+J8sH0EJKi/2B781KU6XFdR/GVdXn2PcBAACgfq0qUL7++uvat29f4HVWVpayso5uBbvmmmsUExMjSUpLS1N8fLw++OAD+Xw+9ejRQ48//rgSExOdKBtACzv+OY/JsWn1vqchfQAAAFBdqwqUy5Yta1A/t9utKVOm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SAAAYKOM9PoDJYf6AAAaytZACQAAWjfTNJV2xYJq92Emx6apz+AEzc1MJVQCAKqxdCjPvffeqx07dlia8KefftLf/vY3rVixwtL7AQBA8ykr8XOoDwCgwSwFysLCQk2ePFkzZszQypUr5fP56n3PV199paeeekrjxo3Tyy+/rM6dO1uZGgAgqbTYr9Lisv/bjsgf8tE8luydrbjTOjldBgAghFna8vrXv/5Vq1at0tKlS/X444/riSeeUPfu3XX22WfrpJNOUkxMjPx+vw4fPqzdu3crJydHJSUlCgsL01VXXaXbb79d8fHxdn8WAGg3JnabHfR7wE7BDvUBAOBYlu+hHD58uIYNG6aPP/5YK1eu1JYtW7RmzZoa/cLCwtSjRw8lJSVpxIgR6tKlS5MKBoD2yh3lUp/BCcremBv0ep/BCXJHuVq2KAAA0K416VAewzB06aWX6tJLL5Uk5ebm6sCBAzp8+LBcLpdiY2N15plnKiYmxpZiAaA9MwxDczNTq93HNq3/PKVvnSVJnMIJAABanK2nvCYkJCghIcHOIQEAxzAMQ5HR7p9fh1V/DQAA0JIsHcoDAEBzGzmt7mclAgAA5xEoG2jbtm264oor9NJLLzldCgC0CyNnECgBAAh1BMoGqKys1IIFC9SnTx+nSwEAAACAkGHrPZRtVUZGhvr27avi4mKnSwEANALbZgEAaF6tYoWypKREL774ou69916NGDFCSUlJWrVqVdC+fr9fCxcu1A033CCPx6M77rhDn332meW5Dx06pDfeeEP/7//9P8tjAACcwbZZAACaV6sIlIcOHdLSpUuVl5enXr161dn30Ucf1bJly3T11Vdr+vTpCgsL06xZs/Tll19amvuFF17QjTfeqI4dO1p6PwAAAAC0Va1iy2tcXJzeeustxcXFKTs7W5MmTQrab/v27Vq7dq0mT56s5ORkSdK1116rCRMmaOHChVq4cGGg79SpU7V169ag4/zmN79RSkqKdu7cqezsbN199932fygAANqIjPlZ1VaDj38NAGi7bAuU5eXlWrFihbxer7777juVlZXp73//uyRp165dysjI0I033qju3bs3emyXy6W4uLh6+61bt07h4eEaNWpUoM3tdmvEiBFatGiR8vPzFR8fL0l69tln6x1vy5Yt2r17t8aOHStJ8vl8Cg8P1/fff68HH3yw0Z8D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LOEeSgAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAAACAJQRKAAAAAIAlBEoAAAAAgCUESgAAUM2yZcs0dOhQ/ec//wm0rVq1SklJSVq1apWDlf3svffe05AhQ/Tvf//b6VIAoF0jUAIA2rT//Oc/SkpKqvNr3LhxTpcZMoqKivTyyy/ruuuuU9euXZt1rk8//VRJSUm655576u378MMPKykpSR9++KEkadiwYYqPj9fChQubtUYAQN0inC4AAICW0K1bN1199dVBr8XExLRwNaFr2bJlOnz4sJKTk5t9rgsvvFDx8fHavHmz8vPzFR8fH7Sfz+fT+vXrFRMTo6SkJElSRESExo0bp/nz52vr1q3q379/s9cLAKiJQAkAaBe6deum//f//p/TZYS08vJyvffee+rfv7+6devW7POFhYVp+PDhWrp0qVavXq1bb701aD+v16uysjJdd911crvdgfarrrpKCxYs0DvvvEOgBACHsOUVAIDjJCUlafr06frhhx/0pz/9SSNHjpTH49Gdd96pL774Iuh7SkpK9OKLL+q3v/2tPB6PrrvuOt1zzz368ssva/SdPn26kpKSVFZWphdeeEE333yzrrzySr344ouBPuvWrVNKSoo8Ho9Gjx6tefPmqaioSOPGjau2RfeRRx5RUlKStm/fHrSuxYsXKykpSV6vt97P/emnn+rgwYMaMmRIvX2r7N+/X7feeqs8Ho8yMzMD7T/++KPS09OVnJysq666SiNHjtTvf/97ffPNN9Xef91118kwDK1atUqmaQadY+XKlZKkESNGVGuPjY3VwIEDlZmZqZKSkgbXDACwD4ESAIAgfD6fpk6dqtzcXF1zzTVKSkpSTk6O7r333hqh6PDhw5o8ebKWLl2qjh07avTo0UpKStLOnTs1Y8YMrV+/PugcDz30kFavXq2BAwfqv/7rvwL3LL7//vt66KGHtGfPHl177bUaNmyYvvrqK82cOVPl5eXVxhg1alTgPcerqKjQypUr1alTp8BW0bps3rxZknTOOefU/wOSlJubqylTpmj//v164oknAkF07969uv322/XGG2/o1FNP1a9+9Stdcskl+vTTTzV58uRq4feUU07RBRdcoO+//z5oWP/mm2+UnZ2ts846S717965x/ZxzzpHf79e2bdsaVDMAwF5seQUAtAt79+6ttgJ4rHPOOUcXX3xxtbavv/5aY8aM0V133aWwsKN//3r++edr3rx5WrFihe69995A36efflrffvutZs2apeuvvz7Q/uOPPyolJUVPPPGELrroomrbNSXp4MGDWrJkiU488cRAW1FRkZ555hl16NBBixYtUvfu3SVJKSkpuvfee5WTk6NTTjkl0H/AgAFKSEjQ2rVrlZqaqg4dOgSuffrppzpw4IBuvPFGuVyuen9GW7duVVhYmHr16lVv36+++kr333+/IiIilJ6eXu09f/rTn/TDDz/oySef1EUXXRRo/+1vf6uUlBTNmzdPS5cuDbSPGDFC//znP7Vy5Uqdf/751eapbXWyytlnny1J2rZtW7W5AAAtgxVKAEC7sHfvXi1dujTo1yeffFKjf4cOHXTnnXcGwqR09GTR8PBwZWdnB9oKCwv197//Xeeff361MClJJ510kpKTk1VYWBhY/TvWxIkTq4VJSfrHP/6hn376Sdddd10gTEpHD6G5/fbbg362UaNGqaSkRGvXrq3W/t5770mSRo4cWduPpZoDBw4oJiam3vC5adMm3X333erYsaOee+65amFy586d2rZtm6699toaAa979+66/vrr9c0331Rb5b388svVqVMnrVu3TsXFxYH28vJyrVmzRi6Xq9YDlTp37izp6NZbAEDLY4USANAuXHTRRXryyScb3P+0005TVFRUtbaIiAh17txZPp8v0Jadna2KigodOXIk6Aronj17JEl5eXkaPHhwtWt9+/at0b/quYrnnXdejWv9+vVTeHh4jfZrr71Wf/nLX/Tee+8FQu0PP/ygjRs36txzz1VCQkI9n/aow4cP6+STT66zz9///nd99tln6tmzp5544gmddNJJ1a5XbWf98ccfg/48vvvuu8D/9ujRQ5ICgfHNN9+U1+vV6NGjJUkbNmxQYWGhPB6POnbsGLSeqvZDhw416DMCAOxFoAQAIIjo6Oig7eHh4aqsrAy8Pnz4sKSj20W3bt1a63ilpaU12qpW145VtUJ3fFCTjp6K2qlTpxrtHTt21JVXXqnVq1frm2++UY8ePbRq1SpVVFQ0eHVSktxut/x+f519vvrqK1VUVOi8884LWmPVz2PTpk3atGlTreP89NNP1V6PGDFCb775plauXBkIlPVtd5UUqDcyMrLOugEAzYNACQBAE1QFz5tuuklTp05t1HsNw6h1vB9//LHGtcrKSh06dCjoKuLo0aO1evVqZWRkaMaMGXr//fcVHR2tK6+8ssH1dOrUSQcOHKizz6RJk/SPf/xDb775psLDw2t85qr6Z8yYobFjxzZ47p49e6pPnz7asWOHvv32W3Xs2FGffvqpunbtWuO+ymNVBdjY2NgGzwUAsA/3UAIA0AR9+vSRYRj66quvbBmvZ8+ekhR0tXPHjh2qqKgI+r5zzjlHPXv21IcffqhPP/1Ue/bs0dVXX92olbsePXrI7/crPz+/1j4ul0t/+tOfdOmll+r111/XggULql2v2sZr5edRtRL5/vvv64MPPlBFRUXgsSK1qdpCW7V9FgDQsgiUAAA0QVxcnK688kpt27ZNr776atBnKW7fvj3oltdgfvnLX6pDhw56//33tXfv3kB7eXm5Fi9eXOd7R40apcOHD+uxxx6TpBqHBNUnMTExUG9dXC6X5syZo8GDB2vZsmVKT08PXOvXr5/69euntWvX1jgkSDq6yrply5ag43o8HkVGRmrNmjVauXKlwsLCNGzYsDpr2bFjR7XaAQAtiy2vAIB2oa7HhkjSLbfcUuOxHg01c+ZM7d69WwsXLtQHH3ygc845RzExMTpw4ICys7O1Z88evfXWWw1aLezYsaNSU1P1xBNPKCUlRUOHDlV0dLQ+/vhjuVwudenSpdYVu2uuuUbPP/+8CgoKdPbZZwd9bmNdfvnLX+rZZ5/VP//5z3q3yp5wwgl65JFH9Ic//EFvvPGGTNPU9OnTJUl/+MMfdNddd+mPf/yj3nzzTZ111llyu93av3+/tm3bpkOHDsnr9dYYMzo6WldccYU++OADFRYW6uKLL1Z8fHytNZimqc2bN+uMM86odiIuAKDlECgBAO1C1WNDanPjjTdaDpQnnniinnvuOa1YsUIfffSRvF6vKisr1blzZ/Xq1Uu33npr0MN0ajNy5Eh17NhRr7zyilavXq3o6GhddtlluvPOO3XjjTeqW7duQd8XHR2tyy+/XGvWrGn06qQkde3aVYMGDVJmZqZmzJhR7+NDqkLlf//3f+vNN9+UaZqaMWOGTj31VC1evFivv/661q9fr1WrViksLExxcXEaMGCAhgwZUuuYI0aM0AcffCBJuu666+qc/1//+pfy8/M1bdq0Rn9WAIA9DDPY3hwAABBy9uzZo/Hjx+vKK6/UH//4x6B9br31Vu3bt08rVqyo9aTaumzevFl33323fv/73+uaa65pasnN6pFHHtEnn3yiV199tdbHigAAmhf3UAIAEGKKiopqPL6jrKwscADO5ZdfHvR9H3/8sb799lt5PB5LYVKSLrjgAl188cV6+eWXqz0eJdTs3r1bH330kX77298SJgHAQWx5BQAgxGzZskWPP/64Bg0apF/84hc6dOiQPv/8c+3bt0/nn3++hg4dWq3/22+/rf379+u9996Ty+XSLbfc0qT5p0+frg8//FAHDhyo8x5GJ+3fv18TJkzQDTfc4HQpANCuseUVAIAQs3v3bi1evFjbtm1TYWGhJKlbt24aOnSobr755hr3eo4bN04HDhxQ9+7ddeedd2rw4MEOVA0AaI8IlAAAAAAAS7iHEgAAAABgCYESAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESAAAAAGAJgRIAAAAAYAmBEgAAAABgCYESAAAAAGAJgRIAAAAAYMn/B9ROZlQnYAzsAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "synthetic_ogip = ogip_data.get_simulated_dataset()\n",
    "\n",
    "fig = synthetic_ogip.view_count_spectrum()"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.20"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
