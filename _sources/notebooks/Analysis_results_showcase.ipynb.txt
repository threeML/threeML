{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b395109c",
   "metadata": {},
   "source": [
    "# Analysis Results\n",
    "\n",
    "3ML stores the results of a fit in a container we call an \"Analysis Result\" (AR). The structure of this object is designed to be useable in a *live* sense within an *active* analysis (python script, ipython interactive shell, jupyter notebook) as well as storable as a FITS file for saving results for later.\n",
    "\n",
    "The structure is nearly the same between MLE and Bayesian analyses in order to make a seamless functionality between all analyses.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fbe3d032",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:07.111708Z",
     "iopub.status.busy": "2024-05-31T21:14:07.111490Z",
     "iopub.status.idle": "2024-05-31T21:14:11.176402Z",
     "shell.execute_reply": "2024-05-31T21:14:11.175604Z"
    }
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.analysis_results import *\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "81d961fc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:11.179577Z",
     "iopub.status.busy": "2024-05-31T21:14:11.179137Z",
     "iopub.status.idle": "2024-05-31T21:14:11.219448Z",
     "shell.execute_reply": "2024-05-31T21:14:11.218711Z"
    }
   },
   "outputs": [],
   "source": [
    "silence_logs()\n",
    "from tqdm.auto import tqdm\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "set_threeML_style()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6af5d14",
   "metadata": {},
   "source": [
    "Let's take a look at what we can do with an AR. First, we will simulate some data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "452c6fb5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:11.222634Z",
     "iopub.status.busy": "2024-05-31T21:14:11.222231Z",
     "iopub.status.idle": "2024-05-31T21:14:13.287769Z",
     "shell.execute_reply": "2024-05-31T21:14:13.287042Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA4wAAAMUCAYAAAD3/6mMAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAABHCklEQVR4nO3deXyW5Z0v/q+QRXY0UURFBLWIisvUZXADsVJxyTkV1x7tsR3RcZ/R1q0dZ7RY2zO1jo7VcWlLHVvF0R8erHXBDU5d6jJ4SmURR4g4ipKoLElIQsjvjw45jVxAeLI82/v9evl6yb08zzdPrjz3/bnv67rubVpbW1sDAAAAvqBXtgsAAAAgNwmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJJVku4CU+vr6eOihh2L+/PmxYMGCWL16dVx77bUxadKkdtsdffTRm3yNgw8+OH7yk59s9n1OP/30WL58+UbLq6qq4tvf/nZmxQMAABSInAyMK1eujGnTpsWQIUNizz33jLlz5ya3+973vrfRsoULF8YjjzwShxxySIfea6+99oozzjij3bJdd91164sGAAAoMDkZGCsqKmLGjBlRUVERCxcujPPPPz+53cSJEzdaNnfu3Nhmm23i2GOP7dB7VVZWJl+nu6xduzaqq6tj+PDhse222/bY+wIAAGytnBzDWFZWFhUVFVu9X1NTU8yePTsOPPDA2HHHHTu8X3NzczQ0NGz1+2Wiuro6pkyZEtXV1T3yfgAAAJnKyTuMmXr11VdjzZo1cdxxx3V4n3//93+PiRMnRktLS+y0005x2mmnxWmnndaNVQIAAOSHggqMs2bNirKyshg3blyHth85cmTsv//+MWzYsFi1alU8+eST8c///M9RU1MTF154YcZ11NTURG1tbXKdO4sAAEC+KJjAWFdXF6+88kocdthhMWDAgA7t88Mf/rDdv0844YT4zne+Ew8//HBMnjx5q7q1/rmZM2fGtGnTMtoXAAAgVxRMYJw9e3Y0NTVtVXfUL9pmm23i9NNPj9deey3eeuutjCfDqaqqiiOOOCK5rrq6OqZOnZpxjQAAAD2lYALjrFmzon///nH44Yd36nU23FVctWpVxq9RWVkZlZWVnaoDAAAg23JyltStVVNTE3Pnzo2jjz46ysrKOvVaH374YUREDB48uAsqAwAAyF8FERiff/75WL9+/Sa7o65bty6qq6ujpqambdmqVauipaVlo+1+9atfRWlpaRx00EHdWjMAAECuy9kuqY8++misWbOmbbbRl156KT755JOIiJg8eXL079+/bdtZs2ZFZWXlJkPeihUr4pxzzonjjz8+rrvuurbXu//++2PcuHExdOjQWL16dcyaNSuWLFkS559/fkbPgQQAACgkORsYp0+fHsuXL2/795w5c2LOnDkRETFx4sS2wPj+++/HokWL4vTTT49evTp+w3TkyJExfPjwmDVrVnz++edRUlISe+21V9xwww1xzDHHdO0PAwAAkIe2aW1tbc12EcVk0aJFMWXKlLj33ntj1KhR2S4HAABgkwpiDCMAAABdT2AEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgqSTbBQAAXWfeE0uiqWFdlPUpiTEnjsh2OQDkOYERAArIvCeXRP2njdF3+3KBEYBO0yUVAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACApJJsF5BSX18fDz30UMyfPz8WLFgQq1evjmuvvTYmTZrUbrsf/OAH8dRTT220/2677RYPPPBAh97rd7/7XfziF7+I6urqGDx4cJxwwgnxjW98I0pKcvKjAQAA6DE5mYpWrlwZ06ZNiyFDhsSee+4Zc+fO3eS2ZWVlcdVVV7Vb1q9fvw69z6uvvhrf/e5348ADD4zLL7883nvvvbj//vvjs88+iyuvvLJTPwMAAEC+y8nAWFFRETNmzIiKiopYuHBhnH/++Zvctnfv3jFx4sSM3ufOO++MPfbYI2655Za2O4p9+/aNBx54IE499dQYPnx4Rq8LAABQCHJyDGNZWVlUVFR0ePuWlpaoq6vbqvdYunRpLF26NE4++eR23U+/9rWvRWtra7z44otb9XoAAACFJifvMG6NtWvXxqRJk2Lt2rUxYMCAOPbYY+Ov//qvo2/fvpvd75133omIiFGjRrVbXllZGTvssEMsXry422oGAADIB3kdGCsqKuKss86KL33pS9Ha2hq///3v47HHHov/+I//iNtuu22zE9fU1ta2vUbqdTesz0RNTc0m96+urs74dQEAAHpSXgfGCy64oN2/jz322Bg2bFjce++9MXv27Dj22GM3uW9TU1NE/Kn76xeVlZVFfX19xnXNnDkzpk2blvH+AAAAuSCvA2PK6aefHj/72c/ijTfe2Gxg3BAUNwTHP9fU1BTl5eUZ11BVVRVHHHFEcl11dXVMnTo149cGAADoKQUXGMvLy2PgwIGxatWqzW63oStqbW1tDBkypN262traGD16dMY1VFZWRmVlZcb7AwAA5IKcnCW1M+rr62PlypUxePDgzW631157RUTEokWL2i2vqamJFStWtK0HAAAoVnkbGBsbG5PjDH/5y19Ga2trHHbYYW3L1q1bF9XV1VFTU9O2bMSIEbHbbrvF448/Hi0tLW3LH3vssdhmm21i3Lhx3fsDAMAmzHtiSbz5yOKY98SSbJcCQJHL2S6pjz76aKxZs6ZtttGXXnopPvnkk4iImDx5cqxevTr+6q/+Kr7yla/EbrvtFhERr732Wrz66qtx2GGHxZFHHtn2WitWrIhzzjknjj/++Ljuuuvall900UVx7bXXxpVXXhnHHntsvPfeezFjxow46aSTYvfdd++5HxYA/sy8J5dE/aeN0Xf78hhz4ohslwNAEcvZwDh9+vRYvnx527/nzJkTc+bMiYiIiRMnRv/+/ePwww+P119/PZ566qlYv3597LLLLnH++efHmWeeGb16bfnm6eGHHx5Tp06NadOmxW233RaDBg2Ks88+O84999zu+rEAAADyRs4GxocffniL23zve9/r0GsNHTq0LWx+0VFHHRVHHXXUVtUGAABQDPJ2DCMAAADdS2AEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEAAAgSWAEgALRWNcczQ3rIiKiuWFdNNY1Z7kiAPKdwAgABaCxrjlmXv9KNDe0REREc0NLzLz+FaERgE4RGAGgACx6flms/Kiu3bKVH9XFoueXZakiAAqBwAgABaC2elV6+fure7gSAAqJwAgABaBi+MD08t0G9HAlABQSgREACsCoCcNi0NB+7ZYNGtovRk0YlqWKACgEAiMAFIDyfqVRdePYKO3TOyIiSvv0jqobx0Z5v9IsVwZAPhMYAaBAlPcrjdI+JRERUdqnRFgEoNMERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJIERgAAAJJKsl3AF9XX18dDDz0U8+fPjwULFsTq1avj2muvjUmTJrVts379+nj66adj9uzZsXjx4li9enUMHTo0JkyYEGeeeWaUl5dv8X0uu+yyeOuttzZafuihh8aPf/zjrvyRAAAA8lLOBcaVK1fGtGnTYsiQIbHnnnvG3LlzN9pm7dq1cfPNN8e+++4b/+2//bfYbrvt4u23345f/OIX8e///u/xT//0T7HNNtts8b122GGHuOCCC9otq6io6LKfBQAAIJ/lXGCsqKiIGTNmREVFRSxcuDDOP//8jbYpLS2Nn/70pzFmzJi2ZSeffHLstNNO8fOf/zzefPPNOPjgg7f4Xv3794+JEyd2af0AAACFIufGMJaVlW3xLl9paWm7sLjBUUcdFRER1dXVHX6/devWRX19/dYVCQAAUARy7g5jZ3z66acRETFo0KAObb9s2bL46le/Gs3NzbH99tvHSSedFOeee26UlHTuY6mpqYna2trkuq0JswAAANlUUIHxwQcfjH79+sVhhx22xW133nnnOOigg2LkyJGxdu3aePHFF+P++++PZcuWxQ033NCpOmbOnBnTpk3r1GsAAABkW8EExn/913+NN954I6644ooYMGDAFre/5ppr2v37q1/9avzjP/5jPP7443H66afHvvvum3EtVVVVccQRRyTXVVdXx9SpUzN+bQAAgJ5SEIHxueeei/vuuy9OPPHE+O///b9n/DpnnHFGPP744/HGG290KjBWVlZGZWVlxvsDULwa65qjuWFdREQ0N6yLxrrmKO9XmuWqAChWOTfpzdZ6/fXX4wc/+EGMHTs2rrzyyk691o477hgREatXr+6K0gBgqzTWNcfM61+J5oaWiIhobmiJmde/Eo11zVmuDIBildeBcf78+fG9730vRo0aFTfccEOnJ6v58MMPIyJi8ODBXVAdAGydRc8vi5Uf1bVbtvKjulj0/LIsVQRAscvbwLh06dK4+uqrY6eddoof/ehHUV5evsltq6ur4+OPP277d11dXTQ1NbXbprW1Ne6///6IiDjkkEO6p2gA2Iza6lXp5e/r+QJAduTkGMZHH3001qxZ0/Zoipdeeik++eSTiIiYPHly9OrVK7797W/H6tWr48wzz4xXXnml3f4777xz7Lfffm3/Puecc+LAAw+M22+/PSIi3nnnnbjhhhviK1/5Suyyyy7R2NgY/+f//J+YN29enHzyyTFq1Kge+kkB4P+pGD4w/uPljzZevtuWJ3MDgO6Qk4Fx+vTpsXz58rZ/z5kzJ+bMmRMRERMnToyIaAuQd99990b7H3/88e0C4xcNGTIkDjjggJgzZ058+umn0atXrxg+fHhceeWVUVVV1ZU/CgB02KgJw2LRix+065Y6aGi/GDVhWBarAqCY5WRgfPjhh7e4zYYA2RFf3HbnnXfu9LMWAaCrlfcrjaobx8ZDl70QzQ0tUdqnd1TdONYsqQBkTd6OYQSAQlTerzRK+/zpem5pnxJhEYCsEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIKsl2AQBA1xkzaUQ0NayLsj4O8QB0nqMJABSQMSeOyHYJABQQXVIBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIEhgBAABIKsl2ASn19fXx0EMPxfz582PBggWxevXquPbaa2PSpEkbbbt06dK44447Yt68eVFSUhJjx46NSy65JAYPHtyh9/rd734Xv/jFL6K6ujoGDx4cJ5xwQnzjG9+IkpKc/GgAAAB6TE7eYVy5cmVMmzYtqqurY88999zkdp988klceuml8Z//+Z8xZcqUOPPMM+OVV16JK664Ipqbm7f4Pq+++mp897vfjf79+8fll18eRx11VNx///1x2223deWPAwAAkJdy8jZaRUVFzJgxIyoqKmLhwoVx/vnnJ7d74IEHYu3atXHffffFkCFDIiJi9OjRccUVV8STTz4ZVVVVm32fO++8M/bYY4+45ZZb2u4o9u3bNx544IE49dRTY/jw4V37gwEAAOSRnLzDWFZWFhUVFVvcbvbs2XH44Ye3hcWIiIMPPjiGDRsWL7zwwmb3Xbp0aSxdujROPvnkdt1Pv/a1r0Vra2u8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APknr+8wftG6devihRdeiP322y+GDh3aoX3OOOOMaGhoiD59+sSRRx4ZF198cWy//fbdXCkAAEDuK6jA+Nprr8XKlSs71B11wIABccopp8S+++4bpaWl8Yc//CFmzJgRCxYsiHvvvTf69euXcR01NTVRW1ubXFddXZ3x6wIAAPSkggqMzz77bJSUlMQxxxyzxW1PO+20dv8eP358jB49Or7//e/HjBkz4uyzz864jpkzZyZnYAUAAMgnBRMY6+vr43e/+10ceuihMWjQoIxe47jjjouf/vSn8eabb3YqMFZVVcURRxyRXFddXR1Tp07N+LUBAAB6SsEExt/97ndbNTvqpuy4446xatWqTr1GZWVlVFZWduo1AAAAsq1gZkmdNWtW9OnTZ5N39jqitbU1li9f7jEbAAAAUSCB8fPPP4833ngjjj766Nh22203Wv/xxx9vNNnM559/vtF2jz32WHz++edx2GGHdVepAAAAeaMguqQ+99xz0dLSssnuqDfddFO89dZbMWfOnLZlp512WkyYMCFGjhwZZWVlMW/evHjuuedir732iqqqqp4qHQAAIGcVRGB89tlnY7vttosvf/nLHd7nuOOOiz/+8Y8xe/bsaGpqiiFDhsRZZ50V3/jGN5J3KQEAAIrNNq2tra3ZLqKYLFq0KKZMmRL33ntvjBo1KtvlAAAAbFJBjGEEAACg6wmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJAmMAAAAJJVkuwAAIDfMe2JJNDWsi7I+JTHmxBHZLgeAHCAwAgARETHvySVR/2lj9N2+XGAEICJ0SQUAAGATBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAAACSBEYAIBrrmqO5YV1ERDQ3rIvGuuYsVwRALhAYAaDINdY1x8zrX4nm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d9ttt4xrmzlzZkybNi3j/QEAAHJB3gbGxsbGKC0t3Wh5WVlZ2/pN7RcRGe3bUVVVVXHEEUck11VXV8fUqVM79foAAAA9IW8DY3l5eTQ3N2+0vKmpqW39pvaLiIz27ajKysqorKzs1GsAAABkW95OelNRUZEcJ7hh2aYC28CBA6OsrCyjfQEAAIpJ3gbGPffcMz744IOoq6trt3z+/Plt61N69eoVI0eOjIULF260bv78+bHzzjt3asIbAACAQpG3gXH8+PHR0tISM2fObFvW1NQUv/3tb2OfffZpmyH1448/3mhm0nHjxsXChQvbhcb3338/5s6dG+PHj++R+gEAAHJd3o5h3GeffeKYY46Je+65Jz7//PPYZZdd4qmnnorly5fH1Vdf3bbdTTfdFG+99VbMmTOnbdnXvva1+M1vfhNXX311nHnmmdG7d+94+OGHY7vttoszzzwzGz8OAABAzsnbwBgRcd1118WQIUPi6aefjjVr1sTIkSPjRz/6URx44IGb3a9v375x2223xR133BH3339/rF+/Pg466KC45JJLYvDgwT1SOwAAQK7bprW1tTXbRRSTRYsWxZQpU+Lee++NUaNGZbscAACATcrbMYwAAAB0L4ERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACAJIERAACApJJsF1BsGhsbIyKiuro6y5UAAADFbvjw4bHttttucr3A2MOWL18eERFTp07NciUAAECxu/fee2PUqFGbXL9Na2traw/WU/Q+//zzeO2112Lo0KFRVlaW7XKiuro6pk6dGt/73vdi+PDh2S6HPKYt0RW0I7qKtkRX0I7oKrncltxhzDGDBw+OiRMnZruMjQwfPnyzVxago7QluoJ2RFfRlugK2hFdJR/bkklvAAAASBIYAQAASBIYAQAASBIYAQAASBIYAQAASBIYi1xFRUWce+65UVFRke1SyHPaEl1BO6KraEt0Be2IrpLPbclzGAEAAEhyhxEAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAIAkgREAAICkkmwXQHY0NTXFz372s3jmmWdi9erVsccee8R5550XhxxySLZLI0fV19fHQw89FPPnz48FCxbE6tWr49prr41JkyZttO3SpUvjjjvuiHnz5kVJSUmMHTs2Lrnkkhg8eHDPF05OWbBgQTz11FMxd+7cWL58eQwcODD23XffOO+882LYsGHtttWO2JwlS5bEL37xi1i0aFF8+umnse2228bw4cPjrLPOiiOOOKLdttoSW+P++++P++67L0aMGBG//OUv262bN29e/Mu//Eu888470a9fvzjmmGNiypQp0bdv3yxVS66YO3duXH755cl1d911V+y7775t/863diQwFqmbb745XnzxxTjttNNi1113jSeffDKuuuqquO2222L//ffPdnnkoJUrV8a0adNiyJAhseeee8bcuXOT233yySdx6aWXRv/+/WPKlCnR0NAQDz30ULz33ntx9913R2lpaQ9XTi759a9/HfPmzYtjjjkm9thjj6itrY0ZM2bEeeedF3fddVeMHDkyIrQjtmz58uVRX18fxx9/fFRWVsbatWtj9uzZce2118a3v/3tqKqqightia3zySefxAMPPBB9+vTZaN3ixYvjb//2b2P48OFxySWXxCeffBLTp0+PDz74IP7xH/8xC9WSiyZPnhyjR49ut2yXXXZp+/98bEcCYxGaP39+PPfcc3HhhRfGWWedFRERX/3qV+Pcc8+Nu+66K+66664sV0guqqioiBkzZkRFRUUsXLgwzj///OR2DzzwQKxduzbuu+++GDJkSEREjB49Oq644op48skn207iKE6nn356XH/99e1O0idMmBDf/OY341e/+lX83d/9XURoR2zZ2LFjY+zYse2WnXLKKTFlypR4+OGH29qItsTWuPPOO2OfffaJ9evXx8qVK9utu+eee2LAgAFx++23R79+/SIiYujQofG//tf/itdeey0OPfTQbJRMjjnggANi/Pjxm1yfj+3IGMYiNHv27Ojdu3e7g2R5eXmceOKJ8fbbb8fHH3+cxerIVWVlZVFRUbHF7WbPnh2HH35424lZRMTBBx8cw4YNixdeeKE7SyQPjBkzZqM7OsOGDYvdd989qqur25ZpR2Sid+/eseOOO8aaNWvalmlLdNRbb70Vs2fPjksvvXSjdXV1dfHGG2/ExIkT207yI/50wb1Pnz7aEu3U19fHunXrNlqer+3IHcYitHjx4th1113bNdSIaLt9/u6777Y7sEJHrVixIj777LMYNWrURutGjx4dr776ahaqIte1trbGZ599FrvvvntEaEdsnYaGhmhsbIy6urp46aWX4ve//30cc8wxEaEt0XEtLS1x2223xYknnhh77LHHRuvfe++9aGlp2agtlZaWxl577RWLFy/uqVLJcTfffHM0NDRE7969Y//9948LL7ww9t5774jI33YkMBah2tra5J2iDctqamp6uiQKRG1tbUTEJtvXqlWroqmpKcrKynq6NHLYrFmzYsWKFfGtb30rIrQjts5Pf/rTmDlzZkRE9OrVK44++uj427/924jQlui4//2//3d8/PHHceuttybXb6kt/d//+3+7tT5yX0lJSYwbNy7+8i//MgYNGhRLly6N6dOnxyWXXBJ33nlnfOlLX8rbdiQwFqHGxsbkIP8NB8zGxsaeLokCsaHtbKl9OTljg+rq6rj11ltj3333jeOPPz4itCO2zmmnnRbjx4+PmpqaeOGFF6KlpSWam5sjQluiY1auXBk///nP4xvf+MYmZ87dUltqamrqzhLJA2PGjIkxY8a0/fvII4+M8ePHxze/+c2455574sc//nHetiNjGItQeXl528H0z21opOXl5T1dEgViQ9vRvuiI2trauPrqq6Nfv37x/e9/P3r37h0R2hFbZ/jw4XHwwQfH8ccfHz/60Y+ioaEhrrnmmmhtbdWW6JD77rsvBgwYEJMnT97kNltqSy46kLLrrrvGkUceGXPnzo2Wlpa8bUcCYxGqqKhouyX+5zYsq6ys7OmSKBAbulhsqn0NHDgwZ78M6Vlr1qyJq666KtasWRM//vGP233vaEd0xvjx42PhwoWxbNkybYktWrZsWTz++ONx6qmnRk1NTXz00Ufx0UcfRVNTU6xbty4++uijWLVq1RbbknMnNmXHHXeM5ubmWLt2bd62I4GxCO25557xwQcfRF1dXbvl8+fPb1sPmdhhhx1i8ODBsWjRoo3WLViwQNsiIv7Uteuaa66JZcuWxQ9/+MO2yW420I7ojA1dvtasWaMtsUU1NTWxfv36uO222+KMM85o+2/+/PmxbNmyOOOMM2LatGkxYsSI6N2790Ztqbm5ORYvXqwtsUkffvhhlJWVRZ8+ffK2HQmMRWj8+PHR0tLSNklAxJ9ug//2t7+NffbZxwypdMq4cePi5Zdfbvd4ljfffDOWLVvWNnMhxaulpSX+4R/+Id5+++244YYbYr/99ktupx2xJZ999tlGy9atWxdPP/10lJeXt12I0JbYnBEjRsRNN9200X8jRoyIIUOGxE033RQnnnhi9O/fPw4++OB45plnor6+vm3/p59+OhoaGrQl4vPPP99o2bvvvhsvvfRSHHLIIdGrV6+8bUfbtLa2tma7CHre3//938ecOXPi9NNPj1122SWeeuqpWLBgQdx6661x4IEHZrs8ctSjjz4aa9asidra2njsscfi6KOPjr322isiIiZPnhz9+/ePjz/+OM4777zo379/nHrqqdHQ0BAPPvhg7LDDDnHPPffo/lXkbr/99njkkUfi8MMPjwkTJmy0fuLEiRER2hFb9N3vfjfq6urigAMOiB122CFqa2tj1qxZ8f7778fFF18cZ5xxRkRoS2Tmsssui5UrV8Yvf/nLtmWLFi2Kiy++OIYPHx5VVVXxySefxPTp0+OAAw6IW265JYvVkgsuv/zyKC8vj/322y+22267WLp0aTz++ONRUlISd955Z9tFrHxsRwJjkWpsbIyf/exn8cwzz8SaNWti5MiRcd5558Whhx6a7dLIYaeffnosX748uW769OkxdOjQiIhYsmRJ3HHHHTFv3rwoKSmJsWPHxsUXXxzbb799T5ZLDrrsssvirbfe2uT6OXPmtP2/dsTmPPfcc/HEE0/Ee++9FytXroy+ffvGqFGj4pRTTokjjzyy3bbaElsrFRgjIv7whz/Ev/zLv8Q777wTffv2jWOOOSYuuOCC6Nu3b5YqJVc88sgjMWvWrPjP//zPqKuri8GDB8eXv/zlOPfcc2PXXXdtt22+tSOBEQAAgCRjGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEAAEgSGAEgh7W2tsZ3vvOdOProo+O5557r8DoA6AoCIwDksG222Sauvfba2G677eKWW26J5cuXt637t3/7t/j9738fkyZNimOPPTaLVQJQqARGAMhx22+/fVx33XVRV1cXN954Y7S0tMTixYvj7rvvjl133TUuv/zybJcIQIHaprW1tTXbRQAAW/bP//zP8W//9m9x5plnxssvvxwffvhh3HXXXTFq1KhslwZAgRIYASBPNDU1xYUXXhiLFy+OiIi//uu/jq9//etZrgqAQqZLKgDkibKysjjssMPa/v+kk07KckUAFDqBEQDyxPz58+PBBx+MQYMGRVNTU9xyyy3ZLgmAAicwAkAeqK+vjxtvvDF69+4dt912W4wbNy5eeOGFeOKJJ7JdGgAFTGAEgDzwk5/8JD788MO46KKLYuTIkXHVVVfFjjvuGLfffnssW7Ys2+UBUKAERgDIcc8880w888wzcfjhh8cpp5wSEREDBgyI733ve9HY2Bg33nhjrFu3LstVAlCIBEYAyGEffvhh3HrrrVFRURHXXHNNu3UHHnhg/I//8T9i0aJFcc8992SpQgAKmcdqAAAAkOQOIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEkCIwAAAEn/P/U+2ZZvKgZpAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gen_function = Line(a=2, b=0) + Gaussian(F=30.0, mu=25.0, sigma=1)\n",
    "\n",
    "# Generate a dataset using the line and a gaussian.\n",
    "# constant 20% error\n",
    "\n",
    "x = np.linspace(0, 50, 50)\n",
    "\n",
    "xy = XYLike.from_function(\n",
    "    \"sim_data\", function=gen_function, x=x, yerr=0.2 * gen_function(x)\n",
    ")\n",
    "\n",
    "fig = xy.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf15e79f",
   "metadata": {},
   "source": [
    "## MLE Results\n",
    "\n",
    "\n",
    "First we will demonstrate how AR's work for an MLE analysis on our synthetic data. As we will see, most of the functionality exists in the Bayesian AR's as well.\n",
    "\n",
    "Let's do a simple likelihood maximization of our data and model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "15d61be6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:13.290500Z",
     "iopub.status.busy": "2024-05-31T21:14:13.290166Z",
     "iopub.status.idle": "2024-05-31T21:14:14.161309Z",
     "shell.execute_reply": "2024-05-31T21:14:14.160685Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.07 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.512 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.4 +/- 1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               2.07 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1          (-6 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.512 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.4 +/- 1.0) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140674129274528\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.07</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>0.00</td><td>-0.02</td><td>-0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>0.00</td><td>1.00</td><td>-0.14</td><td>-0.07</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>-0.14</td><td>1.00</td><td>-0.10</td></tr>\n",
       "<tr><td>-0.07</td><td>-0.00</td><td>-0.07</td><td>-0.10</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.07\n",
       "-0.85  1.00  0.00 -0.02 -0.00\n",
       "-0.04  0.00  1.00 -0.14 -0.07\n",
       " 0.02 -0.02 -0.14  1.00 -0.10\n",
       "-0.07 -0.00 -0.07 -0.10  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.100777\n",
       "total            31.100777"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.565190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.761668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.565190\n",
       "BIC             81.761668"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fitfun = Line() + Gaussian()\n",
    "\n",
    "fitfun.b_1.bounds = (-10, 10.0)\n",
    "fitfun.a_1.bounds = (-100, 100.0)\n",
    "fitfun.F_2 = 25.0\n",
    "fitfun.F_2.bounds = (1e-3, 200.0)\n",
    "fitfun.mu_2 = 25.0\n",
    "fitfun.mu_2.bounds = (0.0, 100.0)\n",
    "fitfun.sigma_2.bounds = (1e-3, 10.0)\n",
    "\n",
    "model = Model(PointSource(\"fake\", 0.0, 0.0, fitfun))\n",
    "\n",
    "data = DataList(xy)\n",
    "\n",
    "jl = JointLikelihood(model, DataList(xy))\n",
    "_ = jl.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcc8b9e5",
   "metadata": {},
   "source": [
    "We can get our errors as always, but the results cannot be propagated (error propagation assumes Gaussian errors, i.e., symmetric errors)\n",
    "In this case though errors are pretty symmetric, so we are likely in the case\n",
    "where the MLE is actually normally distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d225c79e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.164244Z",
     "iopub.status.busy": "2024-05-31T21:14:14.163762Z",
     "iopub.status.idle": "2024-05-31T21:14:14.224679Z",
     "shell.execute_reply": "2024-05-31T21:14:14.224032Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.07 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.512 -0.011 +0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.4 +/- 1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                          result  \\\n",
       "parameter                                                          \n",
       "fake.spectrum.main.composite.a_1                   2.07 +/- 0.11   \n",
       "fake.spectrum.main.composite.b_1              (-6 +/- 4) x 10^-3   \n",
       "fake.spectrum.main.composite.F_2              (3.1 +/- 0.4) x 10   \n",
       "fake.spectrum.main.composite.mu_2     (2.512 -0.011 +0.012) x 10   \n",
       "fake.spectrum.main.composite.sigma_2       (9.4 +/- 1.0) x 10^-1   \n",
       "\n",
       "                                                  unit  \n",
       "parameter                                               \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.074832</td>\n",
       "      <td>-0.113368</td>\n",
       "      <td>0.113269</td>\n",
       "      <td>0.113319</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>-0.006071</td>\n",
       "      <td>-0.003839</td>\n",
       "      <td>0.003848</td>\n",
       "      <td>0.003844</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.793800</td>\n",
       "      <td>-4.004222</td>\n",
       "      <td>4.004519</td>\n",
       "      <td>4.004371</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.124361</td>\n",
       "      <td>-0.114578</td>\n",
       "      <td>0.117391</td>\n",
       "      <td>0.115985</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.939620</td>\n",
       "      <td>-0.095159</td>\n",
       "      <td>0.101754</td>\n",
       "      <td>0.098456</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       2.074832       -0.113368   \n",
       "fake.spectrum.main.composite.b_1      -0.006071       -0.003839   \n",
       "fake.spectrum.main.composite.F_2      30.793800       -4.004222   \n",
       "fake.spectrum.main.composite.mu_2     25.124361       -0.114578   \n",
       "fake.spectrum.main.composite.sigma_2   0.939620       -0.095159   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.113269  0.113319   \n",
       "fake.spectrum.main.composite.b_1            0.003848  0.003844   \n",
       "fake.spectrum.main.composite.F_2            4.004519  4.004371   \n",
       "fake.spectrum.main.composite.mu_2           0.117391  0.115985   \n",
       "fake.spectrum.main.composite.sigma_2        0.101754  0.098456   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jl.get_errors()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09d6d2fc",
   "metadata": {},
   "source": [
    "We need to get the AnalysisResults object that is created after a fit is performed. The AR object is a member of the JointLikelihood object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f07155bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.227387Z",
     "iopub.status.busy": "2024-05-31T21:14:14.226945Z",
     "iopub.status.idle": "2024-05-31T21:14:14.230042Z",
     "shell.execute_reply": "2024-05-31T21:14:14.229445Z"
    }
   },
   "outputs": [],
   "source": [
    "ar = jl.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5921003",
   "metadata": {},
   "source": [
    "We can display the results of the analysis. Note, when a fit is performed, the post display is actaully from the internal AR."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "875838bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.232410Z",
     "iopub.status.busy": "2024-05-31T21:14:14.232013Z",
     "iopub.status.idle": "2024-05-31T21:14:14.264762Z",
     "shell.execute_reply": "2024-05-31T21:14:14.264161Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.07 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.512 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.4 +/- 1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               2.07 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1          (-6 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.512 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.4 +/- 1.0) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140674124730176\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.07</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>0.00</td><td>-0.02</td><td>-0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>0.00</td><td>1.00</td><td>-0.14</td><td>-0.07</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>-0.14</td><td>1.00</td><td>-0.10</td></tr>\n",
       "<tr><td>-0.07</td><td>-0.00</td><td>-0.07</td><td>-0.10</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.07\n",
       "-0.85  1.00  0.00 -0.02 -0.00\n",
       "-0.04  0.00  1.00 -0.14 -0.07\n",
       " 0.02 -0.02 -0.14  1.00 -0.10\n",
       "-0.07 -0.00 -0.07 -0.10  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.100777\n",
       "total            31.100777"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.565190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.761668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.565190\n",
       "BIC             81.761668"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9f36cff",
   "metadata": {},
   "source": [
    "By default, the equal tail intervals are displayed. We can instead display highest posterior densities (equal in the MLE case)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "92b0a4b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.267265Z",
     "iopub.status.busy": "2024-05-31T21:14:14.266853Z",
     "iopub.status.idle": "2024-05-31T21:14:14.299726Z",
     "shell.execute_reply": "2024-05-31T21:14:14.299040Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.07 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.512 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.4 +/- 1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               2.07 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1          (-6 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.512 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.4 +/- 1.0) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140674132227264\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.07</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>0.00</td><td>-0.02</td><td>-0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>0.00</td><td>1.00</td><td>-0.14</td><td>-0.07</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>-0.14</td><td>1.00</td><td>-0.10</td></tr>\n",
       "<tr><td>-0.07</td><td>-0.00</td><td>-0.07</td><td>-0.10</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.07\n",
       "-0.85  1.00  0.00 -0.02 -0.00\n",
       "-0.04  0.00  1.00 -0.14 -0.07\n",
       " 0.02 -0.02 -0.14  1.00 -0.10\n",
       "-0.07 -0.00 -0.07 -0.10  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.100777\n",
       "total            31.100777"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.565190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.761668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.565190\n",
       "BIC             81.761668"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db95a9ec",
   "metadata": {},
   "source": [
    "The AR stores several properties from the analysis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "49907e49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.302241Z",
     "iopub.status.busy": "2024-05-31T21:14:14.301819Z",
     "iopub.status.idle": "2024-05-31T21:14:14.306011Z",
     "shell.execute_reply": "2024-05-31T21:14:14.305396Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'MLE'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.analysis_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bfbee5af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.308246Z",
     "iopub.status.busy": "2024-05-31T21:14:14.307851Z",
     "iopub.status.idle": "2024-05-31T21:14:14.312384Z",
     "shell.execute_reply": "2024-05-31T21:14:14.311719Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.28408650e-02, -3.69184288e-04, -1.86006225e-02,\n",
       "         2.12453898e-04, -8.23788028e-04],\n",
       "       [-3.69184288e-04,  1.47747872e-05,  6.83679570e-06,\n",
       "        -7.00446427e-06, -1.13791773e-06],\n",
       "       [-1.86006225e-02,  6.83679570e-06,  1.60367660e+01,\n",
       "        -6.63547231e-02, -2.78190497e-02],\n",
       "       [ 2.12453898e-04, -7.00446427e-06, -6.63547231e-02,\n",
       "         1.32534590e-02, -1.18193480e-03],\n",
       "       [-8.23788028e-04, -1.13791773e-06, -2.78190497e-02,\n",
       "        -1.18193480e-03,  9.57525514e-03]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.covariance_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "436b002a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:14.314851Z",
     "iopub.status.busy": "2024-05-31T21:14:14.314643Z",
     "iopub.status.idle": "2024-05-31T21:14:19.210403Z",
     "shell.execute_reply": "2024-05-31T21:14:19.209679Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8dcd6812c5c049149bfdcc0055e3d4ac",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "processing MLE analyses:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>flux</th>\n",
       "      <th>low bound</th>\n",
       "      <th>hi bound</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake: total</th>\n",
       "      <td>1.4649888027986721e-05 erg / (s cm2)</td>\n",
       "      <td>1.3218887803404238e-05 erg / (s cm2)</td>\n",
       "      <td>1.604075488450613e-05 erg / (s cm2)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             flux  \\\n",
       "fake: total  1.4649888027986721e-05 erg / (s cm2)   \n",
       "\n",
       "                                        low bound  \\\n",
       "fake: total  1.3218887803404238e-05 erg / (s cm2)   \n",
       "\n",
       "                                        hi bound  \n",
       "fake: total  1.604075488450613e-05 erg / (s cm2)  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.get_point_source_flux(1 * u.keV, 0.1 * u.MeV)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "055615d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.213203Z",
     "iopub.status.busy": "2024-05-31T21:14:19.212830Z",
     "iopub.status.idle": "2024-05-31T21:14:19.232456Z",
     "shell.execute_reply": "2024-05-31T21:14:19.231789Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (5):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.074832</td>\n",
       "      <td>-100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>-0.006071</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>s-1 cm-2 keV-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.7938</td>\n",
       "      <td>0.001</td>\n",
       "      <td>200.0</td>\n",
       "      <td>s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.124361</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.93962</td>\n",
       "      <td>0.001</td>\n",
       "      <td>10.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (2):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                  N\n",
       "Point sources     1\n",
       "Extended sources  0\n",
       "Particle sources  0\n",
       "\n",
       "Free parameters (5):\n",
       "--------------------\n",
       "\n",
       "                                          value min_value max_value  \\\n",
       "fake.spectrum.main.composite.a_1       2.074832    -100.0     100.0   \n",
       "fake.spectrum.main.composite.b_1      -0.006071     -10.0      10.0   \n",
       "fake.spectrum.main.composite.F_2        30.7938     0.001     200.0   \n",
       "fake.spectrum.main.composite.mu_2     25.124361       0.0     100.0   \n",
       "fake.spectrum.main.composite.sigma_2    0.93962     0.001      10.0   \n",
       "\n",
       "                                                unit  \n",
       "fake.spectrum.main.composite.a_1      keV-1 s-1 cm-2  \n",
       "fake.spectrum.main.composite.b_1      s-1 cm-2 keV-2  \n",
       "fake.spectrum.main.composite.F_2            s-1 cm-2  \n",
       "fake.spectrum.main.composite.mu_2                keV  \n",
       "fake.spectrum.main.composite.sigma_2             keV  \n",
       "\n",
       "Fixed parameters (2):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.optimized_model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c0d92cf",
   "metadata": {},
   "source": [
    "## Saving results to disk\n",
    "\n",
    "The beauty of the analysis result is that all of this information can be written to disk and restored at a later time. The statistical parameters, best-fit model, etc. can all be recovered.\n",
    "\n",
    "AR's are stored as a structured FITS file. We write the AR like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4569065e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.234953Z",
     "iopub.status.busy": "2024-05-31T21:14:19.234597Z",
     "iopub.status.idle": "2024-05-31T21:14:19.277373Z",
     "shell.execute_reply": "2024-05-31T21:14:19.276720Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar.write_to(\"test_mle.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23ea406d",
   "metadata": {},
   "source": [
    "The FITS file can be examines with any normal FITS reader."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "80c7279f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.279830Z",
     "iopub.status.busy": "2024-05-31T21:14:19.279431Z",
     "iopub.status.idle": "2024-05-31T21:14:19.282608Z",
     "shell.execute_reply": "2024-05-31T21:14:19.282032Z"
    }
   },
   "outputs": [],
   "source": [
    "import astropy.io.fits as fits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "92cf1346",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.285007Z",
     "iopub.status.busy": "2024-05-31T21:14:19.284516Z",
     "iopub.status.idle": "2024-05-31T21:14:19.290409Z",
     "shell.execute_reply": "2024-05-31T21:14:19.289742Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: test_mle.fits\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU       6   ()      \n",
      "  1  ANALYSIS_RESULTS    1 BinTableHDU     38   5R x 9C   [36A, D, D, D, D, 16A, 5D, D, D]   \n"
     ]
    }
   ],
   "source": [
    "ar_fits = fits.open(\"test_mle.fits\")\n",
    "ar_fits.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d4c0e2f",
   "metadata": {},
   "source": [
    "However, to easily pull the results back into the 3ML framework, we use the ${\\tt load\\_analysis\\_results}$ function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c5782565",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.293146Z",
     "iopub.status.busy": "2024-05-31T21:14:19.292773Z",
     "iopub.status.idle": "2024-05-31T21:14:19.355942Z",
     "shell.execute_reply": "2024-05-31T21:14:19.355363Z"
    }
   },
   "outputs": [],
   "source": [
    "ar_reloaded = load_analysis_results(\"test_mle.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d754e7c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.359254Z",
     "iopub.status.busy": "2024-05-31T21:14:19.358832Z",
     "iopub.status.idle": "2024-05-31T21:14:19.365977Z",
     "shell.execute_reply": "2024-05-31T21:14:19.365183Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.100777\n",
       "total            31.100777"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_statistic_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6761f165",
   "metadata": {},
   "source": [
    "You can get a DataFrame with the saved results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b68d400a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.368729Z",
     "iopub.status.busy": "2024-05-31T21:14:19.368332Z",
     "iopub.status.idle": "2024-05-31T21:14:19.387144Z",
     "shell.execute_reply": "2024-05-31T21:14:19.386427Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.074832</td>\n",
       "      <td>-0.112608</td>\n",
       "      <td>0.116957</td>\n",
       "      <td>0.114782</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>-0.006071</td>\n",
       "      <td>-0.003903</td>\n",
       "      <td>0.003768</td>\n",
       "      <td>0.003836</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.793800</td>\n",
       "      <td>-3.890873</td>\n",
       "      <td>4.029578</td>\n",
       "      <td>3.960225</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.124361</td>\n",
       "      <td>-0.114873</td>\n",
       "      <td>0.113044</td>\n",
       "      <td>0.113958</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.939620</td>\n",
       "      <td>-0.095450</td>\n",
       "      <td>0.100167</td>\n",
       "      <td>0.097809</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       2.074832       -0.112608   \n",
       "fake.spectrum.main.composite.b_1      -0.006071       -0.003903   \n",
       "fake.spectrum.main.composite.F_2      30.793800       -3.890873   \n",
       "fake.spectrum.main.composite.mu_2     25.124361       -0.114873   \n",
       "fake.spectrum.main.composite.sigma_2   0.939620       -0.095450   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.116957  0.114782   \n",
       "fake.spectrum.main.composite.b_1            0.003768  0.003836   \n",
       "fake.spectrum.main.composite.F_2            4.029578  3.960225   \n",
       "fake.spectrum.main.composite.mu_2           0.113044  0.113958   \n",
       "fake.spectrum.main.composite.sigma_2        0.100167  0.097809   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_data_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e59dfbe7",
   "metadata": {},
   "source": [
    "## Analysis Result Sets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d53e5e4b",
   "metadata": {},
   "source": [
    "When doing time-resolved analysis or analysing a several objects, we can save several AR's is a set. This is achieved with the analysis result set. We can pass an array of AR's to the set and even set up descriptions for the different entries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ba90e8fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.389774Z",
     "iopub.status.busy": "2024-05-31T21:14:19.389549Z",
     "iopub.status.idle": "2024-05-31T21:14:19.467094Z",
     "shell.execute_reply": "2024-05-31T21:14:19.466430Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "from threeML.analysis_results import AnalysisResultsSet\n",
    "\n",
    "analysis_set = AnalysisResultsSet([ar, ar_reloaded])\n",
    "\n",
    "# index as time bins\n",
    "analysis_set.set_bins(\"testing\", [-1, 1], [3, 5], unit=\"s\")\n",
    "\n",
    "# write to disk\n",
    "analysis_set.write_to(\"analysis_set_test.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b98a2c18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.469738Z",
     "iopub.status.busy": "2024-05-31T21:14:19.469362Z",
     "iopub.status.idle": "2024-05-31T21:14:19.592610Z",
     "shell.execute_reply": "2024-05-31T21:14:19.591909Z"
    }
   },
   "outputs": [],
   "source": [
    "analysis_set = load_analysis_results(\"analysis_set_test.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "474bf5d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.595332Z",
     "iopub.status.busy": "2024-05-31T21:14:19.595112Z",
     "iopub.status.idle": "2024-05-31T21:14:19.628950Z",
     "shell.execute_reply": "2024-05-31T21:14:19.628363Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.07 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.512 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.4 +/- 1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               2.07 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1          (-6 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.512 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.4 +/- 1.0) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140675348154928\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.07</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>0.00</td><td>-0.02</td><td>-0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>0.00</td><td>1.00</td><td>-0.14</td><td>-0.07</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>-0.14</td><td>1.00</td><td>-0.10</td></tr>\n",
       "<tr><td>-0.07</td><td>-0.00</td><td>-0.07</td><td>-0.10</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.07\n",
       "-0.85  1.00  0.00 -0.02 -0.00\n",
       "-0.04  0.00  1.00 -0.14 -0.07\n",
       " 0.02 -0.02 -0.14  1.00 -0.10\n",
       "-0.07 -0.00 -0.07 -0.10  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.100777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.100777\n",
       "total            31.100777"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.565190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.761668</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.565190\n",
       "BIC             81.761668"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "analysis_set[0].display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39794978",
   "metadata": {},
   "source": [
    "## Error propagation\n",
    "In 3ML, we propagate errors for MLE reults via sampling of the covariance matrix *instead* of Taylor exanding around the maximum of the likelihood and computing a jacobain. Thus, we can achieve non-linear error propagation.\n",
    "\n",
    "You can use the results for propagating errors non-linearly for analytical functions:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "354cd88b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.631277Z",
     "iopub.status.busy": "2024-05-31T21:14:19.631076Z",
     "iopub.status.idle": "2024-05-31T21:14:19.638718Z",
     "shell.execute_reply": "2024-05-31T21:14:19.638123Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Propagating a+b, with a and b respectively:\n",
      "equal-tail: (-6 +/- 4) x 10^-3, hpd: (-6 +/- 4) x 10^-3\n",
      "equal-tail: 2.07 +/- 0.12, hpd: 2.07 -0.13 +0.11\n",
      "\n",
      "This is the result (with errors):\n",
      "equal-tail: 2.07 +/- 0.11, hpd: 2.07 -0.12 +0.11\n",
      "(1.9549457885656634, 2.1819543999831077)\n"
     ]
    }
   ],
   "source": [
    "p1 = ar.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(\"Propagating a+b, with a and b respectively:\")\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "print(\"\\nThis is the result (with errors):\")\n",
    "res = p1 + p2\n",
    "print(res)\n",
    "\n",
    "print(res.equal_tail_interval())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4315dc05",
   "metadata": {},
   "source": [
    "The propagation accounts for covariances. For example this\n",
    "has error of zero (of course) since there is perfect covariance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b001cfe4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.640931Z",
     "iopub.status.busy": "2024-05-31T21:14:19.640564Z",
     "iopub.status.idle": "2024-05-31T21:14:19.644658Z",
     "shell.execute_reply": "2024-05-31T21:14:19.644140Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is 50 * a/a:\n",
      "equal-tail: (5.0 +/- 0) x 10, hpd: (5.0 +/- 0) x 10\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is 50 * a/a:\")\n",
    "print(50 * p1 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30c1b198",
   "metadata": {},
   "source": [
    "You can use arbitrary (np) functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "929c1cb4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.647139Z",
     "iopub.status.busy": "2024-05-31T21:14:19.646689Z",
     "iopub.status.idle": "2024-05-31T21:14:19.651780Z",
     "shell.execute_reply": "2024-05-31T21:14:19.651234Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is arcsinh(b + 5*) / np.log10(b) (why not?)\n",
      "equal-tail: 9.6 -0.5 +0.6, hpd: 9.6 -0.6 +0.5\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is arcsinh(b + 5*) / np.log10(b) (why not?)\")\n",
    "print(np.arcsinh(p1 + 5 * p2) / np.log10(p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06ab89b6",
   "metadata": {},
   "source": [
    "Errors can become asymmetric. For example, the ratio of two gaussians is\n",
    "asymmetric notoriously:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "062474d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.653994Z",
     "iopub.status.busy": "2024-05-31T21:14:19.653614Z",
     "iopub.status.idle": "2024-05-31T21:14:19.658297Z",
     "shell.execute_reply": "2024-05-31T21:14:19.657702Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Ratio a/b:\n",
      "equal-tail: (-3.1 -3.5 +1.2) x 10^2, hpd: (-3.1 -1.8 +1.6) x 10^2\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nRatio a/b:\")\n",
    "print(p2 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7a5652a",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "You can always use it with arbitrary functions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "fba195f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.660546Z",
     "iopub.status.busy": "2024-05-31T21:14:19.660354Z",
     "iopub.status.idle": "2024-05-31T21:14:19.665414Z",
     "shell.execute_reply": "2024-05-31T21:14:19.664840Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Propagating using a custom function:\n",
      "equal-tail: 2.06 +/- 0.11, hpd: 2.06 -0.12 +0.10\n"
     ]
    }
   ],
   "source": [
    "def my_function(x, a, b):\n",
    "    return b * x**a\n",
    "\n",
    "\n",
    "print(\"\\nPropagating using a custom function:\")\n",
    "print(my_function(2.3, p1, p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b3544ce",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "This is an example of an error propagation to get the plot of the model with its errors\n",
    "(which are propagated without assuming linearity on parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9eac02e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.667792Z",
     "iopub.status.busy": "2024-05-31T21:14:19.667317Z",
     "iopub.status.idle": "2024-05-31T21:14:19.674716Z",
     "shell.execute_reply": "2024-05-31T21:14:19.674009Z"
    }
   },
   "outputs": [],
   "source": [
    "def go(fitfun, ar, model):\n",
    "    fig, ax = plt.subplots()\n",
    "\n",
    "    # Gather the parameter variates\n",
    "\n",
    "    arguments = {}\n",
    "\n",
    "    for par in fitfun.parameters.values():\n",
    "        if par.free:\n",
    "            this_name = par.name\n",
    "\n",
    "            this_variate = ar.get_variates(par.path)\n",
    "\n",
    "            # Do not use more than 1000 values (would make computation too slow for nothing)\n",
    "\n",
    "            if len(this_variate) > 1000:\n",
    "                this_variate = np.random.choice(this_variate, size=1000)\n",
    "\n",
    "            arguments[this_name] = this_variate\n",
    "\n",
    "    # Prepare the error propagator function\n",
    "\n",
    "    pp = ar.propagate(\n",
    "        ar.optimized_model.fake.spectrum.main.shape.evaluate_at, **arguments\n",
    "    )\n",
    "\n",
    "    # You can just use it as:\n",
    "\n",
    "    print(pp(5.0))\n",
    "\n",
    "    # Make the plot\n",
    "\n",
    "    energies = np.linspace(0, 50, 100)\n",
    "\n",
    "    low_curve = np.zeros_like(energies)\n",
    "    middle_curve = np.zeros_like(energies)\n",
    "    hi_curve = np.zeros_like(energies)\n",
    "\n",
    "    free_parameters = model.free_parameters\n",
    "\n",
    "    p = tqdm(total=len(energies), desc=\"Propagating errors\")\n",
    "\n",
    "    with use_astromodels_memoization(False):\n",
    "        for i, e in enumerate(energies):\n",
    "            this_flux = pp(e)\n",
    "\n",
    "            low_bound, hi_bound = this_flux.equal_tail_interval()\n",
    "\n",
    "            low_curve[i], middle_curve[i], hi_curve[i] = (\n",
    "                low_bound,\n",
    "                this_flux.median,\n",
    "                hi_bound,\n",
    "            )\n",
    "\n",
    "            p.update(1)\n",
    "\n",
    "    ax.plot(energies, middle_curve, \"--\", color=\"black\")\n",
    "    ax.fill_between(energies, low_curve, hi_curve, alpha=0.5, color=\"blue\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "45730241",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:19.677362Z",
     "iopub.status.busy": "2024-05-31T21:14:19.676791Z",
     "iopub.status.idle": "2024-05-31T21:14:23.669468Z",
     "shell.execute_reply": "2024-05-31T21:14:23.668703Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 2.05 +/- 0.13, hpd: 2.05 -0.14 +0.11\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b903f825e460482490d7adf0b15f957f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar, model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4887b164",
   "metadata": {},
   "source": [
    "## Bayesian Analysis Results\n",
    "Analysis Results work exactly the same under Bayesian analysis.\n",
    "\n",
    "Let's run the analysis first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "90bde073",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:23.671914Z",
     "iopub.status.busy": "2024-05-31T21:14:23.671511Z",
     "iopub.status.idle": "2024-05-31T21:14:29.691983Z",
     "shell.execute_reply": "2024-05-31T21:14:29.691455Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "11d42eb5ae72480796bfe8de40d5688c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c9f0b97340e64e268b920eec30ae3095",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Maximum a posteriori probability (MAP) point:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mMaximum a posteriori probability \u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mMAP\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m point:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.09 -0.13 +0.10</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(-6.6 -3.2 +5) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.01 -0.5 +0.34) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.513 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.3 +/- 1.1) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1            2.09 -0.13 +0.10   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1      (-6.6 -3.2 +5) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2      (3.01 -0.5 +0.34) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.513 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.3 +/- 1.1) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(posterior) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mposterior\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(posterior)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>-34.464482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>-34.464482</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(posterior)\n",
       "sim_data       -34.464482\n",
       "total          -34.464482"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>80.292601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>88.489080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DIC</th>\n",
       "      <td>79.045515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PDIC</th>\n",
       "      <td>5.039350</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      statistical measures\n",
       "AIC              80.292601\n",
       "BIC              88.489080\n",
       "DIC              79.045515\n",
       "PDIC              5.039350"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "for parameter in ar.optimized_model:\n",
    "    model[parameter.path].value = parameter.value\n",
    "\n",
    "model.fake.spectrum.main.composite.a_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.b_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.F_2.set_uninformative_prior(Log_uniform_prior)\n",
    "model.fake.spectrum.main.composite.mu_2.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.sigma_2.set_uninformative_prior(Log_uniform_prior)\n",
    "\n",
    "bs = BayesianAnalysis(model, data)\n",
    "bs.set_sampler(\"emcee\")\n",
    "bs.sampler.setup(n_iterations=1000, n_burn_in=100, n_walkers=20)\n",
    "samples = bs.sample()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "297926ab",
   "metadata": {},
   "source": [
    "Again, we grab the results from the BayesianAnalysis object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8c388bb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:29.694316Z",
     "iopub.status.busy": "2024-05-31T21:14:29.694121Z",
     "iopub.status.idle": "2024-05-31T21:14:29.696966Z",
     "shell.execute_reply": "2024-05-31T21:14:29.696435Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2 = bs.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed4ac780",
   "metadata": {},
   "source": [
    "We can write and read the results to/from a file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d30c1646",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:29.699084Z",
     "iopub.status.busy": "2024-05-31T21:14:29.698896Z",
     "iopub.status.idle": "2024-05-31T21:14:29.759067Z",
     "shell.execute_reply": "2024-05-31T21:14:29.758424Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar2.write_to(\"test_bayes.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "710b9b42",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:29.761393Z",
     "iopub.status.busy": "2024-05-31T21:14:29.761005Z",
     "iopub.status.idle": "2024-05-31T21:14:29.810502Z",
     "shell.execute_reply": "2024-05-31T21:14:29.809873Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2_reloaded = load_analysis_results(\"test_bayes.fits\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1470d43c",
   "metadata": {},
   "source": [
    "The AR holds the posterior samples from the analysis. We can see the saved and live reults are the same:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "418088c0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:29.813070Z",
     "iopub.status.busy": "2024-05-31T21:14:29.812699Z",
     "iopub.status.idle": "2024-05-31T21:14:29.828577Z",
     "shell.execute_reply": "2024-05-31T21:14:29.827959Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.allclose(ar2_reloaded.samples, ar2.samples)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c8944fa",
   "metadata": {},
   "source": [
    "**NOTE:** *MLE AR's store samples as well. These are the samples from the covariance matrix*\n",
    "\n",
    "We can examine the marginal distributions of the parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "61608c4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:29.831258Z",
     "iopub.status.busy": "2024-05-31T21:14:29.830901Z",
     "iopub.status.idle": "2024-05-31T21:14:31.288710Z",
     "shell.execute_reply": "2024-05-31T21:14:31.287996Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1180x1180 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = ar2.corner_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "878ada7e",
   "metadata": {},
   "source": [
    "We can return pandas DataFrames with equal tail or HPD results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "45330eff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:31.292296Z",
     "iopub.status.busy": "2024-05-31T21:14:31.291752Z",
     "iopub.status.idle": "2024-05-31T21:14:31.311787Z",
     "shell.execute_reply": "2024-05-31T21:14:31.311192Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.085779</td>\n",
       "      <td>-0.133761</td>\n",
       "      <td>0.100162</td>\n",
       "      <td>0.116962</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>-0.006558</td>\n",
       "      <td>-0.003210</td>\n",
       "      <td>0.004597</td>\n",
       "      <td>0.003904</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.071507</td>\n",
       "      <td>-4.670211</td>\n",
       "      <td>3.390311</td>\n",
       "      <td>4.030261</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.125565</td>\n",
       "      <td>-0.119258</td>\n",
       "      <td>0.119019</td>\n",
       "      <td>0.119139</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.929262</td>\n",
       "      <td>-0.105240</td>\n",
       "      <td>0.111541</td>\n",
       "      <td>0.108390</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       2.085779       -0.133761   \n",
       "fake.spectrum.main.composite.b_1      -0.006558       -0.003210   \n",
       "fake.spectrum.main.composite.F_2      30.071507       -4.670211   \n",
       "fake.spectrum.main.composite.mu_2     25.125565       -0.119258   \n",
       "fake.spectrum.main.composite.sigma_2   0.929262       -0.105240   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.100162  0.116962   \n",
       "fake.spectrum.main.composite.b_1            0.004597  0.003904   \n",
       "fake.spectrum.main.composite.F_2            3.390311  4.030261   \n",
       "fake.spectrum.main.composite.mu_2           0.119019  0.119139   \n",
       "fake.spectrum.main.composite.sigma_2        0.111541  0.108390   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"equal tail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d62364a4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:31.314178Z",
     "iopub.status.busy": "2024-05-31T21:14:31.313787Z",
     "iopub.status.idle": "2024-05-31T21:14:31.336750Z",
     "shell.execute_reply": "2024-05-31T21:14:31.336184Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>2.085779</td>\n",
       "      <td>-0.135647</td>\n",
       "      <td>0.097539</td>\n",
       "      <td>0.116593</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>-0.006558</td>\n",
       "      <td>-0.003122</td>\n",
       "      <td>0.004658</td>\n",
       "      <td>0.003890</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.071507</td>\n",
       "      <td>-4.614473</td>\n",
       "      <td>3.414056</td>\n",
       "      <td>4.014265</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.125565</td>\n",
       "      <td>-0.131679</td>\n",
       "      <td>0.103013</td>\n",
       "      <td>0.117346</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.929262</td>\n",
       "      <td>-0.119129</td>\n",
       "      <td>0.096008</td>\n",
       "      <td>0.107568</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       2.085779       -0.135647   \n",
       "fake.spectrum.main.composite.b_1      -0.006558       -0.003122   \n",
       "fake.spectrum.main.composite.F_2      30.071507       -4.614473   \n",
       "fake.spectrum.main.composite.mu_2     25.125565       -0.131679   \n",
       "fake.spectrum.main.composite.sigma_2   0.929262       -0.119129   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.097539  0.116593   \n",
       "fake.spectrum.main.composite.b_1            0.004658  0.003890   \n",
       "fake.spectrum.main.composite.F_2            3.414056  4.014265   \n",
       "fake.spectrum.main.composite.mu_2           0.103013  0.117346   \n",
       "fake.spectrum.main.composite.sigma_2        0.096008  0.107568   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73e50479",
   "metadata": {},
   "source": [
    "Error propagation operates the same way. Internally, the process is the same as the MLE results, however, the samples are those of the posterior rather than the (assumed) covariance matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "037d4038",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:31.339026Z",
     "iopub.status.busy": "2024-05-31T21:14:31.338648Z",
     "iopub.status.idle": "2024-05-31T21:14:31.350709Z",
     "shell.execute_reply": "2024-05-31T21:14:31.350175Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: (-6 +/- 4) x 10^-3, hpd: (-6 +/- 4) x 10^-3\n",
      "equal-tail: 2.07 +/- 0.12, hpd: 2.07 +/- 0.12\n",
      "equal-tail: 2.06 +/- 0.11, hpd: 2.06 +/- 0.11\n"
     ]
    }
   ],
   "source": [
    "p1 = ar2.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar2.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "res = p1 + p2\n",
    "\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26ae1d77",
   "metadata": {},
   "source": [
    "To demonstrate how the two objects (MLE and Bayes) are the same, we see that our plotting function written for the MLE result works on our Bayesian results seamlessly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8d7756ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-31T21:14:31.353021Z",
     "iopub.status.busy": "2024-05-31T21:14:31.352659Z",
     "iopub.status.idle": "2024-05-31T21:14:35.329986Z",
     "shell.execute_reply": "2024-05-31T21:14:35.329231Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 2.04 +/- 0.12, hpd: 2.04 +/- 0.12\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5f9ce5861df246ba969da7413c118540",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar2, model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "717557a7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.19"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "035f58dfa4f0468085822e249a3621e1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "09d170d10a234a4e863dda529c66b678": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e5664c2e6e854843a37ac600038a5ff7",
       "placeholder": "​",
       "style": "IPY_MODEL_b5f452987b154b5b8135c5c31f6decd8",
       "tabbable": null,
       "tooltip": null,
       "value": "processing MLE analyses: 100%"
      }
     },
     "10b5c802d0f14696bb9e1ffbed5272e7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "11d42eb5ae72480796bfe8de40d5688c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_ac51cab2340d4324a3483dd3c6ea8cc0",
        "IPY_MODEL_886345c343fe4c17b5f8773d4ff5a69c",
        "IPY_MODEL_3eec57c646ed404ba646aa84503342d1"
       ],
       "layout": "IPY_MODEL_7576ef83f0d64531ba4506ea92fb8c02",
       "tabbable": null,
       "tooltip": null
      }
     },
     "19a5b6ca0f15419c9daa8ecbdfcfcf8e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "271181ca150746d4b905ba45063736fb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6b3fc65b206a460bbab8921f76fddb4f",
       "placeholder": "​",
       "style": "IPY_MODEL_c9b794c96fbc4e04baeb5ae7366de254",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors:  99%"
      }
     },
     "2d7814ae702c492f8fcdbe4c3a8ff01d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6295c486e748492f89ed4d4296831647",
       "placeholder": "​",
       "style": "IPY_MODEL_d9ef3621fbf44a4b808419feead5fcc0",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors: 100%"
      }
     },
     "32e0f16104a54c39a8dc603a2d783d91": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3c15a6d15a85460f93b221a03af7b64e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_923cd045311a40dda63e719719f4ecd9",
       "max": 1000.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_660237fd456a4bab8567825b4e73fa4b",
       "tabbable": null,
       "tooltip": null,
       "value": 1000.0
      }
     },
     "3eec57c646ed404ba646aa84503342d1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6a535bc781f441c2a1a6693ce79f04e8",
       "placeholder": "​",
       "style": "IPY_MODEL_cd0369f7821a4028b62a85ab4a60f18f",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:00&lt;00:00, 263.00it/s]"
      }
     },
     "4436585ecac64b22bc885e7fbfbb9408": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "44721d4c4376465ba33134e47d18acb6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4c4b8fbe5c0b45b9b9fd225b70195bdb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "519d82dd4f6f42c9a1c322447b061e9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5ac9b4088d9a468b99c87dbc1a7886ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#440154",
       "description_width": ""
      }
     },
     "5b117fb9b6bd476f8fa81ff5ba8ac2ee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5f9ce5861df246ba969da7413c118540": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_271181ca150746d4b905ba45063736fb",
        "IPY_MODEL_ce3caca091be46c6bb5837dd78d9e04b",
        "IPY_MODEL_df2622303c424ee08f3f8cfe0c7c7d91"
       ],
       "layout": "IPY_MODEL_44721d4c4376465ba33134e47d18acb6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "6038faaecd8d42c7bb61f4d41911c334": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6295c486e748492f89ed4d4296831647": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "660237fd456a4bab8567825b4e73fa4b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "67caf48eb7dd428dbb07980fea3f10c3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6a535bc781f441c2a1a6693ce79f04e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6b3fc65b206a460bbab8921f76fddb4f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7576ef83f0d64531ba4506ea92fb8c02": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7b6fe27f03a545139b8bbfe5e191b84f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_67caf48eb7dd428dbb07980fea3f10c3",
       "placeholder": "​",
       "style": "IPY_MODEL_4436585ecac64b22bc885e7fbfbb9408",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:03&lt;00:00, 26.10it/s]"
      }
     },
     "886345c343fe4c17b5f8773d4ff5a69c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cb4f0d9f6ce94a94aead813be0d866d5",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_994b57c5c96f480085477df13cc966b2",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "8dcd6812c5c049149bfdcc0055e3d4ac": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_09d170d10a234a4e863dda529c66b678",
        "IPY_MODEL_e42aace0ac7b4af791ccb060291ea815",
        "IPY_MODEL_fc49223991914b85bb44b250f92c8385"
       ],
       "layout": "IPY_MODEL_d38942eed8964d618090b150f5faab0d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "923cd045311a40dda63e719719f4ecd9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "994b57c5c96f480085477df13cc966b2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "9fdb0a2f341841099abed3065d52e5e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a1f59e67552b4b68883bdfb2f44e14ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a9e151c6c6534b5cbf99ff1006cef2f0",
       "placeholder": "​",
       "style": "IPY_MODEL_32e0f16104a54c39a8dc603a2d783d91",
       "tabbable": null,
       "tooltip": null,
       "value": " 1000/1000 [00:03&lt;00:00, 262.88it/s]"
      }
     },
     "a9e151c6c6534b5cbf99ff1006cef2f0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ab1d38d5416046e98f81efaa53a65b2d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_035f58dfa4f0468085822e249a3621e1",
       "placeholder": "​",
       "style": "IPY_MODEL_519d82dd4f6f42c9a1c322447b061e9f",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "ac51cab2340d4324a3483dd3c6ea8cc0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b9667f4cef6a495ca67852d67cae98b6",
       "placeholder": "​",
       "style": "IPY_MODEL_f9aa35a14e9943219fc7d83cdb8edb81",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "afd2de0c5ae942d7ab323fd5e1646b35": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b5d4667f8d374fd4919c7e57df69592e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_19a5b6ca0f15419c9daa8ecbdfcfcf8e",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e8952b9ca1394aefa59d6772e4de604e",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "b5f452987b154b5b8135c5c31f6decd8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b903f825e460482490d7adf0b15f957f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2d7814ae702c492f8fcdbe4c3a8ff01d",
        "IPY_MODEL_b5d4667f8d374fd4919c7e57df69592e",
        "IPY_MODEL_7b6fe27f03a545139b8bbfe5e191b84f"
       ],
       "layout": "IPY_MODEL_10b5c802d0f14696bb9e1ffbed5272e7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b9667f4cef6a495ca67852d67cae98b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "be4ed344fb5b4bd7b1d86108fb806f7f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c158478a3cfa4a2aa78eca719e58802b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c7de41d370d44f1babe4c19242aaa34e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c9b794c96fbc4e04baeb5ae7366de254": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c9f0b97340e64e268b920eec30ae3095": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_ab1d38d5416046e98f81efaa53a65b2d",
        "IPY_MODEL_3c15a6d15a85460f93b221a03af7b64e",
        "IPY_MODEL_a1f59e67552b4b68883bdfb2f44e14ca"
       ],
       "layout": "IPY_MODEL_be4ed344fb5b4bd7b1d86108fb806f7f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "cb4f0d9f6ce94a94aead813be0d866d5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cd0369f7821a4028b62a85ab4a60f18f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ce3caca091be46c6bb5837dd78d9e04b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5b117fb9b6bd476f8fa81ff5ba8ac2ee",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_9fdb0a2f341841099abed3065d52e5e8",
       "tabbable": null,
       "tooltip": null,
       "value": 99.0
      }
     },
     "d38942eed8964d618090b150f5faab0d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "d9ef3621fbf44a4b808419feead5fcc0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "df2622303c424ee08f3f8cfe0c7c7d91": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_afd2de0c5ae942d7ab323fd5e1646b35",
       "placeholder": "​",
       "style": "IPY_MODEL_4c4b8fbe5c0b45b9b9fd225b70195bdb",
       "tabbable": null,
       "tooltip": null,
       "value": " 99/100 [00:03&lt;00:00, 26.31it/s]"
      }
     },
     "e42aace0ac7b4af791ccb060291ea815": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c158478a3cfa4a2aa78eca719e58802b",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5ac9b4088d9a468b99c87dbc1a7886ae",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "e5664c2e6e854843a37ac600038a5ff7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e8952b9ca1394aefa59d6772e4de604e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f9aa35a14e9943219fc7d83cdb8edb81": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fc49223991914b85bb44b250f92c8385": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c7de41d370d44f1babe4c19242aaa34e",
       "placeholder": "​",
       "style": "IPY_MODEL_6038faaecd8d42c7bb61f4d41911c334",
       "tabbable": null,
       "tooltip": null,
       "value": " 1/1 [00:04&lt;00:00,  4.88s/it]"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
