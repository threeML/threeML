{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e0d7eb25",
   "metadata": {},
   "source": [
    "# Analysis Results\n",
    "\n",
    "3ML stores the results of a fit in a container we call an \"Analysis Result\" (AR). The structure of this object is designed to be useable in a *live* sense within an *active* analysis (python script, ipython interactive shell, jupyter notebook) as well as storable as a FITS file for saving results for later.\n",
    "\n",
    "The structure is nearly the same between MLE and Bayesian analyses in order to make a seamless functionality between all analyses.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b4e2cb67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:31.566382Z",
     "iopub.status.busy": "2023-11-04T01:31:31.565917Z",
     "iopub.status.idle": "2023-11-04T01:31:38.851944Z",
     "shell.execute_reply": "2023-11-04T01:31:38.851139Z"
    }
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.analysis_results import *\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0df6c6c0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:38.855760Z",
     "iopub.status.busy": "2023-11-04T01:31:38.855352Z",
     "iopub.status.idle": "2023-11-04T01:31:38.892074Z",
     "shell.execute_reply": "2023-11-04T01:31:38.891426Z"
    }
   },
   "outputs": [],
   "source": [
    "silence_logs()\n",
    "from tqdm.auto import tqdm\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "set_threeML_style()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c89d2c9a",
   "metadata": {},
   "source": [
    "Let's take a look at what we can do with an AR. First, we will simulate some data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fc0ee29d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:38.895411Z",
     "iopub.status.busy": "2023-11-04T01:31:38.894765Z",
     "iopub.status.idle": "2023-11-04T01:31:40.136268Z",
     "shell.execute_reply": "2023-11-04T01:31:40.135537Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gen_function = Line(a=2, b=0) + Gaussian(F=30.0, mu=25.0, sigma=1)\n",
    "\n",
    "# Generate a dataset using the line and a gaussian.\n",
    "# constant 20% error\n",
    "\n",
    "x = np.linspace(0, 50, 50)\n",
    "\n",
    "xy = XYLike.from_function(\n",
    "    \"sim_data\", function=gen_function, x=x, yerr=0.2 * gen_function(x)\n",
    ")\n",
    "\n",
    "fig = xy.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc439598",
   "metadata": {},
   "source": [
    "## MLE Results\n",
    "\n",
    "\n",
    "First we will demonstrate how AR's work for an MLE analysis on our synthetic data. As we will see, most of the functionality exists in the Bayesian AR's as well.\n",
    "\n",
    "Let's do a simple likelihood maximization of our data and model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0dcd32c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:40.139705Z",
     "iopub.status.busy": "2023-11-04T01:31:40.139214Z",
     "iopub.status.idle": "2023-11-04T01:31:41.071901Z",
     "shell.execute_reply": "2023-11-04T01:31:41.071189Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.7 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.493 +/- 0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.7 +/- 0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.98 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.7 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.493 +/- 0.010) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.7 +/- 0.8) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140135515240960\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.01</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.08</td><td>-0.11</td></tr>\n",
       "<tr><td>0.01</td><td>-0.02</td><td>0.08</td><td>1.00</td><td>0.04</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.11</td><td>0.04</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.01 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.08 -0.11\n",
       " 0.01 -0.02  0.08  1.00  0.04\n",
       "-0.08  0.00 -0.11  0.04  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         16.667247\n",
       "total            16.667247"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>44.698131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>52.894609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             44.698131\n",
       "BIC             52.894609"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fitfun = Line() + Gaussian()\n",
    "\n",
    "fitfun.b_1.bounds = (-10, 10.0)\n",
    "fitfun.a_1.bounds = (-100, 100.0)\n",
    "fitfun.F_2 = 25.0\n",
    "fitfun.F_2.bounds = (1e-3, 200.0)\n",
    "fitfun.mu_2 = 25.0\n",
    "fitfun.mu_2.bounds = (0.0, 100.0)\n",
    "fitfun.sigma_2.bounds = (1e-3, 10.0)\n",
    "\n",
    "model = Model(PointSource(\"fake\", 0.0, 0.0, fitfun))\n",
    "\n",
    "data = DataList(xy)\n",
    "\n",
    "jl = JointLikelihood(model, DataList(xy))\n",
    "_ = jl.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84a90511",
   "metadata": {},
   "source": [
    "We can get our errors as always, but the results cannot be propagated (error propagation assumes Gaussian errors, i.e., symmetric errors)\n",
    "In this case though errors are pretty symmetric, so we are likely in the case\n",
    "where the MLE is actually normally distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a5f254bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.075330Z",
     "iopub.status.busy": "2023-11-04T01:31:41.074681Z",
     "iopub.status.idle": "2023-11-04T01:31:41.144890Z",
     "shell.execute_reply": "2023-11-04T01:31:41.144182Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.7 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.493 +/- 0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.7 +/- 0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.98 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.7 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.493 +/- 0.010) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.7 +/- 0.8) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.979123</td>\n",
       "      <td>-0.113405</td>\n",
       "      <td>0.113398</td>\n",
       "      <td>0.113401</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.003940</td>\n",
       "      <td>-0.003844</td>\n",
       "      <td>0.003844</td>\n",
       "      <td>0.003844</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>37.327646</td>\n",
       "      <td>-3.997782</td>\n",
       "      <td>3.999882</td>\n",
       "      <td>3.998832</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.932941</td>\n",
       "      <td>-0.096464</td>\n",
       "      <td>0.095198</td>\n",
       "      <td>0.095831</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.969747</td>\n",
       "      <td>-0.076368</td>\n",
       "      <td>0.079412</td>\n",
       "      <td>0.077890</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.979123       -0.113405   \n",
       "fake.spectrum.main.composite.b_1       0.003940       -0.003844   \n",
       "fake.spectrum.main.composite.F_2      37.327646       -3.997782   \n",
       "fake.spectrum.main.composite.mu_2     24.932941       -0.096464   \n",
       "fake.spectrum.main.composite.sigma_2   0.969747       -0.076368   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.113398  0.113401   \n",
       "fake.spectrum.main.composite.b_1            0.003844  0.003844   \n",
       "fake.spectrum.main.composite.F_2            3.999882  3.998832   \n",
       "fake.spectrum.main.composite.mu_2           0.095198  0.095831   \n",
       "fake.spectrum.main.composite.sigma_2        0.079412  0.077890   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jl.get_errors()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14c9fcb0",
   "metadata": {},
   "source": [
    "We need to get the AnalysisResults object that is created after a fit is performed. The AR object is a member of the JointLikelihood object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "379ff54b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.149041Z",
     "iopub.status.busy": "2023-11-04T01:31:41.147677Z",
     "iopub.status.idle": "2023-11-04T01:31:41.152750Z",
     "shell.execute_reply": "2023-11-04T01:31:41.152124Z"
    }
   },
   "outputs": [],
   "source": [
    "ar = jl.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e0a1784",
   "metadata": {},
   "source": [
    "We can display the results of the analysis. Note, when a fit is performed, the post display is actaully from the internal AR."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5f8467b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.155848Z",
     "iopub.status.busy": "2023-11-04T01:31:41.155375Z",
     "iopub.status.idle": "2023-11-04T01:31:41.195674Z",
     "shell.execute_reply": "2023-11-04T01:31:41.195068Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.7 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.493 +/- 0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.7 +/- 0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.98 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.7 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.493 +/- 0.010) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.7 +/- 0.8) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140135503758720\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.01</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.08</td><td>-0.11</td></tr>\n",
       "<tr><td>0.01</td><td>-0.02</td><td>0.08</td><td>1.00</td><td>0.04</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.11</td><td>0.04</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.01 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.08 -0.11\n",
       " 0.01 -0.02  0.08  1.00  0.04\n",
       "-0.08  0.00 -0.11  0.04  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         16.667247\n",
       "total            16.667247"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>44.698131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>52.894609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             44.698131\n",
       "BIC             52.894609"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c63a83b9",
   "metadata": {},
   "source": [
    "By default, the equal tail intervals are displayed. We can instead display highest posterior densities (equal in the MLE case)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e4640dd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.198865Z",
     "iopub.status.busy": "2023-11-04T01:31:41.198290Z",
     "iopub.status.idle": "2023-11-04T01:31:41.241045Z",
     "shell.execute_reply": "2023-11-04T01:31:41.240230Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.7 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.493 +/- 0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.7 +/- 0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.98 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.7 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.493 +/- 0.010) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.7 +/- 0.8) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140135507015664\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.01</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.08</td><td>-0.11</td></tr>\n",
       "<tr><td>0.01</td><td>-0.02</td><td>0.08</td><td>1.00</td><td>0.04</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.11</td><td>0.04</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.01 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.08 -0.11\n",
       " 0.01 -0.02  0.08  1.00  0.04\n",
       "-0.08  0.00 -0.11  0.04  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         16.667247\n",
       "total            16.667247"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>44.698131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>52.894609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             44.698131\n",
       "BIC             52.894609"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04e7022e",
   "metadata": {},
   "source": [
    "The AR stores several properties from the analysis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "13436064",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.245048Z",
     "iopub.status.busy": "2023-11-04T01:31:41.243750Z",
     "iopub.status.idle": "2023-11-04T01:31:41.250775Z",
     "shell.execute_reply": "2023-11-04T01:31:41.249470Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'MLE'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.analysis_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8a619424",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.253553Z",
     "iopub.status.busy": "2023-11-04T01:31:41.253113Z",
     "iopub.status.idle": "2023-11-04T01:31:41.258954Z",
     "shell.execute_reply": "2023-11-04T01:31:41.258296Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.28598658e-02, -3.69498279e-04, -1.86581503e-02,\n",
       "         1.62016582e-04, -6.90825665e-04],\n",
       "       [-3.69498279e-04,  1.47754268e-05, -5.57471877e-06,\n",
       "        -6.48438758e-06,  5.50784645e-07],\n",
       "       [-1.86581503e-02, -5.57471877e-06,  1.59912818e+01,\n",
       "         3.03409415e-02, -3.31122033e-02],\n",
       "       [ 1.62016582e-04, -6.48438758e-06,  3.03409415e-02,\n",
       "         9.08551218e-03,  2.66025891e-04],\n",
       "       [-6.90825665e-04,  5.50784645e-07, -3.31122033e-02,\n",
       "         2.66025891e-04,  6.01528412e-03]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.covariance_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c84f91d0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:41.261546Z",
     "iopub.status.busy": "2023-11-04T01:31:41.261325Z",
     "iopub.status.idle": "2023-11-04T01:31:44.382387Z",
     "shell.execute_reply": "2023-11-04T01:31:44.381615Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f4c3131538f74fa883bb920863f49533",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "processing MLE analyses:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>flux</th>\n",
       "      <th>low bound</th>\n",
       "      <th>hi bound</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake: total</th>\n",
       "      <td>1.946136098676441e-05 erg / (s cm2)</td>\n",
       "      <td>1.8067412755858902e-05 erg / (s cm2)</td>\n",
       "      <td>2.083128691448484e-05 erg / (s cm2)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            flux  \\\n",
       "fake: total  1.946136098676441e-05 erg / (s cm2)   \n",
       "\n",
       "                                        low bound  \\\n",
       "fake: total  1.8067412755858902e-05 erg / (s cm2)   \n",
       "\n",
       "                                        hi bound  \n",
       "fake: total  2.083128691448484e-05 erg / (s cm2)  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.get_point_source_flux(1 * u.keV, 0.1 * u.MeV)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "12986bf1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.385855Z",
     "iopub.status.busy": "2023-11-04T01:31:44.385103Z",
     "iopub.status.idle": "2023-11-04T01:31:44.408940Z",
     "shell.execute_reply": "2023-11-04T01:31:44.408091Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (5):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.979123</td>\n",
       "      <td>-100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.00394</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>s-1 cm-2 keV-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>37.327646</td>\n",
       "      <td>0.001</td>\n",
       "      <td>200.0</td>\n",
       "      <td>s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.932941</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.969747</td>\n",
       "      <td>0.001</td>\n",
       "      <td>10.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (2):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                  N\n",
       "Point sources     1\n",
       "Extended sources  0\n",
       "Particle sources  0\n",
       "\n",
       "Free parameters (5):\n",
       "--------------------\n",
       "\n",
       "                                          value min_value max_value  \\\n",
       "fake.spectrum.main.composite.a_1       1.979123    -100.0     100.0   \n",
       "fake.spectrum.main.composite.b_1        0.00394     -10.0      10.0   \n",
       "fake.spectrum.main.composite.F_2      37.327646     0.001     200.0   \n",
       "fake.spectrum.main.composite.mu_2     24.932941       0.0     100.0   \n",
       "fake.spectrum.main.composite.sigma_2   0.969747     0.001      10.0   \n",
       "\n",
       "                                                unit  \n",
       "fake.spectrum.main.composite.a_1      keV-1 s-1 cm-2  \n",
       "fake.spectrum.main.composite.b_1      s-1 cm-2 keV-2  \n",
       "fake.spectrum.main.composite.F_2            s-1 cm-2  \n",
       "fake.spectrum.main.composite.mu_2                keV  \n",
       "fake.spectrum.main.composite.sigma_2             keV  \n",
       "\n",
       "Fixed parameters (2):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.optimized_model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b7b39d5",
   "metadata": {},
   "source": [
    "## Saving results to disk\n",
    "\n",
    "The beauty of the analysis result is that all of this information can be written to disk and restored at a later time. The statistical parameters, best-fit model, etc. can all be recovered.\n",
    "\n",
    "AR's are stored as a structured FITS file. We write the AR like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ad0c49c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.412892Z",
     "iopub.status.busy": "2023-11-04T01:31:44.412319Z",
     "iopub.status.idle": "2023-11-04T01:31:44.465480Z",
     "shell.execute_reply": "2023-11-04T01:31:44.464854Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar.write_to(\"test_mle.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1611fca",
   "metadata": {},
   "source": [
    "The FITS file can be examines with any normal FITS reader."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "530a3576",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.468725Z",
     "iopub.status.busy": "2023-11-04T01:31:44.468252Z",
     "iopub.status.idle": "2023-11-04T01:31:44.472801Z",
     "shell.execute_reply": "2023-11-04T01:31:44.472185Z"
    }
   },
   "outputs": [],
   "source": [
    "import astropy.io.fits as fits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5b93c92d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.475726Z",
     "iopub.status.busy": "2023-11-04T01:31:44.475256Z",
     "iopub.status.idle": "2023-11-04T01:31:44.483866Z",
     "shell.execute_reply": "2023-11-04T01:31:44.483226Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: test_mle.fits\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU       6   ()      \n",
      "  1  ANALYSIS_RESULTS    1 BinTableHDU     38   5R x 9C   [36A, D, D, D, D, 16A, 5D, D, D]   \n"
     ]
    }
   ],
   "source": [
    "ar_fits = fits.open(\"test_mle.fits\")\n",
    "ar_fits.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26ba5535",
   "metadata": {},
   "source": [
    "However, to easily pull the results back into the 3ML framework, we use the ${\\tt load\\_analysis\\_results}$ function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6ac74064",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.487127Z",
     "iopub.status.busy": "2023-11-04T01:31:44.486513Z",
     "iopub.status.idle": "2023-11-04T01:31:44.562850Z",
     "shell.execute_reply": "2023-11-04T01:31:44.562075Z"
    }
   },
   "outputs": [],
   "source": [
    "ar_reloaded = load_analysis_results(\"test_mle.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "84dc2325",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.566786Z",
     "iopub.status.busy": "2023-11-04T01:31:44.566278Z",
     "iopub.status.idle": "2023-11-04T01:31:44.576711Z",
     "shell.execute_reply": "2023-11-04T01:31:44.576045Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         16.667247\n",
       "total            16.667247"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_statistic_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7b24ad5",
   "metadata": {},
   "source": [
    "You can get a DataFrame with the saved results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3a9ceecd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.579762Z",
     "iopub.status.busy": "2023-11-04T01:31:44.579285Z",
     "iopub.status.idle": "2023-11-04T01:31:44.602082Z",
     "shell.execute_reply": "2023-11-04T01:31:44.601392Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.979123</td>\n",
       "      <td>-0.111337</td>\n",
       "      <td>0.116215</td>\n",
       "      <td>0.113776</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.003940</td>\n",
       "      <td>-0.003941</td>\n",
       "      <td>0.003746</td>\n",
       "      <td>0.003843</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>37.327646</td>\n",
       "      <td>-3.884913</td>\n",
       "      <td>4.020774</td>\n",
       "      <td>3.952844</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.932941</td>\n",
       "      <td>-0.095778</td>\n",
       "      <td>0.096892</td>\n",
       "      <td>0.096335</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.969747</td>\n",
       "      <td>-0.078035</td>\n",
       "      <td>0.078210</td>\n",
       "      <td>0.078123</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.979123       -0.111337   \n",
       "fake.spectrum.main.composite.b_1       0.003940       -0.003941   \n",
       "fake.spectrum.main.composite.F_2      37.327646       -3.884913   \n",
       "fake.spectrum.main.composite.mu_2     24.932941       -0.095778   \n",
       "fake.spectrum.main.composite.sigma_2   0.969747       -0.078035   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.116215  0.113776   \n",
       "fake.spectrum.main.composite.b_1            0.003746  0.003843   \n",
       "fake.spectrum.main.composite.F_2            4.020774  3.952844   \n",
       "fake.spectrum.main.composite.mu_2           0.096892  0.096335   \n",
       "fake.spectrum.main.composite.sigma_2        0.078210  0.078123   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_data_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "731cc68a",
   "metadata": {},
   "source": [
    "## Analysis Result Sets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c8e2f95",
   "metadata": {},
   "source": [
    "When doing time-resolved analysis or analysing a several objects, we can save several AR's is a set. This is achieved with the analysis result set. We can pass an array of AR's to the set and even set up descriptions for the different entries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "058deab6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.605532Z",
     "iopub.status.busy": "2023-11-04T01:31:44.604914Z",
     "iopub.status.idle": "2023-11-04T01:31:44.697369Z",
     "shell.execute_reply": "2023-11-04T01:31:44.696668Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "from threeML.analysis_results import AnalysisResultsSet\n",
    "\n",
    "analysis_set = AnalysisResultsSet([ar, ar_reloaded])\n",
    "\n",
    "# index as time bins\n",
    "analysis_set.set_bins(\"testing\", [-1, 1], [3, 5], unit=\"s\")\n",
    "\n",
    "# write to disk\n",
    "analysis_set.write_to(\"analysis_set_test.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8aa001f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.700799Z",
     "iopub.status.busy": "2023-11-04T01:31:44.700132Z",
     "iopub.status.idle": "2023-11-04T01:31:44.845428Z",
     "shell.execute_reply": "2023-11-04T01:31:44.844651Z"
    }
   },
   "outputs": [],
   "source": [
    "analysis_set = load_analysis_results(\"analysis_set_test.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4c96a3d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.849435Z",
     "iopub.status.busy": "2023-11-04T01:31:44.848715Z",
     "iopub.status.idle": "2023-11-04T01:31:44.892870Z",
     "shell.execute_reply": "2023-11-04T01:31:44.892165Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.7 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.493 +/- 0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.7 +/- 0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.98 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.7 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.493 +/- 0.010) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2   (9.7 +/- 0.8) x 10^-1               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140135522247728\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.01</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.08</td><td>-0.11</td></tr>\n",
       "<tr><td>0.01</td><td>-0.02</td><td>0.08</td><td>1.00</td><td>0.04</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.11</td><td>0.04</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.01 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.08 -0.11\n",
       " 0.01 -0.02  0.08  1.00  0.04\n",
       "-0.08  0.00 -0.11  0.04  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>16.667247</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         16.667247\n",
       "total            16.667247"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>44.698131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>52.894609</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             44.698131\n",
       "BIC             52.894609"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "analysis_set[0].display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04a39650",
   "metadata": {},
   "source": [
    "## Error propagation\n",
    "In 3ML, we propagate errors for MLE reults via sampling of the covariance matrix *instead* of Taylor exanding around the maximum of the likelihood and computing a jacobain. Thus, we can achieve non-linear error propagation.\n",
    "\n",
    "You can use the results for propagating errors non-linearly for analytical functions:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6390f2d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.896008Z",
     "iopub.status.busy": "2023-11-04T01:31:44.895426Z",
     "iopub.status.idle": "2023-11-04T01:31:44.905421Z",
     "shell.execute_reply": "2023-11-04T01:31:44.904785Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Propagating a+b, with a and b respectively:\n",
      "equal-tail: (4 +/- 4) x 10^-3, hpd: (4 +/- 4) x 10^-3\n",
      "equal-tail: 1.98 -0.11 +0.12, hpd: 1.98 -0.12 +0.11\n",
      "\n",
      "This is the result (with errors):\n",
      "equal-tail: 1.99 +/- 0.11, hpd: 1.99 +/- 0.11\n",
      "(1.8773275177219553, 2.098597704081422)\n"
     ]
    }
   ],
   "source": [
    "p1 = ar.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(\"Propagating a+b, with a and b respectively:\")\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "print(\"\\nThis is the result (with errors):\")\n",
    "res = p1 + p2\n",
    "print(res)\n",
    "\n",
    "print(res.equal_tail_interval())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f005b59",
   "metadata": {},
   "source": [
    "The propagation accounts for covariances. For example this\n",
    "has error of zero (of course) since there is perfect covariance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ca6eb24b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.908543Z",
     "iopub.status.busy": "2023-11-04T01:31:44.907975Z",
     "iopub.status.idle": "2023-11-04T01:31:44.913037Z",
     "shell.execute_reply": "2023-11-04T01:31:44.912362Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is 50 * a/a:\n",
      "equal-tail: (5.0 +/- 0) x 10, hpd: (5.0 +/- 0) x 10\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is 50 * a/a:\")\n",
    "print(50 * p1 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dd531ac",
   "metadata": {},
   "source": [
    "You can use arbitrary (np) functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8e90cda5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.916067Z",
     "iopub.status.busy": "2023-11-04T01:31:44.915405Z",
     "iopub.status.idle": "2023-11-04T01:31:44.921533Z",
     "shell.execute_reply": "2023-11-04T01:31:44.920867Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is arcsinh(b + 5*) / np.log10(b) (why not?)\n",
      "equal-tail: (1.01 -0.06 +0.07) x 10, hpd: (1.01 -0.07 +0.05) x 10\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is arcsinh(b + 5*) / np.log10(b) (why not?)\")\n",
    "print(np.arcsinh(p1 + 5 * p2) / np.log10(p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69942ae1",
   "metadata": {},
   "source": [
    "Errors can become asymmetric. For example, the ratio of two gaussians is\n",
    "asymmetric notoriously:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7d6a89c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.924401Z",
     "iopub.status.busy": "2023-11-04T01:31:44.923966Z",
     "iopub.status.idle": "2023-11-04T01:31:44.928414Z",
     "shell.execute_reply": "2023-11-04T01:31:44.927778Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Ratio a/b:\n",
      "equal-tail: (4 -6 +7) x 10^2, hpd: (3.5 -2.4 +7) x 10^2\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nRatio a/b:\")\n",
    "print(p2 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "924c4fd6",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "You can always use it with arbitrary functions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "620aad84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.931323Z",
     "iopub.status.busy": "2023-11-04T01:31:44.930773Z",
     "iopub.status.idle": "2023-11-04T01:31:44.937779Z",
     "shell.execute_reply": "2023-11-04T01:31:44.937168Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Propagating using a custom function:\n",
      "equal-tail: 1.99 +/- 0.11, hpd: 1.99 +/- 0.11\n"
     ]
    }
   ],
   "source": [
    "def my_function(x, a, b):\n",
    "    return b * x**a\n",
    "\n",
    "\n",
    "print(\"\\nPropagating using a custom function:\")\n",
    "print(my_function(2.3, p1, p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "655eb788",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "This is an example of an error propagation to get the plot of the model with its errors\n",
    "(which are propagated without assuming linearity on parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "47631164",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.940495Z",
     "iopub.status.busy": "2023-11-04T01:31:44.940066Z",
     "iopub.status.idle": "2023-11-04T01:31:44.948830Z",
     "shell.execute_reply": "2023-11-04T01:31:44.948173Z"
    }
   },
   "outputs": [],
   "source": [
    "def go(fitfun, ar, model):\n",
    "    fig, ax = plt.subplots()\n",
    "\n",
    "    # Gather the parameter variates\n",
    "\n",
    "    arguments = {}\n",
    "\n",
    "    for par in fitfun.parameters.values():\n",
    "        if par.free:\n",
    "            this_name = par.name\n",
    "\n",
    "            this_variate = ar.get_variates(par.path)\n",
    "\n",
    "            # Do not use more than 1000 values (would make computation too slow for nothing)\n",
    "\n",
    "            if len(this_variate) > 1000:\n",
    "                this_variate = np.random.choice(this_variate, size=1000)\n",
    "\n",
    "            arguments[this_name] = this_variate\n",
    "\n",
    "    # Prepare the error propagator function\n",
    "\n",
    "    pp = ar.propagate(\n",
    "        ar.optimized_model.fake.spectrum.main.shape.evaluate_at, **arguments\n",
    "    )\n",
    "\n",
    "    # You can just use it as:\n",
    "\n",
    "    print(pp(5.0))\n",
    "\n",
    "    # Make the plot\n",
    "\n",
    "    energies = np.linspace(0, 50, 100)\n",
    "\n",
    "    low_curve = np.zeros_like(energies)\n",
    "    middle_curve = np.zeros_like(energies)\n",
    "    hi_curve = np.zeros_like(energies)\n",
    "\n",
    "    free_parameters = model.free_parameters\n",
    "\n",
    "    p = tqdm(total=len(energies), desc=\"Propagating errors\")\n",
    "\n",
    "    with use_astromodels_memoization(False):\n",
    "        for i, e in enumerate(energies):\n",
    "            this_flux = pp(e)\n",
    "\n",
    "            low_bound, hi_bound = this_flux.equal_tail_interval()\n",
    "\n",
    "            low_curve[i], middle_curve[i], hi_curve[i] = (\n",
    "                low_bound,\n",
    "                this_flux.median,\n",
    "                hi_bound,\n",
    "            )\n",
    "\n",
    "            p.update(1)\n",
    "\n",
    "    ax.plot(energies, middle_curve, \"--\", color=\"black\")\n",
    "    ax.fill_between(energies, low_curve, hi_curve, alpha=0.5, color=\"blue\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "cf459943",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:44.951454Z",
     "iopub.status.busy": "2023-11-04T01:31:44.951219Z",
     "iopub.status.idle": "2023-11-04T01:31:49.857142Z",
     "shell.execute_reply": "2023-11-04T01:31:49.856414Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 2.00 +/- 0.12, hpd: 2.00 -0.10 +0.13\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "704176f078a6482e96bfad3b3ccdfa02",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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AIwovRNW6s4cc+YAAKMpyo+q3bt3a+/evVqwYEHGawsXLtSzzz474vVvvPGGJGVc397ersmTJ2vz5s3jVywAAJJefvle7d27U06nR4cccpkcjoltzXk8hDkAQH6KEuZ6enokKWsHr62tTf39/QqFQnIOM4ZltOvjrxeiu7t72Ou7uroKfl8AQGV7+ukfqKtrjSRp8eJ/mPCtCRobU4dZMmcOADCaooS5YDAoSVkXOYkHuGAwOGyYC+2buJDtdafTKZ/PV3BtDzzwgFatWlXw9QCA6mMYZoCSJIvFKpvNVdIwR2cOAJCLooQ5l8slSQpn+bViPKjFz8kmHuJC6bPR9x0b6drRrFy5Uscee2zW17q6unTzzTcX/N4AgMoUjQ6FOYfDI8OwTPgCKG63UxaLTYYRVShEmAMAjK4oYS4+PDLbcMaenh41NTUN25VLvz55AZX4sYULFxZcW3t7u9rb2wu+HgBQfUKhoTDndHoUjUpJU9gmhMNh0ac//a6czno5HPWKRMyOocUysXUAACpH3qtZ5mLy5MlqaWnRpk2bMl7bsGGD5s2bN+L1BxxwgCRlXN/d3a3du3cnXgcAYDyEQubQRsnszJUizNXXS/X1HXK5GmW12hSLie0JAAAjKkqYk6QTTjhBTz/9tHbu3Jk49tJLL2n79u066aSTEscikYi6urrU3d2dOLbffvtp9uzZevDBBxVN+kl2//33y2Kx6IQTTihW2QCAGpQc5pxOj2Kx0oS5WGzouTmPb2JrAABUloKGWd53330aHBxMDKN86qmntGvXLknS+eefr4aGBl122WV6/PHH9S//8i+64IIL5Pf79T//8z+aO3euzjjjjMR77d69W5dffrlOP/10feELX0gc/+QnP6mbbrpJN954o0455RRt2bJFq1ev1tlnn605c+aM4a8MAECq/v6ootH44l0eGYbkdk9sDfX1ZicuvvBKLJa59x0AAMkKCnP33HOPduzYkXi+Zs0arVljLue8YsUKNTQ0qKOjQ9/73vf0/e9/X7fddpvsdruOPvpofepTnxpxvlzcMccco5tvvlmrVq3SrbfequbmZl122WW68sorCykZAIBhdXd7E4+dTo+sVk34Aigej/T667/WwMAmhcNeHX30/1M4PME7lwMAKkpBPyXuvffenM7bb7/99O1vf3vEc6ZNm5YIgumWL1+u5cuX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",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar, model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d786c1e",
   "metadata": {},
   "source": [
    "## Bayesian Analysis Results\n",
    "Analysis Results work exactly the same under Bayesian analysis.\n",
    "\n",
    "Let's run the analysis first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0742d057",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:49.860688Z",
     "iopub.status.busy": "2023-11-04T01:31:49.860030Z",
     "iopub.status.idle": "2023-11-04T01:31:56.600330Z",
     "shell.execute_reply": "2023-11-04T01:31:56.599662Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "02dcc616493b4e91b4037cbd56906546",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "38e032161f524eb692ccc299a537ce4e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Maximum a posteriori probability (MAP) point:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mMaximum a posteriori probability \u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mMAP\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m point:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.98 -0.12 +0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.69 -0.5 +0.33) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.492 -0.009 +0.011) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(9.6 -0.7 +0.8) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                          result  \\\n",
       "parameter                                                          \n",
       "fake.spectrum.main.composite.a_1                1.98 -0.12 +0.11   \n",
       "fake.spectrum.main.composite.b_1               (4 +/- 4) x 10^-3   \n",
       "fake.spectrum.main.composite.F_2          (3.69 -0.5 +0.33) x 10   \n",
       "fake.spectrum.main.composite.mu_2     (2.492 -0.009 +0.011) x 10   \n",
       "fake.spectrum.main.composite.sigma_2     (9.6 -0.7 +0.8) x 10^-1   \n",
       "\n",
       "                                                  unit  \n",
       "parameter                                               \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(posterior) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mposterior\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(posterior)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>-20.265976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>-20.265976</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(posterior)\n",
       "sim_data       -20.265976\n",
       "total          -20.265976"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>51.895588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>60.092067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DIC</th>\n",
       "      <td>50.742560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PDIC</th>\n",
       "      <td>5.106016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      statistical measures\n",
       "AIC              51.895588\n",
       "BIC              60.092067\n",
       "DIC              50.742560\n",
       "PDIC              5.106016"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "for parameter in ar.optimized_model:\n",
    "    model[parameter.path].value = parameter.value\n",
    "\n",
    "model.fake.spectrum.main.composite.a_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.b_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.F_2.set_uninformative_prior(Log_uniform_prior)\n",
    "model.fake.spectrum.main.composite.mu_2.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.sigma_2.set_uninformative_prior(Log_uniform_prior)\n",
    "\n",
    "bs = BayesianAnalysis(model, data)\n",
    "bs.set_sampler(\"emcee\")\n",
    "bs.sampler.setup(n_iterations=1000, n_burn_in=100, n_walkers=20)\n",
    "samples = bs.sample()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86e45c82",
   "metadata": {},
   "source": [
    "Again, we grab the results from the BayesianAnalysis object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "0201686d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:56.603497Z",
     "iopub.status.busy": "2023-11-04T01:31:56.602888Z",
     "iopub.status.idle": "2023-11-04T01:31:56.607315Z",
     "shell.execute_reply": "2023-11-04T01:31:56.606708Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2 = bs.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d3940e4",
   "metadata": {},
   "source": [
    "We can write and read the results to/from a file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "40624b49",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:56.610225Z",
     "iopub.status.busy": "2023-11-04T01:31:56.609778Z",
     "iopub.status.idle": "2023-11-04T01:31:56.685842Z",
     "shell.execute_reply": "2023-11-04T01:31:56.685185Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar2.write_to(\"test_bayes.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "279977a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:56.689100Z",
     "iopub.status.busy": "2023-11-04T01:31:56.688457Z",
     "iopub.status.idle": "2023-11-04T01:31:56.749987Z",
     "shell.execute_reply": "2023-11-04T01:31:56.749320Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2_reloaded = load_analysis_results(\"test_bayes.fits\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5fc66c9e",
   "metadata": {},
   "source": [
    "The AR holds the posterior samples from the analysis. We can see the saved and live reults are the same:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "accb216a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:56.754689Z",
     "iopub.status.busy": "2023-11-04T01:31:56.754211Z",
     "iopub.status.idle": "2023-11-04T01:31:56.795692Z",
     "shell.execute_reply": "2023-11-04T01:31:56.795015Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.allclose(ar2_reloaded.samples, ar2.samples)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6f155b8",
   "metadata": {},
   "source": [
    "**NOTE:** *MLE AR's store samples as well. These are the samples from the covariance matrix*\n",
    "\n",
    "We can examine the marginal distributions of the parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bec4d0d1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:56.798763Z",
     "iopub.status.busy": "2023-11-04T01:31:56.798316Z",
     "iopub.status.idle": "2023-11-04T01:31:58.580860Z",
     "shell.execute_reply": "2023-11-04T01:31:58.580197Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1180x1180 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = ar2.corner_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae65f6bb",
   "metadata": {},
   "source": [
    "We can return pandas DataFrames with equal tail or HPD results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "77479b9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:58.585060Z",
     "iopub.status.busy": "2023-11-04T01:31:58.584435Z",
     "iopub.status.idle": "2023-11-04T01:31:58.609630Z",
     "shell.execute_reply": "2023-11-04T01:31:58.608549Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.982970</td>\n",
       "      <td>-0.121724</td>\n",
       "      <td>0.106093</td>\n",
       "      <td>0.113908</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.004080</td>\n",
       "      <td>-0.003829</td>\n",
       "      <td>0.003897</td>\n",
       "      <td>0.003863</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>36.928499</td>\n",
       "      <td>-4.732472</td>\n",
       "      <td>3.345327</td>\n",
       "      <td>4.038900</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.917604</td>\n",
       "      <td>-0.093446</td>\n",
       "      <td>0.112540</td>\n",
       "      <td>0.102993</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.958899</td>\n",
       "      <td>-0.069551</td>\n",
       "      <td>0.083276</td>\n",
       "      <td>0.076414</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.982970       -0.121724   \n",
       "fake.spectrum.main.composite.b_1       0.004080       -0.003829   \n",
       "fake.spectrum.main.composite.F_2      36.928499       -4.732472   \n",
       "fake.spectrum.main.composite.mu_2     24.917604       -0.093446   \n",
       "fake.spectrum.main.composite.sigma_2   0.958899       -0.069551   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.106093  0.113908   \n",
       "fake.spectrum.main.composite.b_1            0.003897  0.003863   \n",
       "fake.spectrum.main.composite.F_2            3.345327  4.038900   \n",
       "fake.spectrum.main.composite.mu_2           0.112540  0.102993   \n",
       "fake.spectrum.main.composite.sigma_2        0.083276  0.076414   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"equal tail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "52c6ed3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:58.613096Z",
     "iopub.status.busy": "2023-11-04T01:31:58.612402Z",
     "iopub.status.idle": "2023-11-04T01:31:58.632800Z",
     "shell.execute_reply": "2023-11-04T01:31:58.632245Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.982970</td>\n",
       "      <td>-0.113397</td>\n",
       "      <td>0.113429</td>\n",
       "      <td>0.113413</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.004080</td>\n",
       "      <td>-0.004158</td>\n",
       "      <td>0.003494</td>\n",
       "      <td>0.003826</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>36.928499</td>\n",
       "      <td>-4.419329</td>\n",
       "      <td>3.597238</td>\n",
       "      <td>4.008284</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.917604</td>\n",
       "      <td>-0.097954</td>\n",
       "      <td>0.107814</td>\n",
       "      <td>0.102884</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.958899</td>\n",
       "      <td>-0.075974</td>\n",
       "      <td>0.076053</td>\n",
       "      <td>0.076013</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.982970       -0.113397   \n",
       "fake.spectrum.main.composite.b_1       0.004080       -0.004158   \n",
       "fake.spectrum.main.composite.F_2      36.928499       -4.419329   \n",
       "fake.spectrum.main.composite.mu_2     24.917604       -0.097954   \n",
       "fake.spectrum.main.composite.sigma_2   0.958899       -0.075974   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.113429  0.113413   \n",
       "fake.spectrum.main.composite.b_1            0.003494  0.003826   \n",
       "fake.spectrum.main.composite.F_2            3.597238  4.008284   \n",
       "fake.spectrum.main.composite.mu_2           0.107814  0.102884   \n",
       "fake.spectrum.main.composite.sigma_2        0.076053  0.076013   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbb8a72c",
   "metadata": {},
   "source": [
    "Error propagation operates the same way. Internally, the process is the same as the MLE results, however, the samples are those of the posterior rather than the (assumed) covariance matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "96f8a76f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:58.635700Z",
     "iopub.status.busy": "2023-11-04T01:31:58.635018Z",
     "iopub.status.idle": "2023-11-04T01:31:58.645395Z",
     "shell.execute_reply": "2023-11-04T01:31:58.644855Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: (4 +/- 4) x 10^-3, hpd: (4 +/- 4) x 10^-3\n",
      "equal-tail: 1.98 -0.12 +0.11, hpd: 1.98 -0.11 +0.12\n",
      "equal-tail: 1.98 +/- 0.11, hpd: 1.98 +/- 0.11\n"
     ]
    }
   ],
   "source": [
    "p1 = ar2.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar2.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "res = p1 + p2\n",
    "\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6474ae12",
   "metadata": {},
   "source": [
    "To demonstrate how the two objects (MLE and Bayes) are the same, we see that our plotting function written for the MLE result works on our Bayesian results seamlessly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "50ea718e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-04T01:31:58.648061Z",
     "iopub.status.busy": "2023-11-04T01:31:58.647627Z",
     "iopub.status.idle": "2023-11-04T01:32:03.563030Z",
     "shell.execute_reply": "2023-11-04T01:32:03.562285Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 2.00 +/- 0.11, hpd: 2.00 -0.10 +0.11\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f88f35f4a0b44654af5edb304435e0e2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar2, model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc2d854f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "02ce6b4f1b1b44bbb6d9d9a65bbf339a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "02dcc616493b4e91b4037cbd56906546": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7783abb1aed7482d9d7dd4ecf34c5061",
        "IPY_MODEL_a8fd953f665746b8a1e7299fe304365a",
        "IPY_MODEL_74122715dede47c1b7ee30f688370fe8"
       ],
       "layout": "IPY_MODEL_7d60f0887c6246738346c6e405615ab0",
       "tabbable": null,
       "tooltip": null
      }
     },
     "09a2e3b1b9ba43abae21d8f60fb875ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0c7d0bc6557449c582beaf8916521696": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0d67cf72a5094393b514e6b91056c174": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1455d073e772422fb11c8dc6a37115e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0c7d0bc6557449c582beaf8916521696",
       "max": 1000.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d6214848fbb14c7b9f11278721d73cee",
       "tabbable": null,
       "tooltip": null,
       "value": 1000.0
      }
     },
     "1c50b3a7c47e439b8ce135b46fa8cd94": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1d00f334fe9e462b81d388687427e9f9",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8e7b1496131642729c9af08e0c7e0057",
       "tabbable": null,
       "tooltip": null,
       "value": 98.0
      }
     },
     "1d00f334fe9e462b81d388687427e9f9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1fe1ebc551634731b63a99bf74f04e9c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "25441b6f1548420cac481c273e5faf0c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "287992296d734a01bbbdbc16ef5d84c4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "28d4ea68bef447cc9e63ec8981ba86ab": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2f17fe7ad9224e9680b3bad1cf204054": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bf055cd31e364adc9e29fc9a36ed6515",
       "placeholder": "​",
       "style": "IPY_MODEL_880f8745cd4d443398ebb65ce86f7eb7",
       "tabbable": null,
       "tooltip": null,
       "value": " 98/100 [00:04&lt;00:00, 21.39it/s]"
      }
     },
     "2f370d34a2e047de841d80ff68403394": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "322672051c904acdb6213104a48f4f1b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e3b340b870e24f1d82a3ae834a00eb14",
       "placeholder": "​",
       "style": "IPY_MODEL_09a2e3b1b9ba43abae21d8f60fb875ee",
       "tabbable": null,
       "tooltip": null,
       "value": "processing MLE analyses: 100%"
      }
     },
     "3331e7a9c6564d398658271f7e2e40dc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "34c40106c6b94e1086c73367a7caf65c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d923b7740e694560b01583111af8937f",
       "placeholder": "​",
       "style": "IPY_MODEL_c7650cb662e147abb4b2423fca7d0423",
       "tabbable": null,
       "tooltip": null,
       "value": " 1000/1000 [00:04&lt;00:00, 234.76it/s]"
      }
     },
     "3832fc513b0149259f76b268fb01932d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "38e032161f524eb692ccc299a537ce4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4feaa74625d249d59a4581bfb2d567e9",
        "IPY_MODEL_1455d073e772422fb11c8dc6a37115e4",
        "IPY_MODEL_34c40106c6b94e1086c73367a7caf65c"
       ],
       "layout": "IPY_MODEL_25441b6f1548420cac481c273e5faf0c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "420f4b4b625b492fab47d35b7a0d64a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9d8785cc62114cdca1afc204314c7bda",
       "placeholder": "​",
       "style": "IPY_MODEL_28d4ea68bef447cc9e63ec8981ba86ab",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:04&lt;00:00, 21.47it/s]"
      }
     },
     "4d361c85d9554dc3a01a99b1adb55f77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0d67cf72a5094393b514e6b91056c174",
       "placeholder": "​",
       "style": "IPY_MODEL_9e5bab4f6b314187b7c8d13a84e571bb",
       "tabbable": null,
       "tooltip": null,
       "value": " 1/1 [00:03&lt;00:00,  3.10s/it]"
      }
     },
     "4da2226c43ce4b78a9e7d6d5eca991a8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4feaa74625d249d59a4581bfb2d567e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4da2226c43ce4b78a9e7d6d5eca991a8",
       "placeholder": "​",
       "style": "IPY_MODEL_1fe1ebc551634731b63a99bf74f04e9c",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "5ab226c300fa4fd2812404fe173ce082": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d30f150dd7c54d6ea3a572fb786de1db",
       "placeholder": "​",
       "style": "IPY_MODEL_8d5f3a642b1546bfb6e20910fee4e55e",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors: 100%"
      }
     },
     "5acb884f4f2144d4bd00b1a6952a65f2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5dfa792855f14284b09581df8037b65f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5ed4a97589fc491d9ac75f74b5c8bb1b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "685f4880ac1443cd9e609b0a078a3409": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6bd178ca53d54d2da8d833c8d27ed019": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d2f36f86424e4358bfc803afbb029dee",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_db9158eddfa74c67935ec7840746a1a9",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "704176f078a6482e96bfad3b3ccdfa02": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_5ab226c300fa4fd2812404fe173ce082",
        "IPY_MODEL_af3f34678b354f5eb8f90760e92e19d5",
        "IPY_MODEL_420f4b4b625b492fab47d35b7a0d64a1"
       ],
       "layout": "IPY_MODEL_fd6a05e0b0c84e41a04d2a5d870d444b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "74122715dede47c1b7ee30f688370fe8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5ed4a97589fc491d9ac75f74b5c8bb1b",
       "placeholder": "​",
       "style": "IPY_MODEL_b87cc10a195e432a942d158d7497e7d9",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:00&lt;00:00, 239.66it/s]"
      }
     },
     "7783abb1aed7482d9d7dd4ecf34c5061": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_287992296d734a01bbbdbc16ef5d84c4",
       "placeholder": "​",
       "style": "IPY_MODEL_5acb884f4f2144d4bd00b1a6952a65f2",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "7d60f0887c6246738346c6e405615ab0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "880f8745cd4d443398ebb65ce86f7eb7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8c81ccbac5d64f0894e5bd453f962237": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8d5f3a642b1546bfb6e20910fee4e55e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8e7b1496131642729c9af08e0c7e0057": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "9cb30d944aab47b1b3a9469c60417378": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3331e7a9c6564d398658271f7e2e40dc",
       "placeholder": "​",
       "style": "IPY_MODEL_02ce6b4f1b1b44bbb6d9d9a65bbf339a",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors:  98%"
      }
     },
     "9d8785cc62114cdca1afc204314c7bda": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9e5bab4f6b314187b7c8d13a84e571bb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a8fd953f665746b8a1e7299fe304365a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5dfa792855f14284b09581df8037b65f",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8c81ccbac5d64f0894e5bd453f962237",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "af3f34678b354f5eb8f90760e92e19d5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3832fc513b0149259f76b268fb01932d",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2f370d34a2e047de841d80ff68403394",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "b87cc10a195e432a942d158d7497e7d9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bf055cd31e364adc9e29fc9a36ed6515": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c7650cb662e147abb4b2423fca7d0423": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d2f36f86424e4358bfc803afbb029dee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d30f150dd7c54d6ea3a572fb786de1db": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d6214848fbb14c7b9f11278721d73cee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d923b7740e694560b01583111af8937f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "db9158eddfa74c67935ec7840746a1a9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#440154",
       "description_width": ""
      }
     },
     "e3b340b870e24f1d82a3ae834a00eb14": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f4c3131538f74fa883bb920863f49533": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_322672051c904acdb6213104a48f4f1b",
        "IPY_MODEL_6bd178ca53d54d2da8d833c8d27ed019",
        "IPY_MODEL_4d361c85d9554dc3a01a99b1adb55f77"
       ],
       "layout": "IPY_MODEL_fcb6198c6d2045cd9f642ce2821de81e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f88f35f4a0b44654af5edb304435e0e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9cb30d944aab47b1b3a9469c60417378",
        "IPY_MODEL_1c50b3a7c47e439b8ce135b46fa8cd94",
        "IPY_MODEL_2f17fe7ad9224e9680b3bad1cf204054"
       ],
       "layout": "IPY_MODEL_685f4880ac1443cd9e609b0a078a3409",
       "tabbable": null,
       "tooltip": null
      }
     },
     "fcb6198c6d2045cd9f642ce2821de81e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "fd6a05e0b0c84e41a04d2a5d870d444b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
