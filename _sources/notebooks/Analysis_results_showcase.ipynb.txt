{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0a415f79",
   "metadata": {},
   "source": [
    "# Analysis Results\n",
    "\n",
    "3ML stores the results of a fit in a container we call an \"Analysis Result\" (AR). The structure of this object is designed to be useable in a *live* sense within an *active* analysis (python script, ipython interactive shell, jupyter notebook) as well as storable as a FITS file for saving results for later.\n",
    "\n",
    "The structure is nearly the same between MLE and Bayesian analyses in order to make a seamless functionality between all analyses.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2833d506",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:38.075124Z",
     "iopub.status.busy": "2025-02-05T17:01:38.074548Z",
     "iopub.status.idle": "2025-02-05T17:01:43.984932Z",
     "shell.execute_reply": "2025-02-05T17:01:43.984190Z"
    }
   },
   "outputs": [],
   "source": [
    "%%capture\n",
    "import numpy as np\n",
    "\n",
    "np.seterr(all=\"ignore\")\n",
    "from threeML import *\n",
    "from threeML.analysis_results import *\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3c8b0a17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:43.987773Z",
     "iopub.status.busy": "2025-02-05T17:01:43.987211Z",
     "iopub.status.idle": "2025-02-05T17:01:44.035244Z",
     "shell.execute_reply": "2025-02-05T17:01:44.034652Z"
    }
   },
   "outputs": [],
   "source": [
    "silence_logs()\n",
    "from tqdm.auto import tqdm\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "%matplotlib inline\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "set_threeML_style()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc3d744c",
   "metadata": {},
   "source": [
    "Let's take a look at what we can do with an AR. First, we will simulate some data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "505f271e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:44.037370Z",
     "iopub.status.busy": "2025-02-05T17:01:44.037157Z",
     "iopub.status.idle": "2025-02-05T17:01:46.034014Z",
     "shell.execute_reply": "2025-02-05T17:01:46.033263Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gen_function = Line(a=2, b=0) + Gaussian(F=30.0, mu=25.0, sigma=1)\n",
    "\n",
    "# Generate a dataset using the line and a gaussian.\n",
    "# constant 20% error\n",
    "\n",
    "x = np.linspace(0, 50, 50)\n",
    "\n",
    "xy = XYLike.from_function(\n",
    "    \"sim_data\", function=gen_function, x=x, yerr=0.2 * gen_function(x)\n",
    ")\n",
    "\n",
    "fig = xy.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b29ba5e4",
   "metadata": {},
   "source": [
    "## MLE Results\n",
    "\n",
    "\n",
    "First we will demonstrate how AR's work for an MLE analysis on our synthetic data. As we will see, most of the functionality exists in the Bayesian AR's as well.\n",
    "\n",
    "Let's do a simple likelihood maximization of our data and model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0ee4edcf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:46.036260Z",
     "iopub.status.busy": "2025-02-05T17:01:46.036033Z",
     "iopub.status.idle": "2025-02-05T17:01:47.063550Z",
     "shell.execute_reply": "2025-02-05T17:01:47.062968Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.499 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.01 +/- 0.09</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.95 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.499 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2           1.01 +/- 0.09               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140512236107520\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.01</td><td>-0.13</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>0.01</td><td>1.00</td><td>-0.03</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.13</td><td>-0.03</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.01 -0.13\n",
       " 0.02 -0.02  0.01  1.00 -0.03\n",
       "-0.08  0.00 -0.13 -0.03  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.081895\n",
       "total            31.081895"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.527427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.723905</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.527427\n",
       "BIC             81.723905"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fitfun = Line() + Gaussian()\n",
    "\n",
    "fitfun.b_1.bounds = (-10, 10.0)\n",
    "fitfun.a_1.bounds = (-100, 100.0)\n",
    "fitfun.F_2 = 25.0\n",
    "fitfun.F_2.bounds = (1e-3, 200.0)\n",
    "fitfun.mu_2 = 25.0\n",
    "fitfun.mu_2.bounds = (0.0, 100.0)\n",
    "fitfun.sigma_2.bounds = (1e-3, 10.0)\n",
    "\n",
    "model = Model(PointSource(\"fake\", 0.0, 0.0, fitfun))\n",
    "\n",
    "data = DataList(xy)\n",
    "\n",
    "jl = JointLikelihood(model, DataList(xy))\n",
    "_ = jl.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d9f6bf6",
   "metadata": {},
   "source": [
    "We can get our errors as always, but the results cannot be propagated (error propagation assumes Gaussian errors, i.e., symmetric errors)\n",
    "In this case though errors are pretty symmetric, so we are likely in the case\n",
    "where the MLE is actually normally distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f4c27464",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.065781Z",
     "iopub.status.busy": "2025-02-05T17:01:47.065562Z",
     "iopub.status.idle": "2025-02-05T17:01:47.135705Z",
     "shell.execute_reply": "2025-02-05T17:01:47.135101Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.499 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.01 +/- 0.09</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.95 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.499 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2           1.01 +/- 0.09               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.946398</td>\n",
       "      <td>-0.113402</td>\n",
       "      <td>0.113389</td>\n",
       "      <td>0.113395</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.003966</td>\n",
       "      <td>-0.003844</td>\n",
       "      <td>0.003844</td>\n",
       "      <td>0.003844</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>31.066845</td>\n",
       "      <td>-3.981024</td>\n",
       "      <td>3.984958</td>\n",
       "      <td>3.982991</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.994917</td>\n",
       "      <td>-0.116531</td>\n",
       "      <td>0.116485</td>\n",
       "      <td>0.116508</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.007878</td>\n",
       "      <td>-0.085585</td>\n",
       "      <td>0.089733</td>\n",
       "      <td>0.087659</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.946398       -0.113402   \n",
       "fake.spectrum.main.composite.b_1       0.003966       -0.003844   \n",
       "fake.spectrum.main.composite.F_2      31.066845       -3.981024   \n",
       "fake.spectrum.main.composite.mu_2     24.994917       -0.116531   \n",
       "fake.spectrum.main.composite.sigma_2   1.007878       -0.085585   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.113389  0.113395   \n",
       "fake.spectrum.main.composite.b_1            0.003844  0.003844   \n",
       "fake.spectrum.main.composite.F_2            3.984958  3.982991   \n",
       "fake.spectrum.main.composite.mu_2           0.116485  0.116508   \n",
       "fake.spectrum.main.composite.sigma_2        0.089733  0.087659   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jl.get_errors()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40691ab8",
   "metadata": {},
   "source": [
    "We need to get the AnalysisResults object that is created after a fit is performed. The AR object is a member of the JointLikelihood object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9d488ee3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.137730Z",
     "iopub.status.busy": "2025-02-05T17:01:47.137527Z",
     "iopub.status.idle": "2025-02-05T17:01:47.140647Z",
     "shell.execute_reply": "2025-02-05T17:01:47.140106Z"
    }
   },
   "outputs": [],
   "source": [
    "ar = jl.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcd06d21",
   "metadata": {},
   "source": [
    "We can display the results of the analysis. Note, when a fit is performed, the post display is actaully from the internal AR."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6ece09f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.142449Z",
     "iopub.status.busy": "2025-02-05T17:01:47.142259Z",
     "iopub.status.idle": "2025-02-05T17:01:47.174887Z",
     "shell.execute_reply": "2025-02-05T17:01:47.174207Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.499 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.01 +/- 0.09</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.95 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.499 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2           1.01 +/- 0.09               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140512187714768\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.01</td><td>-0.13</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>0.01</td><td>1.00</td><td>-0.03</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.13</td><td>-0.03</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.01 -0.13\n",
       " 0.02 -0.02  0.01  1.00 -0.03\n",
       "-0.08  0.00 -0.13 -0.03  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.081895\n",
       "total            31.081895"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.527427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.723905</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.527427\n",
       "BIC             81.723905"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53fb763f",
   "metadata": {},
   "source": [
    "By default, the equal tail intervals are displayed. We can instead display highest posterior densities (equal in the MLE case)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b3f181ce",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.177151Z",
     "iopub.status.busy": "2025-02-05T17:01:47.176743Z",
     "iopub.status.idle": "2025-02-05T17:01:47.208843Z",
     "shell.execute_reply": "2025-02-05T17:01:47.208275Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.499 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.01 +/- 0.09</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.95 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.499 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2           1.01 +/- 0.09               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140512178208432\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.01</td><td>-0.13</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>0.01</td><td>1.00</td><td>-0.03</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.13</td><td>-0.03</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.01 -0.13\n",
       " 0.02 -0.02  0.01  1.00 -0.03\n",
       "-0.08  0.00 -0.13 -0.03  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.081895\n",
       "total            31.081895"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.527427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.723905</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.527427\n",
       "BIC             81.723905"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ar.display(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c5c35a5",
   "metadata": {},
   "source": [
    "The AR stores several properties from the analysis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "310487d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.210997Z",
     "iopub.status.busy": "2025-02-05T17:01:47.210558Z",
     "iopub.status.idle": "2025-02-05T17:01:47.214791Z",
     "shell.execute_reply": "2025-02-05T17:01:47.214249Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'MLE'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.analysis_type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "68121913",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.216776Z",
     "iopub.status.busy": "2025-02-05T17:01:47.216390Z",
     "iopub.status.idle": "2025-02-05T17:01:47.220969Z",
     "shell.execute_reply": "2025-02-05T17:01:47.220307Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.28585299e-02, -3.69442653e-04, -1.98055867e-02,\n",
       "         2.53215373e-04, -7.51124349e-04],\n",
       "       [-3.69442653e-04,  1.47765015e-05, -1.69399875e-06,\n",
       "        -8.81443521e-06,  2.62409034e-07],\n",
       "       [-1.98055867e-02, -1.69399875e-06,  1.58672440e+01,\n",
       "         4.57474060e-03, -4.58855315e-02],\n",
       "       [ 2.53215373e-04, -8.81443521e-06,  4.57474060e-03,\n",
       "         1.33569113e-02, -3.07781970e-04],\n",
       "       [-7.51124349e-04,  2.62409034e-07, -4.58855315e-02,\n",
       "        -3.07781970e-04,  7.59265921e-03]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.covariance_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "500c45d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:47.222758Z",
     "iopub.status.busy": "2025-02-05T17:01:47.222560Z",
     "iopub.status.idle": "2025-02-05T17:01:51.906488Z",
     "shell.execute_reply": "2025-02-05T17:01:51.905783Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7f49c294c58549589e5d721a6de47ac4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "processing MLE analyses:   0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>flux</th>\n",
       "      <th>low bound</th>\n",
       "      <th>hi bound</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake: total</th>\n",
       "      <td>1.897769195266522e-05 erg / (s cm2)</td>\n",
       "      <td>1.7634030271587606e-05 erg / (s cm2)</td>\n",
       "      <td>2.0253172013147928e-05 erg / (s cm2)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            flux  \\\n",
       "fake: total  1.897769195266522e-05 erg / (s cm2)   \n",
       "\n",
       "                                        low bound  \\\n",
       "fake: total  1.7634030271587606e-05 erg / (s cm2)   \n",
       "\n",
       "                                         hi bound  \n",
       "fake: total  2.0253172013147928e-05 erg / (s cm2)  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.get_point_source_flux(1 * u.keV, 0.1 * u.MeV)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d378998f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:51.908656Z",
     "iopub.status.busy": "2025-02-05T17:01:51.908152Z",
     "iopub.status.idle": "2025-02-05T17:01:51.927111Z",
     "shell.execute_reply": "2025-02-05T17:01:51.926446Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "Model summary:<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>N</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Point sources</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Extended sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Particle sources</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Free parameters (5):<br><br><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min_value</th>\n",
       "      <th>max_value</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.946398</td>\n",
       "      <td>-100.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV-1 s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.003966</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>s-1 cm-2 keV-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>31.066845</td>\n",
       "      <td>0.001</td>\n",
       "      <td>200.0</td>\n",
       "      <td>s-1 cm-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.994917</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.007878</td>\n",
       "      <td>0.001</td>\n",
       "      <td>10.0</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div><br><br>Fixed parameters (2):<br>(abridged. Use complete=True to see all fixed parameters)<br><br><br>Properties (0):<br><br>(none)<br><br><br>Linked parameters (0):<br><br>(none)<br><br>Independent variables:<br><br>(none)<br><br>Linked functions (0):<br><br>(none)<br>"
      ],
      "text/plain": [
       "Model summary:\n",
       "==============\n",
       "\n",
       "                  N\n",
       "Point sources     1\n",
       "Extended sources  0\n",
       "Particle sources  0\n",
       "\n",
       "Free parameters (5):\n",
       "--------------------\n",
       "\n",
       "                                          value min_value max_value  \\\n",
       "fake.spectrum.main.composite.a_1       1.946398    -100.0     100.0   \n",
       "fake.spectrum.main.composite.b_1       0.003966     -10.0      10.0   \n",
       "fake.spectrum.main.composite.F_2      31.066845     0.001     200.0   \n",
       "fake.spectrum.main.composite.mu_2     24.994917       0.0     100.0   \n",
       "fake.spectrum.main.composite.sigma_2   1.007878     0.001      10.0   \n",
       "\n",
       "                                                unit  \n",
       "fake.spectrum.main.composite.a_1      keV-1 s-1 cm-2  \n",
       "fake.spectrum.main.composite.b_1      s-1 cm-2 keV-2  \n",
       "fake.spectrum.main.composite.F_2            s-1 cm-2  \n",
       "fake.spectrum.main.composite.mu_2                keV  \n",
       "fake.spectrum.main.composite.sigma_2             keV  \n",
       "\n",
       "Fixed parameters (2):\n",
       "(abridged. Use complete=True to see all fixed parameters)\n",
       "\n",
       "\n",
       "Properties (0):\n",
       "--------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "\n",
       "Linked parameters (0):\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Independent variables:\n",
       "----------------------\n",
       "\n",
       "(none)\n",
       "\n",
       "Linked functions (0):\n",
       "----------------------\n",
       "\n",
       "(none)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar.optimized_model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7858feb7",
   "metadata": {},
   "source": [
    "## Saving results to disk\n",
    "\n",
    "The beauty of the analysis result is that all of this information can be written to disk and restored at a later time. The statistical parameters, best-fit model, etc. can all be recovered.\n",
    "\n",
    "AR's are stored as a structured FITS file. We write the AR like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "99a4935c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:51.929374Z",
     "iopub.status.busy": "2025-02-05T17:01:51.929005Z",
     "iopub.status.idle": "2025-02-05T17:01:51.981285Z",
     "shell.execute_reply": "2025-02-05T17:01:51.980606Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar.write_to(\"test_mle.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8665e34d",
   "metadata": {},
   "source": [
    "The FITS file can be examines with any normal FITS reader."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f7613299",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:51.983674Z",
     "iopub.status.busy": "2025-02-05T17:01:51.983297Z",
     "iopub.status.idle": "2025-02-05T17:01:51.986510Z",
     "shell.execute_reply": "2025-02-05T17:01:51.985967Z"
    }
   },
   "outputs": [],
   "source": [
    "import astropy.io.fits as fits"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b646d349",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:51.988333Z",
     "iopub.status.busy": "2025-02-05T17:01:51.988136Z",
     "iopub.status.idle": "2025-02-05T17:01:51.993980Z",
     "shell.execute_reply": "2025-02-05T17:01:51.993397Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: test_mle.fits\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU       6   ()      \n",
      "  1  ANALYSIS_RESULTS    1 BinTableHDU     38   5R x 9C   [36A, D, D, D, D, 16A, 5D, D, D]   \n"
     ]
    }
   ],
   "source": [
    "ar_fits = fits.open(\"test_mle.fits\")\n",
    "ar_fits.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae75350e",
   "metadata": {},
   "source": [
    "However, to easily pull the results back into the 3ML framework, we use the ${\\tt load\\_analysis\\_results}$ function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "039e409f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:51.995774Z",
     "iopub.status.busy": "2025-02-05T17:01:51.995579Z",
     "iopub.status.idle": "2025-02-05T17:01:52.060761Z",
     "shell.execute_reply": "2025-02-05T17:01:52.060184Z"
    }
   },
   "outputs": [],
   "source": [
    "ar_reloaded = load_analysis_results(\"test_mle.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2b5578b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.062998Z",
     "iopub.status.busy": "2025-02-05T17:01:52.062770Z",
     "iopub.status.idle": "2025-02-05T17:01:52.069907Z",
     "shell.execute_reply": "2025-02-05T17:01:52.069242Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.081895\n",
       "total            31.081895"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_statistic_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce965f18",
   "metadata": {},
   "source": [
    "You can get a DataFrame with the saved results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c30db1d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.072038Z",
     "iopub.status.busy": "2025-02-05T17:01:52.071671Z",
     "iopub.status.idle": "2025-02-05T17:01:52.090321Z",
     "shell.execute_reply": "2025-02-05T17:01:52.089647Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.946398</td>\n",
       "      <td>-0.114638</td>\n",
       "      <td>0.116915</td>\n",
       "      <td>0.115776</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.003966</td>\n",
       "      <td>-0.003970</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.003893</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>31.066845</td>\n",
       "      <td>-3.808341</td>\n",
       "      <td>3.978895</td>\n",
       "      <td>3.893618</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>24.994917</td>\n",
       "      <td>-0.112150</td>\n",
       "      <td>0.111511</td>\n",
       "      <td>0.111830</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.007878</td>\n",
       "      <td>-0.085550</td>\n",
       "      <td>0.088907</td>\n",
       "      <td>0.087228</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.946398       -0.114638   \n",
       "fake.spectrum.main.composite.b_1       0.003966       -0.003970   \n",
       "fake.spectrum.main.composite.F_2      31.066845       -3.808341   \n",
       "fake.spectrum.main.composite.mu_2     24.994917       -0.112150   \n",
       "fake.spectrum.main.composite.sigma_2   1.007878       -0.085550   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.116915  0.115776   \n",
       "fake.spectrum.main.composite.b_1            0.003815  0.003893   \n",
       "fake.spectrum.main.composite.F_2            3.978895  3.893618   \n",
       "fake.spectrum.main.composite.mu_2           0.111511  0.111830   \n",
       "fake.spectrum.main.composite.sigma_2        0.088907  0.087228   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar_reloaded.get_data_frame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71a3ac4d",
   "metadata": {},
   "source": [
    "## Analysis Result Sets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d959289",
   "metadata": {},
   "source": [
    "When doing time-resolved analysis or analysing a several objects, we can save several AR's is a set. This is achieved with the analysis result set. We can pass an array of AR's to the set and even set up descriptions for the different entries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a1a192b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.092582Z",
     "iopub.status.busy": "2025-02-05T17:01:52.092126Z",
     "iopub.status.idle": "2025-02-05T17:01:52.169326Z",
     "shell.execute_reply": "2025-02-05T17:01:52.168618Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "from threeML.analysis_results import AnalysisResultsSet\n",
    "\n",
    "analysis_set = AnalysisResultsSet([ar, ar_reloaded])\n",
    "\n",
    "# index as time bins\n",
    "analysis_set.set_bins(\"testing\", [-1, 1], [3, 5], unit=\"s\")\n",
    "\n",
    "# write to disk\n",
    "analysis_set.write_to(\"analysis_set_test.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bb62f674",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.171749Z",
     "iopub.status.busy": "2025-02-05T17:01:52.171211Z",
     "iopub.status.idle": "2025-02-05T17:01:52.298305Z",
     "shell.execute_reply": "2025-02-05T17:01:52.297692Z"
    }
   },
   "outputs": [],
   "source": [
    "analysis_set = load_analysis_results(\"analysis_set_test.fits\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8e8a9385",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.300666Z",
     "iopub.status.busy": "2025-02-05T17:01:52.300447Z",
     "iopub.status.idle": "2025-02-05T17:01:52.334184Z",
     "shell.execute_reply": "2025-02-05T17:01:52.333495Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Best fit values:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mBest fit values:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 +/- 0.11</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4 +/- 4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.1 +/- 0.4) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.499 +/- 0.012) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>1.01 +/- 0.09</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      result              unit\n",
       "parameter                                                                     \n",
       "fake.spectrum.main.composite.a_1               1.95 +/- 0.11   1 / (keV s cm2)\n",
       "fake.spectrum.main.composite.b_1           (4 +/- 4) x 10^-3  1 / (s cm2 keV2)\n",
       "fake.spectrum.main.composite.F_2          (3.1 +/- 0.4) x 10       1 / (s cm2)\n",
       "fake.spectrum.main.composite.mu_2     (2.499 +/- 0.012) x 10               keV\n",
       "fake.spectrum.main.composite.sigma_2           1.01 +/- 0.09               keV"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Correlation matrix:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mCorrelation matrix:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><table id=\"table140513388090896\">\n",
       "<tr><td>1.00</td><td>-0.85</td><td>-0.04</td><td>0.02</td><td>-0.08</td></tr>\n",
       "<tr><td>-0.85</td><td>1.00</td><td>-0.00</td><td>-0.02</td><td>0.00</td></tr>\n",
       "<tr><td>-0.04</td><td>-0.00</td><td>1.00</td><td>0.01</td><td>-0.13</td></tr>\n",
       "<tr><td>0.02</td><td>-0.02</td><td>0.01</td><td>1.00</td><td>-0.03</td></tr>\n",
       "<tr><td>-0.08</td><td>0.00</td><td>-0.13</td><td>-0.03</td><td>1.00</td></tr>\n",
       "</table></div>"
      ],
      "text/plain": [
       " 1.00 -0.85 -0.04  0.02 -0.08\n",
       "-0.85  1.00 -0.00 -0.02  0.00\n",
       "-0.04 -0.00  1.00  0.01 -0.13\n",
       " 0.02 -0.02  0.01  1.00 -0.03\n",
       "-0.08  0.00 -0.13 -0.03  1.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(likelihood) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mlikelihood\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(likelihood)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>31.081895</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(likelihood)\n",
       "sim_data         31.081895\n",
       "total            31.081895"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>73.527427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>81.723905</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     statistical measures\n",
       "AIC             73.527427\n",
       "BIC             81.723905"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "analysis_set[0].display()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aebcdafc",
   "metadata": {},
   "source": [
    "## Error propagation\n",
    "In 3ML, we propagate errors for MLE reults via sampling of the covariance matrix *instead* of Taylor exanding around the maximum of the likelihood and computing a jacobain. Thus, we can achieve non-linear error propagation.\n",
    "\n",
    "You can use the results for propagating errors non-linearly for analytical functions:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d2107efb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.336410Z",
     "iopub.status.busy": "2025-02-05T17:01:52.336033Z",
     "iopub.status.idle": "2025-02-05T17:01:52.343700Z",
     "shell.execute_reply": "2025-02-05T17:01:52.343078Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Propagating a+b, with a and b respectively:\n",
      "equal-tail: (4 +/- 4) x 10^-3, hpd: (3.9 -3.4 +4) x 10^-3\n",
      "equal-tail: 1.95 +/- 0.11, hpd: 1.95 -0.10 +0.12\n",
      "\n",
      "This is the result (with errors):\n",
      "equal-tail: 1.95 +/- 0.11, hpd: 1.95 -0.10 +0.12\n",
      "(1.842161435285014, 2.0591239888461197)\n"
     ]
    }
   ],
   "source": [
    "p1 = ar.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(\"Propagating a+b, with a and b respectively:\")\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "print(\"\\nThis is the result (with errors):\")\n",
    "res = p1 + p2\n",
    "print(res)\n",
    "\n",
    "print(res.equal_tail_interval())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c92dce6",
   "metadata": {},
   "source": [
    "The propagation accounts for covariances. For example this\n",
    "has error of zero (of course) since there is perfect covariance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "0167931f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.345865Z",
     "iopub.status.busy": "2025-02-05T17:01:52.345468Z",
     "iopub.status.idle": "2025-02-05T17:01:52.349767Z",
     "shell.execute_reply": "2025-02-05T17:01:52.349242Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is 50 * a/a:\n",
      "equal-tail: (5.0 +/- 0) x 10, hpd: (5.0 +/- 0) x 10\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is 50 * a/a:\")\n",
    "print(50 * p1 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00c95d28",
   "metadata": {},
   "source": [
    "You can use arbitrary (np) functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5467128c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.351815Z",
     "iopub.status.busy": "2025-02-05T17:01:52.351429Z",
     "iopub.status.idle": "2025-02-05T17:01:52.356852Z",
     "shell.execute_reply": "2025-02-05T17:01:52.356297Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "This is arcsinh(b + 5*) / np.log10(b) (why not?)\n",
      "equal-tail: (1.03 -0.06 +0.08) x 10, hpd: (1.03 -0.08 +0.06) x 10\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nThis is arcsinh(b + 5*) / np.log10(b) (why not?)\")\n",
    "print(np.arcsinh(p1 + 5 * p2) / np.log10(p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0362b24e",
   "metadata": {},
   "source": [
    "Errors can become asymmetric. For example, the ratio of two gaussians is\n",
    "asymmetric notoriously:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5b1325ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.358949Z",
     "iopub.status.busy": "2025-02-05T17:01:52.358556Z",
     "iopub.status.idle": "2025-02-05T17:01:52.363129Z",
     "shell.execute_reply": "2025-02-05T17:01:52.362567Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Ratio a/b:\n",
      "equal-tail: (3.6 -2.1 +6) x 10^2, hpd: (3.6 -2.3 +5) x 10^2\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nRatio a/b:\")\n",
    "print(p2 / p1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28c548d2",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "You can always use it with arbitrary functions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "574c7b26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.365106Z",
     "iopub.status.busy": "2025-02-05T17:01:52.364709Z",
     "iopub.status.idle": "2025-02-05T17:01:52.369639Z",
     "shell.execute_reply": "2025-02-05T17:01:52.369122Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Propagating using a custom function:\n",
      "equal-tail: 1.95 +/- 0.11, hpd: 1.95 -0.09 +0.12\n"
     ]
    }
   ],
   "source": [
    "def my_function(x, a, b):\n",
    "    return b * x**a\n",
    "\n",
    "\n",
    "print(\"\\nPropagating using a custom function:\")\n",
    "print(my_function(2.3, p1, p2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28cedf54",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "This is an example of an error propagation to get the plot of the model with its errors\n",
    "(which are propagated without assuming linearity on parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4452f6e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.371552Z",
     "iopub.status.busy": "2025-02-05T17:01:52.371189Z",
     "iopub.status.idle": "2025-02-05T17:01:52.378322Z",
     "shell.execute_reply": "2025-02-05T17:01:52.377755Z"
    }
   },
   "outputs": [],
   "source": [
    "def go(fitfun, ar, model):\n",
    "    fig, ax = plt.subplots()\n",
    "\n",
    "    # Gather the parameter variates\n",
    "\n",
    "    arguments = {}\n",
    "\n",
    "    for par in fitfun.parameters.values():\n",
    "        if par.free:\n",
    "            this_name = par.name\n",
    "\n",
    "            this_variate = ar.get_variates(par.path)\n",
    "\n",
    "            # Do not use more than 1000 values (would make computation too slow for nothing)\n",
    "\n",
    "            if len(this_variate) > 1000:\n",
    "                this_variate = np.random.choice(this_variate, size=1000)\n",
    "\n",
    "            arguments[this_name] = this_variate\n",
    "\n",
    "    # Prepare the error propagator function\n",
    "\n",
    "    pp = ar.propagate(\n",
    "        ar.optimized_model.fake.spectrum.main.shape.evaluate_at, **arguments\n",
    "    )\n",
    "\n",
    "    # You can just use it as:\n",
    "\n",
    "    print(pp(5.0))\n",
    "\n",
    "    # Make the plot\n",
    "\n",
    "    energies = np.linspace(0, 50, 100)\n",
    "\n",
    "    low_curve = np.zeros_like(energies)\n",
    "    middle_curve = np.zeros_like(energies)\n",
    "    hi_curve = np.zeros_like(energies)\n",
    "\n",
    "    free_parameters = model.free_parameters\n",
    "\n",
    "    p = tqdm(total=len(energies), desc=\"Propagating errors\")\n",
    "\n",
    "    with use_astromodels_memoization(False):\n",
    "        for i, e in enumerate(energies):\n",
    "            this_flux = pp(e)\n",
    "\n",
    "            low_bound, hi_bound = this_flux.equal_tail_interval()\n",
    "\n",
    "            low_curve[i], middle_curve[i], hi_curve[i] = (\n",
    "                low_bound,\n",
    "                this_flux.median,\n",
    "                hi_bound,\n",
    "            )\n",
    "\n",
    "            p.update(1)\n",
    "\n",
    "    ax.plot(energies, middle_curve, \"--\", color=\"black\")\n",
    "    ax.fill_between(energies, low_curve, hi_curve, alpha=0.5, color=\"blue\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "72772cca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:52.380263Z",
     "iopub.status.busy": "2025-02-05T17:01:52.379874Z",
     "iopub.status.idle": "2025-02-05T17:01:56.489670Z",
     "shell.execute_reply": "2025-02-05T17:01:56.488967Z"
    },
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 1.96 -0.11 +0.12, hpd: 1.96 +/- 0.11\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c9eb89add4c04613a3e50f04e59ea654",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar, model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1ba5376",
   "metadata": {},
   "source": [
    "## Bayesian Analysis Results\n",
    "Analysis Results work exactly the same under Bayesian analysis.\n",
    "\n",
    "Let's run the analysis first."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a8624247",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:01:56.491730Z",
     "iopub.status.busy": "2025-02-05T17:01:56.491523Z",
     "iopub.status.idle": "2025-02-05T17:02:02.534194Z",
     "shell.execute_reply": "2025-02-05T17:02:02.533607Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ead9d0a55c3e40db9cb20880af15b026",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "deb71f2a1698443db8e4a80e80c7c790",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Maximum a posteriori probability (MAP) point:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1;4;38;5;49mMaximum a posteriori probability \u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mMAP\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m point:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>result</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.95 -0.12 +0.10</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>(4.0 -3.4 +4) x 10^-3</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>(3.04 -0.5 +0.31) x 10</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>(2.501 -0.015 +0.010) x 10</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>(10.0 -0.9 +1.0) x 10^-1</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                          result  \\\n",
       "parameter                                                          \n",
       "fake.spectrum.main.composite.a_1                1.95 -0.12 +0.10   \n",
       "fake.spectrum.main.composite.b_1           (4.0 -3.4 +4) x 10^-3   \n",
       "fake.spectrum.main.composite.F_2          (3.04 -0.5 +0.31) x 10   \n",
       "fake.spectrum.main.composite.mu_2     (2.501 -0.015 +0.010) x 10   \n",
       "fake.spectrum.main.composite.sigma_2    (10.0 -0.9 +1.0) x 10^-1   \n",
       "\n",
       "                                                  unit  \n",
       "parameter                                               \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of -log(posterior) at the minimum:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of -\u001b[0m\u001b[1;4;38;5;49mlog\u001b[0m\u001b[1;4;38;5;49m(\u001b[0m\u001b[1;4;38;5;49mposterior\u001b[0m\u001b[1;4;38;5;49m)\u001b[0m\u001b[1;4;38;5;49m at the minimum:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>-log(posterior)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sim_data</th>\n",
       "      <td>-34.52525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total</th>\n",
       "      <td>-34.52525</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          -log(posterior)\n",
       "sim_data        -34.52525\n",
       "total           -34.52525"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "<span style=\"color: #00ffaf; text-decoration-color: #00ffaf; font-weight: bold; text-decoration: underline\">Values of statistical measures:</span>\n",
       "\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n",
       "\u001b[1;4;38;5;49mValues of statistical measures:\u001b[0m\n",
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>statistical measures</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AIC</th>\n",
       "      <td>80.414137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BIC</th>\n",
       "      <td>88.610615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DIC</th>\n",
       "      <td>79.002091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PDIC</th>\n",
       "      <td>4.951655</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      statistical measures\n",
       "AIC              80.414137\n",
       "BIC              88.610615\n",
       "DIC              79.002091\n",
       "PDIC              4.951655"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "for parameter in ar.optimized_model:\n",
    "    model[parameter.path].value = parameter.value\n",
    "\n",
    "model.fake.spectrum.main.composite.a_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.b_1.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.F_2.set_uninformative_prior(Log_uniform_prior)\n",
    "model.fake.spectrum.main.composite.mu_2.set_uninformative_prior(Uniform_prior)\n",
    "model.fake.spectrum.main.composite.sigma_2.set_uninformative_prior(Log_uniform_prior)\n",
    "\n",
    "bs = BayesianAnalysis(model, data)\n",
    "bs.set_sampler(\"emcee\")\n",
    "bs.sampler.setup(n_iterations=1000, n_burn_in=100, n_walkers=20)\n",
    "samples = bs.sample()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e10dfa0",
   "metadata": {},
   "source": [
    "Again, we grab the results from the BayesianAnalysis object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2e835007",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:02.536468Z",
     "iopub.status.busy": "2025-02-05T17:02:02.536005Z",
     "iopub.status.idle": "2025-02-05T17:02:02.539218Z",
     "shell.execute_reply": "2025-02-05T17:02:02.538571Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2 = bs.results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22365cc4",
   "metadata": {},
   "source": [
    "We can write and read the results to/from a file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c25f8eeb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:02.541352Z",
     "iopub.status.busy": "2025-02-05T17:02:02.540994Z",
     "iopub.status.idle": "2025-02-05T17:02:02.603163Z",
     "shell.execute_reply": "2025-02-05T17:02:02.602460Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: VerifyWarning: Card is too long, comment will be truncated. [astropy.io.fits.card]\n"
     ]
    }
   ],
   "source": [
    "ar2.write_to(\"test_bayes.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e82c7314",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:02.605401Z",
     "iopub.status.busy": "2025-02-05T17:02:02.604934Z",
     "iopub.status.idle": "2025-02-05T17:02:02.657392Z",
     "shell.execute_reply": "2025-02-05T17:02:02.656678Z"
    }
   },
   "outputs": [],
   "source": [
    "ar2_reloaded = load_analysis_results(\"test_bayes.fits\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "850147fa",
   "metadata": {},
   "source": [
    "The AR holds the posterior samples from the analysis. We can see the saved and live reults are the same:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "806e09af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:02.659911Z",
     "iopub.status.busy": "2025-02-05T17:02:02.659508Z",
     "iopub.status.idle": "2025-02-05T17:02:02.713142Z",
     "shell.execute_reply": "2025-02-05T17:02:02.712445Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.allclose(ar2_reloaded.samples, ar2.samples)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "086b4a6d",
   "metadata": {},
   "source": [
    "**NOTE:** *MLE AR's store samples as well. These are the samples from the covariance matrix*\n",
    "\n",
    "We can examine the marginal distributions of the parameters:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0ce47b13",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:02.715345Z",
     "iopub.status.busy": "2025-02-05T17:02:02.714861Z",
     "iopub.status.idle": "2025-02-05T17:02:04.218081Z",
     "shell.execute_reply": "2025-02-05T17:02:04.217166Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABH8AAASOCAYAAABc5YA+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdeXycZb3///d9zz0zmcm+NW3SNG3TNq1AKZwCVlZlV0EFj8pR2ZeeIwgejoKyLwfwiAgVZN9UFDlf4EcPuCC7SAHZyiJ0b5q0zb7PZNb7/v0xzbSh2ZtMksnr+Xj0QWbu+1ruNEHm7XV9LsNxHEcAAAAAAABIS+Z4TwAAAAAAAABjh/AHAAAAAAAgjRH+AAAAAAAApDHCHwAAAAAAgDRG+AMAAAAAAJDGCH8AAAAAAADSGOEPAAAAAABAGiP8AQAAAAAASGOEPwAAAAAAAGmM8AcAAAAAACCNEf4A46SlpUXnnnuulixZomOPPVarVq0a8P7f/e53+trXvqa99tpLv/zlL4d8DQAAAAAwtRH+AGPs0ksv1RNPPLHb+9dcc42Kioq0atUq/ehHP9JFF12ktra2fvuZNm2azj//fB1zzDHDugYAAAAAmNoIf4BxEAgE9Pzzz+v73/++fD6fjjzySC1YsEDPP/98v22OOuooHXnkkcrOzh7WNQAAAADA1Eb4gzEVCAS0YsUKnXXWWTrwwANVVVXV5yqYyTKXDz/8UGeddZb2339/7bfffjrzzDP18ccfD3su1dXV8vv9mj59evK9BQsWaP369cPuCwAAAACAgRD+YEy1trbqjjvu0MaNG1VVVTWp5/LRRx/p3/7t31RbW6vzzz9f3/ve97R582Z95zvf0caNG4fVVzAYVFZWVq/3srKyFAgEhj0vAAAAAAAGYo33BJDepk2bpldffVXFxcX64IMP9PWvf33SzuW2225TRkaGHn30UeXn50uSTjzxRB177LH6xS9+0avQ8nnnnae3335bkhQKhfSnP/1JN9xwgyTp3HPP1SGHHKKurq5e/Xd1dSkzM3NPHhEAAAAAgN0Q/qBPW7du1b333qtVq1Zp+/bt8vl8Ouigg/SjH/1IM2fOHHI/Ho9HxcXFYzjTodvTubz11ls69NBDk8GPlAiUDjzwQL344osKBALJ8Obuu+9O3nPppZfqwAMP1EknnZR8LxAIKBgMqr6+XiUlJZKktWvX6qtf/eqI5wcAAAAAQF8If9CnDz74QO+++66+9KUvafr06dq6dat+//vf69RTT9Uzzzwjn8+XknlEo1F1dnYO6d68vDyZ5tjtZIxEIsrIyNjt/YyMDEWjUa1bt05LliwZUl+ZmZn6whe+oBUrVuiKK67QqlWrtHbtWh155JH9tonFYorH47JtW7FYTOFwWJZlyeVyDXgNAAAAADC1Ef6gT0cccYSOO+64Xu99/vOf1ze/+U395S9/SdkKlXfeeUennnrqkO59/vnnh7UqabjmzJmj9957T/F4PBmqRCIRvf/++5Kk+vr6YfV39dVX65JLLtFBBx2k6dOn6xe/+IXy8vKS188++2wtXbpUy5cvlyTdeeeduv3225PX77rrLt1444066aSTBrwGAAAAAJjaCH/Qp11XuESjUXV1dWnWrFnKycnRP//5z5SFPwsXLtSDDz44pHvHenvZv/3bv+nqq6/WZZddprPPPlu2bevOO+9UY2OjpERtn77cdNNNfb5fUFCge++9t9/x7rvvvl6vL7jgAl1wwQV93jvQNQAAAADA1Eb4gz6FQiHdfffdeuKJJ1RfXy/HcZLXhroNazTk5ubqc5/7XMrGG8gpp5yiuro63X///XryySclSXvvvbfOOuss3XXXXRRrBgAAAABMSIQ/6NN1112nJ554QqeddpqWLFmi7OxsGYahH/zgB72CoLEWiUTU3t4+pHsLCgrGvMbND37wA5155plat26dsrOzVVVVpVtuuUWSNHv27DEdGwAAAACAkSD8QZ966vpceumlyffC4XBKV/1I0rvvvjthav70yM3N1dKlS5OvX3vtNU2fPl1z584dVj8tLS269NJL9eabb6qkpERXX321li1b1u/9v/vd7/S///u/Wrt2rZYvX95rm9dA1wAAAAAAUxvhD/rU1wqa3/zmN4rH4ymdx3jV/Onu7ta2bduUn5+vgoKCfu/74x//qA8++ECXXHLJsE8au+aaa1RUVKRVq1bptdde00UXXaS//OUvvYo+72ratGk6//zz9fTTTw/rGgAAAABgaiP8QZ+OOOIIPfXUU8rKytK8efP03nvv6bXXXus3mBjIb3/7W3V0dKihoUGS9OKLL6qurk6S9N3vflfZ2dn9th3tmj9Dncv777+vU089Veeff35yFc0//vEP3XHHHTr44IOVl5en1atX64knntChhx465NVJPQKBgJ5//nk999xz8vl8OvLII7VgwQI9//zzOvnkk/tsc9RRR0mSXn755WFdAwAAAABMbYQ/6NNll10m0zT1f//3fwqHw9p///314IMP6uyzzx52Xw888IC2bt2afP3ss8/q2WeflSSdeOKJA4Y/o21P5lJSUiKXy6X7779fgUBAM2fO1EUXXaTTTz9dljW8X6Xq6mr5/X5Nnz49+d6CBQu0fv36YT4RAAAAAAADI/xBn3JycnTjjTfu9v4LL7ww7L5G0masDHUuBx10kNasWdPrvVmzZun+++8flXkEg0FlZWX1ei8rK0utra2j0j8AAAAAAD0If4AxcMopp+idd97p89ry5ct17LHHqqurq9f7XV1dHBcPAAAAABh1hD8YkXg8rpaWlgHv8fv9UzbM+P3vfz/g9UAgoGAwqPr6epWUlEiS1q5dq69+9aspmB0AAAAAYCoh/MGIbN++XUceeeSA9+xaLBm9ZWZm6gtf+IJWrFihK664QqtWrdLatWsH/J7GYjHF43HZtq1YLKZwOCzLsuRyuQa8BgAAAACY2gzHcZzxngQmn3A4rLfffnvAe8rLy1VeXp6iGU0+LS0tuuSSS/Tmm29q+vTpuuqqq3qdbHb22Wdr6dKlWr58uSTpl7/8pW6//fZefdx444066aSTBrwGAAAAAJjaCH8AAAAAAADSmDneEwAAAAAAAMDYIfwBAAAAAABIY4Q/KRAKhbRmzRqFQqHxngoAAAAAAJhiOO0rBaqrq3XOOefo3nvvVVVV1XhPZ1L4wx/+oEAgoMzMTH3zm99MyzHH4xkBAAAAAFMP4Q8mpMcee0yNjY0qLi5OWTCS6jHH4xkBAAAAAFMP274AAAAAAADSGOEPAAAAAABAGiP8AQAAAAAASGOEPwAAAAAAAGmM8AcAAAAAACCNEf4AAAAAAACkMcIfAAAAAACANGaN9wSAvtx9992ybVummbp8MtVjjsczAgAAAACmHsIfTEhFRUVpP+Z4PCMAAAAAYOphyQEAAAAAAEAaI/wBAAAAAABIY2z7woS0cuVKdXd3y+fz6cQTT0zLMcfjGQEAAAAAUw/hDyakhx9+WI2NjSouLk5ZMJLqMcfjGQEAAAAAUw/bvgAAAAAAANIY4Q8AAAAAAEAaY9sXMIhYLKbq6uoB76moqJBl8esEAAAAAJh4+LSKtDfU8KY/1dXVqqmpUXl5eZ/Xa2pqJEmVlZUjnyQAAAAAAGOE8Adpb6jhzUDKy8sJdwAAAAAAkxLhD6YEwhsAAAAAwFRFwWcAAAAAAIA0RvgDAAAAAACQxtj2hQlp5syZyszMVH5+ftqOOR7PCAAAAACYegh/MCHddtttaT/meDwjAAAAAGDqYdsXAAAAAABAGiP8AQAAAAAASGOEPwAAAAAAAGmMmj+YkK699lq1t7crNzdXV155ZVqOOR7PCAAAAACYegh/MCGtXr1ajY2NKi4uTtsxx+MZAQAAAABTD9u+AAAAAAAA0hjhDwAAAAAAQBoj/AEAAAAAAEhjhD8AAAAAAABpjPAHAAAAAAAgjRH+AAAAAAAApDHCHwAAAAAAgDRG+AMAAAAAAJDGrPGeANCXL3/5ywoEAsrMzEzJeDU1Nfrc5z6n7u5u+Xw+bdiwode18vLyUR8z1c8IAAAAAJiaCH8wIZ1xxhkpG6uiokKS+g14ysvLk/eMplQ+IwAAAABg6iL8wZRnWZYqKyvHexoAAAAAAIwJav4AAAAAAACkMcIfAAAAAACANMa2L0xIJ598shobG1VcXKzHH388Lcccj2cEAAAAAEw9rPwBAAAAAABIY4Q/AAAAAAAAaYzwBwAAAAAAII0R/gAAAAAAAKQxwh8AAAAAAIA0RvgDAAAAAACQxgh/AAAAAAAA0pg13hMA9lQsFlN1dXW/12tqalReXj6mc6ipqRnwekVFhSyLXzcAAAAAQOqx8geTXnV19YDhS3l5uSoqKsZs/IqKigHDpZqamgHDKQAAAAAAxhJLETAhXX755YpGo3K73UO6v7y8XJWVlSkds4dlWSMae6TjAQAAAAAwHIQ/mJD222+/tB9zPJ4RAAAAADD1sO0LAAAAAAAgjRH+AAAAAAAApDG2fWFCevfdd5P1cFK1PSrVY47HMwIAAAAAph7CH0xI119/vRobG1VcXKzHH388Lcccj2cEAAAAAEw9bPsCAAAAAABIY4Q/AAAAAAAAaYzwBwAAAAAAII0R/gAAAAAAAKQxwh8AAAAAAIA0RvgDAAAAAACQxgh/AAAAAAAA0hjhDwAAAAAAQBoj/AEAAAAAAEhj1nhPAOjL448/nvZjjsczAgAAAACmHlb+AAAAAAAApDHCHwAAAAAAgDRG+AMAAAAAAJDGqPmDCenBBx9UIBBQZmamzjjjjLQcczyeEQAAAAAw9RD+YEJ6+umn1djYqOLiYn33u99VdXV1v/fW1NSovLx8VMdMRRiT6vEAAAAAAFMT274w4VVXV6umpqbf6+Xl5aqoqEjhjAAAAAAAmDxY+YNJoby8XJWVleM9DQAAAAAAJh1W/gAAAAAAAKQxwh8AAAAAAIA0xrYvIAX6qlkUi8WS/4zFYrIsfh0BAAAAAKOPlT/AGKuoqBjwNLJ4PD7gaWYAAAAAAOwJlhoAY8yyrD6LVfes9HG5XKmeEgAAAABgCmHlDwAAAAAAQBpj5Q8mpH333Vft7e3Kzc1N2zF7xmPlDwAAAABgLBmO4zjjPYl0t2bNGp1zzjm69957VVVVNd7TmXQ2bNggSX1unUoH6f58AAAAAIDxxbYvAAAAAACANEb4AwAAAAAAkMYIfwAAAAAAANIYBZ8xIV144YVqbW1Vfn6+vv/976d8zNtuuy1l42VkZOiSSy4Z8/EAAAAAAFMT4Q8mpNraWjU2NioQCKTtmD3j5efnp2Q8AAAAAMDUxLYvAAAAAACANEb4AwAAAAAAkMYIfwAAAAAAANIY4Q8AAAAAAEAaI/wBAAAAAABIY4Q/AAAAAAAAaYzwBwAAAAAAII0R/gAAAAAAAKQxa7wnAPTltNNOU3d3t3w+X9qO2TNeV1dXSsYDAAAAAExNhD+YkE488cTk1xs2bEj5mKkcL1XPBwAAAACYmtj2BQAAAAAAkMZY+YNxF4vFVF1d3e/1mpoalZeXp3BGAAAAAACkD8IfjLvq6urdAp62tjbZti3TNFVeXq6Kiooxn0dTU1NyzKKiopSN19bWpry8vDEfDwAAAAAwNRH+YEIoLy9XZWVl8vXJJ5+sxsZGFRcX6/HHH0/JHM4777yUjtkzXn5+vm655ZYxHw8AAAAAMDVR8wcAAAAAACCNEf4AAAAAAACkMcIfAAAAAACANEb4AwAAAAAAkMYIfwAAAAAAANIY4Q8AAAAAAEAa46h3YAKoqakZ8HpFRYUsi19XAAAAAMDwsfIHGGcul0vl5eX9Xq+pqVF1dXUKZwQAAAAASCcsJQDGmWEYqqysHO9pAAAAAADSFOEPJqRf/OIXisfjcrlcaTvmeDwjAAAAAGDqIfzBhDRr1qy0H3M8nhEAAAAAMPVQ8wcAAAAAACCNEf4AAAAAAACkMbZ9YUL661//qnA4LK/Xq6OPPjotxxyPZwQAAAAATD2EP5iQ7rrrLjU2Nqq4uDhlwUiqxxyPZwQAAAAATD1s+wIAAAAAAEhjhD8AAAAAAABpjPAHAAAAAAAgjRH+AAAAAAAApDHCHwAAAAAAgDRG+AMAAAAAAJDGCH8AAAAAAADSGOEPAAAAAABAGrPGewJAXwoKCnr9Mx3HHI9nBAAAAABMPYQ/mJDuvffetB9zPJ4RAAAAADD1sO0LAAAAAAAgjRH+AAAAAAAApDHCHwAAAAAAgDRGzR9MSD/72c/U2dmp7Oxs/fCHP0zLMcfjGQEAAAAAUw/hD8ZcLBZTdXV1v9drampUXl7e673XX39djY2NKi4uHuvpjduY4/GMAAAAAICph21fGHPV1dWqqanp93p5ebkqKipSOCMAAAAAAKYOVv4gJcrLy1VZWTne0wAAAAAAYMph5Q8AAAAAAEAaI/wBAAAAAABIY4Q/AAAAAAAAaYzwBwAAAAAAII1R8BmYBAY6LU2SKioqZFn8OgMAAAAAdsenRWCCq6ioGPB6TzDEaWoAAAAAgL4Q/mBCOvLII9XZ2ans7Oy0HXOo41mWRbADAAAAABgxwh9MSP/xH/+R9mOOxzMCAAAAAKYeCj4DAAAAAACkMcIfAAAAAACANEb4AwAAAAAAkMao+YMJ6Tvf+Y6amppUVFSk3/72t2k55ng8IwAAAABg6mHlDyak7u5uBYNBdXd3p+2Y4/GMAAAAAICph/AHAAAAAAAgjbHtC3ssFoupurq63+s1NTUqLy9P4YwAAAAAAEAPVv5gj1VXV6umpqbf6+Xl5aqoqEjhjAAAAAAAQA9W/mBUlJeXq7KycrynAQAAAAAAPoWVPwAAAAAAAGmM8AcAAAAAACCNEf4AAAAAAACkMcIfAAAAAACANEbBZ0xIF198scLhsLxeb9qOOR7PCAAAAACYegh/MCF97nOfS/sxx+MZAQAAAABTD9u+AAAAAAAA0hjhDwAAAAAAQBpj2xcmpDVr1igajcrtdquqqiotxxyPZwQAAAAATD2EP5iQfvKTn6ixsVHFxcV6/PHH03LM8XhGAAAAAMDUQ/iDQcViMVVXV/d7vaamRuXl5SmcEQAAAAAAGCpq/mBQ1dXVqqmp6fd6eXm5KioqUjgjAAAAAAAwVKz8wZCUl5ersrJyvKcBAAAAAACGiZU/AAAAAAAAaYzwBwAAAAAAII0R/gAAAAAAAKQxav4AaWCggtySVFFRIcvi1x0AAAAApiI+DQKT3GAnrfUEQxTsBgAAAICpifAHmOQsyyLYAQAAAAD0i/AHE9JvfvMbOY4jwzDSdszxeEYAAAAAwNRD+IMJye/3p/2Y4/GMAAAAAICph9O+AAAAAAAA0hjhDwAAAAAAQBpj2xcmpD/84Q8KBALKzMzUN7/5zbQcczyeEQAAAAAw9RD+YEJ67LHH1NjYqOLi4pQFI6keM5Xj9Rz33p+KigpZFv86AAAAAIB0xKc9IM1VVFQMeL0nGOK4eAAAAABIT4Q/UCwWU3V1db/Xa2pqVF5ensIZYTRZlkWwAwAAAABTGAWfoerq6gG3BZWXlw+6egQAAAAAAExMrPyBpETAw+oQAAAAAADSDyt/AAAAAAAA0hjhDwAAAAAAQBoj/AEAAAAAAEhjhD8AAAAAAABpjPAHE9L8+fO11157af78+Wk75ng8IzAVtbS06Nxzz9WSJUt07LHHatWqVSO6d6BrV1xxhQ455BDtv//+OuGEE/TCCy/06ne//fbr9WfhwoV64IEHRv9hAQAAgD5w2hcmpJtuuintxxyPZwTS1aWXXqoDDzxQJ5100m7XrrnmGhUVFWnVqlV67bXXdNFFF+kvf/mL8vLyhnXvQNdOP/10XXHFFfJ4PHr//fd1xhln6LnnnlN+fr4k6d13302OUV9fr89//vM6+uijx+z7AQAAAOyKlT8AVFNTow0bNvT7JxaLjfcUx8Qvf/lLVVVVqaWlZbyngjESCAT0/PPP6/vf/758Pp+OPPJILViwQM8///yw7h2sn8rKSnk8HkmSYRiKRqOqr6/vc05PP/20lixZovLy8rF7cAAAAGAXrPyZAmKxmKqrq/u9XlNTw4eQKayiomLA6zU1NZISH27Rt0AgoPvvv1+rV6/WBx98oPb2dt144419rkJJhUgkottuu01PPfWUOjo6VFVVpYsuukgHH3zwqLcfyVh33nmnbr31Vs2fP19PP/10r2vvv/++/r//7//TG2+8oa1btyovL0/77ruvLrroIs2ZM2d43whJ1dXV8vv9mj59evK9BQsWaP369cO6dyj9XH311XriiScUDod1+OGHq6qqqs85PfXUU/rOd74z7GcBAAAARoqVP1NAdXV18gN8X8rLywcNAJC+LMtSZWVlv38IBgfX2tqqO+64Qxs3buz3A38qXXrppXrooYd0wgkn6LLLLpPL5dK5556rt956a9TbD3esuro63X333fL7/X1ev++++/Tss89q2bJluuyyy/SNb3xDb731lk466SStXbt26N+EHYLBoLKysnq9l5WVpUAgMKx7h9LP1VdfrXfffVcPPfSQDj74YBmGsdsYn3zyiTZv3qzjjjtu2M8CAAAAjBQrf6aI8vLySbVy49JLL1V7e7tyc3NTVhsn1WOOxzNibEybNk2vvvqqiouL9cEHH+jrX//6uM3l/fff1zPPPKMf/ehHOuussyRJX/3qV/XlL39ZN998sx599NFRaz+SsX76059q3333lW3bam1t3e366aefrptvvjm5hUqSvvjFL+qEE07QPffco5tvvjn5/nnnnae3335bkhQKhfSnP/1JN9xwgyTp3HPP1bnnniu/36+urq5eY3R1dSkzM3O3sQe6d6j9uFwuLVu2TA8//LBmz56tww8/vNf1p556Sp///OeVk5Oz2/gAAADAWGHlDyakdevW6aOPPtK6devSdszxeEb0rbW1VRdeeKH2339/HXTQQbr++usVDoeH3N7j8ai4uHgMZzh0f/7zn+VyufTNb34z+Z7X69XXv/51vfvuu9q+ffuotR/uWP/4xz/0l7/8RT/5yU/6HX///ffvFfxI0uzZszV//nxt3Lix1/t333233nrrLb311lv68pe/rKuuuir5+txzz5WU2NYYDAZ71d9Zu3at5s2bt9vYA907nH6kvrfb2ratp59+Wl/5ylf6fX4AAABgLBD+AJjyLrroIoXDYV188cU67LDD9Jvf/EZXXHFFysaPRqNqaWkZ0h/btgfs6+OPP9bs2bN326K0ePHi5PXRaj+ce+PxuK677jp9/etfH/bWOMdx1NTUlDw5azgyMzP1hS98QStWrFAoFNKLL76otWvX6sgjjxzWvQNd6+zs1P/93/8pEAgoFovpT3/6k9544w0dcMABvfpftWqVYrGYDjvssGE/BwAAALAn2PYFYMqbOXOm7rzzTknSt7/9bWVlZel3v/udzjzzTC1cuHDMx3/nnXd06qmnDune559/XjNnzuz3emNjY5+rkHrea2hoGLD/4bQfzr2PPvqotm3bpoceemjA8fuycuVK1dfX6/vf//6w20qJWjyXXHKJDjroIE2fPl2/+MUvkse8n3322Vq6dKmWL18+6L39Xevq6tJjjz2ma665Ro7jqKKiQj//+c+1aNGiXvN46qmn9KUvfUmWxf/0AgAAILX4L1AAgxqoYLiU2C4zmT/Qfvvb3+71+jvf+Y5+97vf6ZVXXklJ+LNw4UI9+OCDQ7p3sO1loVBot21TUmI7Vs/10Wo/1HtbW1u1YsUK/cd//IcKCgoGHP/TNmzYoGuvvVb77befvva1r/V730B1swoKCnTvvff2ee2+++4b8r39XcvKytJvfvObfsfv8T//8z+D3gMAAACMhcn7aQ1ASkyFo+A//YyzZs2SaZqqra1Nyfi5ubn63Oc+Nyp9ZWRkKBKJ7PZ+Tw2jjIyMUWs/1HtvvfVW5ebmDvt488bGRp133nnKzs7WbbfdJpfLNaz2AAAAABIIf9JAX4VFd1VTU8Nx3RixnqPgB5JuK4P6OqJ7LEUiEbW3tw/p3oKCggFDkOLi4l5FiXs0NjZKSpxMNpDhtB/KvZs3b9Zjjz2mn/zkJ722gYXDYUWjUdXW1iorKyu5tapHZ2enzjnnHHV2duqRRx5RSUnJgPMGAAAA0L/J82ksjQ0W3kgDf3iurq4eMOApLy8fdPUGMFLpsDKourq61+9PdXW1bNsesLbOaHr33XdHrebPwoUL9cYbb6irq6tXIebVq1dL0m51aPak/VDu3bJli2zb1vXXX6/rr79+t/GOPPJInXrqqbrsssuS74XDYS1fvlybN2/Wgw8+2O+JWkPV0tKiSy+9VG+++aZKSkp09dVXa9myZcO+d6BrV1xxhV588UUFg0GVlZXpBz/4gb7whS/06vvee+/Vb3/7W3V0dKiiokK//e1vdyuWDQAAAIwFwp8Uqq2t7TPA6flw3F94U1NTM2C403NtIn+4RvoajZVB4/2z+8gjj+iQQw5Jvv7tb38rSSk7lWk0a/4cd9xxeuCBB/SHP/xBZ511lqTEyqInnnhC++67r2bMmJG8t7u7W9u2bVN+fn6yFs9w2g/lXq/XqzvuuGO3ed56660KBAK67LLLev27LR6P66KLLtJ7772nX/3qV9pvv/2G9H0ZyDXXXKOioiKtWrVKr732mi666CL95S9/2W210WD3DnTt9NNP1xVXXCGPx6P3339fZ5xxhp577rnkCWWPPPKI/va3v+n3v/+9ZsyYoTVr1vRZLwkAAAAYC4Q/KdBT/2L79u393jNjxgzFYrE+r02bNk3bt2/X5s2bBxxjzZo1ezTPiSQajSb/marnSvWY4/GM4yEejysej/f781tfX69YLKaKiopB69GMldraWi1fvlyHHnqo3nvvPa1cuVJf/vKXh1XsuWdFR8/WphdffFF1dXWSpO9+97vKzs7ut+1o1vzZd999ddxxx+mWW25Rc3OzKioq9OSTT2rr1q367//+7173vv/++zr11FN1/vnn64ILLhh2+6HcW1BQoKOOOmq3eT788MOStNu1m266SS+88II+//nPq62tTU899VSv61/5yleG9f0IBAJ6/vnn9dxzz8nn8+nII4/UggUL9Pzzz+vkk08e8r3HHXfcgP3sGmAahqFoNKr6+nrl5+crHo/rzjvv1O9+9zuVlpZKUkoKiQMAAAA9CH9SoOcD4D333DPOM5l82tradM4556T1mOPxjBPRvffeq6qqqnEZ+9Zbb9Vtt92mn//857IsS9/5znf0ox/9aFh9PPDAA9q6dWvy9bPPPqtnn31WknTiiScOGP6Mtv/5n//RrbfeqpUrV6q9vV1VVVW66667dMABB4x6+z0d69M++eQTSYnw7MUXX9zt+nDDn+rqavn9fk2fPj353oIFC7R+/fph3TuUfq6++mo98cQTCofDOvzww5M/z3V1dQqFQvrzn/+shx56SNnZ2TrrrLP0jW98Y1jPAgAAAIyU4TiOM96TSHdtbW168803NWPGjGEv86+urtb111+vyy+/PG3q9vBME994PM94rvxB+nrrrbf0ox/9SC+88ELyvV/84hdqbW3VtddeO+R7TzzxxCH1E4/H9eabb2rt2rU67bTTJEnvvPOOTjnlFJ188sm68sortXnzZp1++um6/fbbtXTp0rF6dAAAACCJlT8pkJeXp2OOOWaP+qioqBi3VRFjhWea+NLteZBeTjnlFL3zzjt9Xlu+fLl+8IMfyO/3q6urq9e1rq4uZWZm7tZmoHuH2o/L5dKyZcv08MMPa/bs2Tr88MOToeb3vvc9ZWRkaOHChfrSl76kl19+mfAHAAAAKUH4AwD9iMfjamlpGfAev9/fZ5CAsff73/9+0HsqKioUDAZVX1+fPC5+7dq1+upXvzqse4fTj9T7FMfZs2fL7XbLMIzk9V2/BgAAAMaaOd4TAICJavv27TrkkEMG/PPAAw+M9zQxgMzMTH3hC1/QihUrFAqF9OKLL2rt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y4957aqrruJ973sfjuPwyCOP8IY3vIGf/exnVFVVTdvune98Jy984Qv55je/yZNPPsmVV17J6aefLs3whRBCiCK3ZpZ6N4zwrZxyyils27aN73znOzzyyCPU19dj2zauG05FaWxs5PLLLycSifDUU0+t5JDFcejohs7L2T/XVMbE6J8e3Cwm+FntZCl3IcTxbMuWLThOWLGplMJ1XTo7O4/Z7tChQ7zkJS/BMAx27drFli1b2LdvX6GHK4QQQohFWrWVPw888AAPPvggvb291NfXc/HFF1NbW4tlWbz3ve/lX/7lX3j66ae55557eNnLXkYikSCTyeA4Dlu3biWRSNDe3r7Sb0Mch5Yb4Cxk/6VWCJkd4SpeqOMr+JkgS7kLsXp897vf5d3vfveMr73lLW/hn//5n+c9xiOPPMJ///d/c99993H48GEqKys59dRTueaaa9i0aVOuhzynp556is9+9rM8/vjj9PT0EI1G2bp1K29605tmnH6VyWS46aab+P73v8/Q0BA7duzgmmuumXXxiYV4//vfz3e/+13S6TQXXHABO3bsOGab1772tdx111387d/+LU888QQdHR2ceuqpSz6nEEIIIQpjVYY/d999N5/4xCdYt24d6XSawcFBvvOd73DllVdywQUX0NjYyDXXXMNnPvMZ9uzZw6c//WmuvfbabOny448/TiqVKvg/7IQolKVOETOHIqhHE6CQnj1CiFXh7W9/O83NzdOe2759+4L2veWWW3jwwQe5+OKL2bFjB93d3XzjG9/g8ssv5/bbb1/wcXKhvb2d0dFRXvayl1FXV0cymeTuu+/mb/7mb/jgBz/IFVdcMW376667jv/93//lda97HRs3buR73/seb33rW7nttts488wzlzSG97///bzvfe/j/vvvZ8+ePTP2RTz//PN55zvfyRe+8AUAPvKRj1BXV7ek8wkhhBCicFZd+NPW1sYtt9zCi170Iq644gqampp4/PHH+e///m++8IUvcODAAf76r/+ak08+mXe+853827/9G7/+9a9pa2vjiiuuoKenhwcffBDXdWf8SZoQa8VSAyBjVEKfYnbdddcxODhIRUVFXnvlFOo8hT7XXOaa9gewYcMGLGvV/W9zzTv//PM5+eSTl7TvVVddxY033pid7gTwohe9iEsvvZQvfelL3Hjjjbka5rwuuOACLrjggmnPXXnllVx++eV89atfnRb+PPLII/zwhz/kne98J29605sAeOlLX8pLXvISbrzxRr797ckK0auvvpoHHngAgFQqxY9//GM++tGPAvDWt76Vt771rdPOaZom55xzDrfddhsbN26cNqaBgQHe+ta38tGPfpQLL7yQp556ije/+c1s3749u8qqEEIIIYrTqvtXbF9fHwMDAzzrWc+iqakJgBNPPJFdu3bR0NDA1772NVzX5Y1vfCPbtm3jpptu4uabb+aPf/wjH//4x4lGo7S0tPDpT3/6mJ8UCrHWFGKZeFFYTz31FN3d3dTW1q6J8xT6XLOZr5/TRDAk0wLXltNPP/2Y5zZu3Mi2bduKoo+NaZqsW7eORx99dNrzP/nJTzBNc1ogFIlEePnLX86nPvUpOjo6WLduHQBf/OIXs9vM1fD5aDM1wT948CDxeJyLL74YgBNOOIHTTz+dP/zhDxL+CCGEEEVu1YU/6XQarTW+7wPhP04mfhL7pje9CdM0+epXv0ptbS2vec1rqKio4Nprr2VoaIi2tjaqqqooLS2lvLx8Jd+GEAUjAZAQ87MsS4KdVWpkZIS+vr5pz1VXVy/5eFprenp62LZt27zbuq7L8PDwgo5bWVmZXZxiLmNjY6RSKUZGRvj5z3/Or371Ky655JJp2zz55JNs3LiR0tLSac+fcsop2dcnwp+FGB4e5he/+AXPe97ziEQi/PSnP+W+++7j2muvnbbdpk2bSCaT/OxnP+P5z38+e/fu5Y9//COvepX8P0YIIYQodqsu/NmxYwfxeJx77rmH8847D8uyCIIACFf8uuqqqxgcHOTOO+/k7LPP5owzzkBrTXl5ufxUShy3JAASYvlkWlhxuuqqq455bvfu3Us+3l133UVnZydvf/vb5932wQcf5HWve92Cjvt///d/C6o4vuGGG7j99tuB8N81F154Iddff/20bWarlJt4rqura0FjmqCU4o477uADH/gAWms2bNjAv/3bv7Fz504A3vzmN3PmmWfytre9jU9/+tPceOON/Mu//AuVlZVcddVVPPvZz17U+YQQQghReKvqX6lBEFBRUcEVV1zBF7/4RbZv386rXvUqDMMgCAK01iiluPLKK/nTn/7ELbfcwqmnnir/GBcCCYCEWA6ZFla8rr/++pwt4LB3714++MEP8oxnPIOXvexl825/wgkn8NWvfnVBx17otMbXv/71XHzxxXR1dfHjH/+YIAhwXXfaNqlUalqfogmRSCT7+kxm66lVWlrK17/+9VnHdMstt2S/Pu+88zjvvPPmfR9CCCGEKC5FnYocOnSIdDrN6Ogo27ZtIxaLAXDOOefw0EMP8fWvf52SkhIuvfRSDMPA931M06SmpoYzzjiDe+65h8HBQWpqalb4nQhRHI7nAGim/hVTtbW10dLSUsARidVEpoUVr1NOOWXJDZ+n6u7u5uqrr6asrIybbroJ0zTn3aeioiLnVS9btmzJftZe+tKX8sY3vpG3ve1t/Nd//Vd29a1oNEomkzlm33Q6nX1dCCGEEGKqog1/7r77bm655Rb6+/vJZDJs3bqVc889lze84Q1s2rSJ17zmNXz+85/ny1/+Mq7rcvnll0/7h9rEPPiJKWFCiNDd7rfn3WYtBkStra1zBjwtLS3zVncIMReZFrZ6DQ8P85a3vIXh4WG+8Y1vUF9fv6D9MpkMg4ODC9q2urp6QYHS0V74whdy/fXXs3//fjZv3gyEVUSdnZ3HbNvd3Q0gS68LIYQQ4hhF+a/Q+++/n0984hO8+MUv5uSTT6asrIzbbruN22+/nYceeohPfvKTPOMZz+Dqq6/m1ltv5aabbqKzs5OXv/zlJBIJ9u7dywMPPEBTUxMlJSUr/XaEEEWipaVFqjdEXsi0sNUrnU7ztre9jQMHDvDVr36VrVu3Lnjfhx56KOc9f442MYVrZGQk+9wJJ5zAfffdx8jIyLSmzw8//DBAtlfPUjz00EO8+tWv5u1vfzt/+7d/u+TjCCGEEKK4FGX484c//IHGxkZe8YpXZP+htGvXLu68806+9a1v8Td/8zd85jOf4YwzziAej/PDH/6Q73znO9x9993E43GUUgwODnLTTTcRj8dX+N0IIXLp0KFDS6qekGldIp8WMi1MKoOKj+/7XHPNNfzpT3/i3//933nGM56xqP1z2fOnt7f3mGnqruvy/e9/n2g0Ou3zdfHFF/OVr3yF22+/nTe96U1AWIX03e9+l1NPPXVRK31NFQQBH/vYx3IyjU4IIYQQxaXo/pUZBAEHDhwgGo1mgx/XdSktLeWKK66gsrKSL33pS/zTP/0TX/jCF9i5cyfNzc385V/+JT/4wQ8YGxujrq6OSy65ZEk/YcuHiTn4c/UbEaKYBCXH9pLIp3vuuYdzzjlnzj4VE9dRR0fHks+TTqeXtQpQMZho/Oq6bl7fS6HOU+hzrRTf9/F9nwMHDsz4emdnJ/fdd9+CpxvNpLm5mQ0bNki/l0W44YYb+PnPf85zn/tcBgYG+P73vz/t9b/8y7+cc/9c9vy5/vrrGRkZ4ayzzqK+vp7u7m7+53/+h3379nHddddNq2Q+9dRTufjii/nUpz5Fb28vGzZs4Hvf+x6HDx/mIx/5yJLHcPvtt3PKKadMqzISQgghxNqgtNZ6pQdxtK997Wt885vf5FOf+hQnnngiEIZChmGQTqf5/ve/z3/8x39w/vnn8573vCfbAHHCxKpfxeLuu+/mwx/+8EoPQ4ii9uUvf5kdO3bM+rpcR0LMb77raC357ne/y7vf/W6+853vLLlS5bWvfS3333//rK8XMoycqGLes2cPAwMDlJSUsGvXLq688kqe//znH7N9Op3m05/+NP/zP//D4OAgO3bs4B//8R+XvBJXf38/r371q7njjjv46Ec/yvr162XalxBCCLGGFGX48/vf/57rr7+eiy++mKuuuorq6mpgMgAaHR3l//2//8cf//hH3v/+93PaaacRBAFKKZRSRRf+DAwMcP/997Nu3boZl2adS2trKx/+8Id573vfu2aa0cp7Kn4r8X7mq1hYznU01Wr6Xq2msYKMN58WOlap/BFLdf3117Nz505e/epXc91110n4I4QQQqwxRTftC+BZz3oWl112GXfeeSfr16/nRS96EfF4PLuce0lJCW9605u49957efjhhznttNMwDCO7fzEFPwCVlZVcdNFFyzrGhg0b1txPc+U9Fb9iej+5uI6mKqb3Np/VNFaQ8ebTahqrKA6vfvWrefDBB2d87W1vexvveMc7eOKJJ3jsscf413/91wKPTgghhBCFUnThz0R1z9VXX01XVxdf/vKXsW2b5z3veZSVlWWDndraWhKJBO3t7Ss8YiGEEEIUE9/36evrm3ObeDx+XKwI+q1vfWvebe6//37279/P+eefD8Dw8DCmadLW1sbHPvaxfA9RCCGEEAVQdOHPRAWPbdv8/d//Pb7v89nPfpbe3l4uvPDC7Go9+/fvJ5PJ0NjYuJLDFUIIIUSR6ejomLFPzlR///d/zz/8wz8UaETF7YorruDFL35x9vFHPvIRmpubeetb37qCoxJCCCFELhVd+DNVXV0d73rXu/j85z/P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ewk/8dSPffHFF7z55pts3boVy7IYPnw45513Huecc07c2NicBQsWMGPGDFJSUggEAnz66acUFxfz8MMP77P/WbZsGc899xxnnXUWU6ZMYdSoUXu9Jp7uTUf44YcfAHsiZVkWl112GcOHD4+tUd1kwYIFzJ49O9r/rl69msWLF/Pb3/6WCRMmJNw9Wr16dbTenXjiiWRlZfHxxx/z3nvvsWbNGq6//nomT54cazP3Kz788EOeffZZfv7zn8e1MN8eH3/8MbNnzyYUChEIBEhNTeWII47gjjvuIC0tLdbmdYjIfTjvvPMYMWJErM3pEv3hPnSEyNiblpaGaZosWrSI7du38+ijj+J2u2NtXofpD+uYRF+3VFdX8/rrr1NeXs7777+PqqqcccYZvSIASfEnzmloaOD999/npz/9KRdffDGDBw8GYPfu3TidThwOR9wsRjvCypUrmTNnDueccw5nnXUW+fn5vPfee7z00kvs2rUr2kATRaVdv349c+bM4cwzz+S0007jgAMO4L333uPDDz/knnvu4cYbb+TUU08lKSkp1qZ2mK+++oonn3ySKVOmcMwxxzBixAhmz57Ne++9x7Bhwzj33HMTbqHRVTZu3MiLL77IlClTuOiii8jLy2v1dX39fSxdupSnn36aM888k6OOOoqkpCTefvtt3n33XdavX89DDz0UV5P3kpISXn/9dU477TQuu+yyaD9mGAa6bg9DkaOfsW73n332GU888QQnnXQS5557LikpKcyZM4fXX3+dwYMHc/TRR8fUvj1ZsmQJM2fOZOrUqUydOpVBgwbx4osv8t1331FeXk52djawd58aqbOLFi1i9OjRnH322QwdOhSwF+Z+v5/MzEzy8/NxuVxxcW/2RaRMEyZMYOPGjRxyyCG8/fbbmKbJFVdckbACUOQen3rqqZx99tkMHjyYjRs38uijj/LXv/6VCRMmJFx/XFhYiNvtbiE4XnXVVYwePZq33nqL//3f/8U0TaZMmRJjS/cPPvzwQ6ZPn86FF17IhRdeSE5OTquvi+exf+XKlfzf//0fU6dOZeLEiaSnp/Pee++xcOFCbrvtNm677TbGjRsXHXPikY8++ojp06dz0UUXccEFF7R5H+K5P+4P96EjLFu2jJkzZ3LWWWdx+umnM2LECObNm8dHH31ETU1NVPyJ5zYD/WMd0x/WLenp6YwZM4aqqirq6+t54403UFWVKVOm9LgAlNgtbz+goaGB9evXc/XVV0cXTE8//TQ//PADgUCArKwsrrvuOg455BBcLleMrd03q1atIikpidNOOy26kB47diy5ubkoikJ5eTlerzdhBK3S0lIMw+DEE09k9OjRAPz85z/nsMMO4/XXX2fWrFmEw2HOPvvshLg/xcXF/PnPf2bSpElceumlDBo0CIDp06dz5ZVX8tlnn3HuuefGdQfak2zZsgVFUZg8eXK0vv7rX/+irKyM5ORkRo4cyTHHHNPn38fy5cvJzc3l/PPPZ8iQIQCMGDGCzz77jNdee40HHniAadOmkZ+fHxeTxF27dlFRUcHxxx8f7cdeffVVtm3bBsDIkSO54oorYm7ntm3bePPNN5k8eTJXXnllVEAbPnw41157LYsXL4478efLL78kLy+Pc845h/z8fAAOPvhgfvjhBzRNIxgM4nK59vpuI3V23bp1DBkyJCr8PPTQQ3z77beEw2EcDgcHHXQQ06ZNIycnJy7qUntEyjRkyBA2b97MlVdeSV5eHs8++yyKovDLX/4y4QSgmpoa3nvvPcaMGcO5557LsGHDABg/fjwXXnghs2fPZuXKlRx++OGxNbSTVFRUUF9fH70fkfp2/PHHk5yczMsvv8ysWbNITk7mhBNOiK2x/ZzPP/+c6dOnc8EFF3DRRReRm5sLwKJFi9i9ezeqqjJs2DAOPfTQuBHpW2Pt2rWkpKRwzjnnRNvJddddx7HHHsucOXN44okn+N3vfseRRx4Zl3OYL774gieffJIzzzyTX/ziF1Hh/tNPP6W0tBQhBPn5+UyaNAlVVeN2MZvo96GjLFmyhNzcXKZOnRode4855hiWLl2Koij4fD40TYv7zZNEX8f0h3VLpH6MGzeOYDDIBRdcwKOPPsprr70GEBWAeqrNx2dNlEQJh8M4nc7owvOuu+7is88+Y+zYsRx++OHU1NRw33338f7778d9MFohBBs2bMCyLEaNGhXtCJcvX05hYSF33HEHV155Jddeey3Lly+PsbUdY9euXYTDYQYOHAhAKBQC7MXszTffzKRJk3jxxRf59ttvgaYg1/HK5s2b2bZtGz/96U+jHWikTJMmTWLz5s2UlJQkXAC1zhIp37Zt20hOTmbcuHEA3H333TzzzDP8/e9/Z968edx9993MmTNnr/f1tl3bt2/H7XZHhR/DMEhLS2Pq1KncdtttVFZW8vjjjxMKhaIxgGJJRUUFuq5z6KGHAnY/9uabb7Jjxw7Wrl3Lq6++ym9/+1uKioqA2AToE0KwatUqysvLmThxYlT4CYfDDB8+nJ/97Gd89913+Hy+mH+fEYLBIGvXriU9PZ38/Pzo91ZSUkJtbS033XQT1113Hb///e+pqqpq9RrNJ6RPPPEEK1eu5Nprr2XGjBmcccYZFBYWcuONN1JWVhadfMQzpmkyePBgfvKTn7B+/XrOPvtsrrvuOj755BPefPPNaB3bsmVLjC3tGLW1tXzzzTccfvjh0YVUhHHjxqEoChUVFTGyrvNEAqKOGjUKRVH4z3/+g2maOByOaHDLww8/nCuuuILs7Gzeeuut6D2T9Dw+n4+VK1cCoOt6VPh58MEHeeihh3juued45plnuPfee3n22WeB3g1E2hWa93uKorTwLPV6vRx77LE88MADuN1uZsyYEQ1oHS/9ONi27tixA7DnXJFF9v33389jjz3G/Pnzefnll5k2bRr33nsvhmHEXaKU/nAfOoppmmzYsAFN0xg2bFh0HF2zZg3FxcXcfPPNXHHFFdx9990UFRXFXZtpTmfXMfFWjv6wbonUn/Hjx/PNN9+QmprKtGnTEELw+uuv88EHHwBEnSS6/XndvoKkV8nMzERVVb788ktKS0vZvn07999/P/fddx8PPvggTz75JMcffzwvvfQS33//PRB/DTOCoigcdthhlJaW8vrrr7N69Wr+9Kc/MX/+fE466SR++9vfcvnll+PxeHjggQeiAlC8lgeIegG8//77ADidzuhAlp2dzTXXXMNhhx3G008/TWlpaVzGYmlOVlYWkyZN4qSTToo+5nQ6AduzpKGhgXA4HNcKek8QKV92djalpaWUl5fzt7/9jXXr1vHoo4/yzjvv8OKLL3LKKafwzjvvMHPmzBbv6227Dj30UAoLC1m7di1gT9qFELhcLn76059y3XXXsXXrVh577DGAmNe7nJwcampqWL16NUuWLGHDhg08/vjjvPTSS7z11lvccccdlJaW8thjj0Wz//X1QB35bo899liOO+646OMOhwOwvUkqKyvRNC3m32cEl8vFmDFjWLlyJStXrqSkpIS///3vvP7664waNYqTTz6ZAw88kMWLF3PPPfdEBSDLsqL96lFHHcX333/Pl19+yfbt27nqqqu44IIL+MlPfsLNN9/MzTffjGmaPPjgg3GXaXLPOiKEiN6bwYMHs3DhQgzD4LLLLuOGG27gk08+4Y9//CPXXXcdjzzyCNXV1TGwunPk5+fz+9//Pnr8qfl4mJ2dTUpKCqWlpQB7ZXeLp8nuhg0bAKJHPQ4//HAGDBjAv//97+iit/kC6ZhjjuGiiy7ixx9/ZM2aNUB8zwUSFa/Xy/nnn88555zDX/7yF9555x0eeughfvjhB37zm9/w0ksvMXfuXA477DD+/e9/M336dIC48mKI9EmHH344ZWVl0bmjpmkIIVBVlYMOOojbb7+dQCAQFbHipR8Hu12ce+65/PrXv2bhwoW89tpr3HPPPaxevZo777yTP//5z7z11ltccMEFLF26lPvuuw+Q9yGWjBw5ku3bt/Ovf/2Lbdu28fbbb/P6669z9NFHc/HFF3PCCSdQVFTEDTfcQGFhYdxunnR2HRNPdQ76z7rFsixycnIYNmwYq1evZty4cdx///1YlsUbb7zBP//5Tx555BH++c9/4vP5uvVZ8XUHJS0QQuDxeJg8eTJfffUVL7zwAqFQqIXXzIgRI7j66qsZPnw4L7zwAj6fL+4aZnOOPvpojj32WP74xz9y3333MX/+fE4++WRuvvlmTj31VC655BJuv/12MjIyePrpp6mrq4vr8mRnZ3PcccfxwQcf8N///hewB7LIJHXw4MFceOGFKIrCO++8E5cdf3MOOeQQbrrpJmDvhUNycjKw9y5N5P/+NDGPlOWggw7C6XTy7rvvsmLFCo477jgmTJhASkoKBx10EFdffTVnnHEGf//73/niiy96xZbm9yHy95gxY0hLS+Odd95h165dAFHBxOVyccIJJ3D22WezdOlSvv76616xqyP2Rv4fOnQoBx54IG+//TYLFy4kPz+fww8/HF3XcbvdnHbaaVx//fVs2LCB+fPnR8vT15xzzjlcf/31QFMdiJQnNzeXQCBAKBRqtR3Hqv7/7Gc/Izs7m1tvvZVbb72VmTNncu6553Lfffdx9dVXc9ddd3HXXXexdevWqEipqmq0Xz3ssMOoq6vj/fffZ/v27QwaNAhd1wmHw+i6zkknncTUqVPZvHkzW7dujUkZ20JRFILBYPR+NE9vf/zxx2NZVlTgueSSS/j1r3/NZ599RkFBAZMnT47bTCZ1dXWUlZVRWFgIwP/8z/9EbW0+HiYnJ+NyuaLp0SPCSk1NDaFQKG4mu1999RXXXXcdTzzxRPSx5ORkfve731FUVMTLL78cvU/NPRXPPPNMxo8fz0cffQTEpk/or6xevTq6eTB06FAuvvhizjjjDObMmcPKlSt54IEHOOeccxgzZgzjxo3jzjvvZNKkSXz66ad8/vnnMba+9XHxwAMPZOTIkbzyyisUFBSgKEqLDI0HH3wwl1xyCatXr44udGNJxO7I7+TkZM477zyuuuoq/va3v7F69Wruv/9+Tj/9dAYPHsyQIUP41a9+xcUXX8ySJUv429/+FkvzowQCAaDl/CSR7kNX0DSNk046iYEDB/Lss89yxx13MG/ePE4//XTuuusufv7zn3Prrbdyyy23IITg2WefJRAIxGUflujrmP6yblFVlZSUFEaPHs3HH3+MYRgcfvjhPPzww5imydy5c/n0008ZO3YsXq+3W/chflfVkmgnceKJJ5KUlMSiRYvweDzRyW3k95AhQzj22GOprKxs07U/XhgxYgS33347jz/+ONdeey0nnngixx9/POnp6dHGeMghh3D88ceze/fu6I5mvJKamsr555+PYRj8v//3/6Lu080nsMcddxxjx46NTrTinUhnuecglZWVBdCijhUUFPDCCy9QXl4e1yJdZ4mU5dBDD2X06NH87W9/Y9WqVQwYMACHw0E4HAbsQfG8887D5XKxadOmXrElIjZEPGLA3lk76aST+OKLL/jPf/4TXThF3MCTkpI477zzEEKwfv36XrGrI/ZGbEpPT+f4449nxYoVfPfdd6SmpuLxeDBNE9M0cbvd0fPmmzdv3suDoS+IDKSRAJuROhD5zrOysjBNk+rq6uhjBQUF0clrrOr/xIkT+d3vfseNN97I//zP/3DIIYdwwgknkJGRERUDjz/+eIYPH86yZcsoKSkBmiY9Rx55JFdccQXff/89DQ0NFBQUALbHUygUQtd1zjvvPCzLiqvjN0uWLOHxxx/niiuu4LbbbuONN94AmgSQ0aNHU1VVxTfffAPYR+R+/PFHnE4nwWCQbdu2RcsaT/z3v//l4Ycf5pprruH2229n2rRpgF2uPSeqkd30SFsDu07OnTuXt99+Oy4m6aFQKHoPVqxY0UIAGjNmDNdffz3ffvstM2bMoKysDGjpCeByuaJjaTwunBKRBQsWcNNNN7F48eLoY4MHD+bSSy/lwgsvZOLEiRx88MHRtmRZFtnZ2fzyl79ECMHmzZtjZXoUn89HOBymvr4+Wi+GDRvGaaedxrZt2/jzn//Mzp07gaaNEafTycknn0xWVhYbN26MpfmA3X4ty2oRssHr9XLBBRdw4403cuyxxzJ27NjofRBCkJKSwtlnn01ycnJcHF395JNPeOGFF6IZosAWE6dMmZIw96GrjB8/noceeojbb7+dc845h6OOOopJkya1WM9MmjSJ4447joKCgrj1NO0P65j+sG6JjO/jxo2jqqoqus445JBDGDBgAMFgkIyMjOgx7+6Mh/FTakmbjB07lltvvZVQKERJSUl0sdE8Ur7T6cTtdieE++SgQYM4/vjjOffcc8nIyIhOJCKuoWCXzev14vF4Ymlqhzj88MO54447WLduHfPnz2fJkiVAywlsbm4uoVAoeg41EYnUt8hgEOlA//73v8d9vKl98f333zN//nymT5/Oq6++Gg2AB3bsgyFDhlBbW8vnn39OeXl5dGEMcMABB5CdnR1dVPckX3/9NU8++SQ33HADDz74IJ999lnU0+e3v/0tkyZN4k9/+hP/+te/qKysBGixWzN48GCKi4t73K7O2Lt7924ArrzySk477TRqa2v59ttvWbFiRYs27/V6yc7Oxu/398luzOrVq6NHUWDfA2nk+cgxsIKCAubNm8esWbOiZexN9rQXaBEj5eKLL+aGG25g4MCB0bobaavfffcdGzduxOfzsWXLFkzTbDGxu+CCC7j44osB+OMf/xj1You4Tq9ZswaPxxONBxJrFixYwCOPPEJhYSFjxoyhoqKCt956K+rZBODxeBg/fny0/k+bNo0VK1bw0EMPcf3117Nw4UL++te/RidY8cCCBQt47LHHcDqdXHjhhRx++OF8/fXXzJgxA9hbYHS5XHg8nujO+5YtW5g3bx6ffPIJEydOjAuxxOl0MnbsWFwuF6NGjeLrr7/mqaeeAux7dOKJJ3LdddexaNEinnrqKZYtWxZ9b0FBAbW1teTl5WEYRlyIWYnOBx98wOOPP47b7eb9999vIejm5eVx9tlnc9VVV5GamrrXewcOHIjb7e6RmBPd4csvv+Thhx/myiuv5JZbbuGdd96Jbr5cfPHFTJkyhY8++og333wz2v4jfV16ejp5eXmUlZXFdNd/2bJlzJo1i5tvvpl77703Gk8FICkpialTp3Lrrbe26p04YMAAkpKSqK2t7UOL9+bDDz/k0UcfJSUlJdrXRNroRRddxJlnnhn396G7HHDAAZxzzjn86le/YuDAgdEN6+ZHvLxeLw6HI67XZ/11HZNI65bI+D5hwgQqKytZvnw54XCY++67j23btvGrX/0Kj8fD3LlzWbhwYfc+qycMlvQekc7j+OOP54knnkBVVf72t78xa9YsKisrMQyD9evXs2TJEvLy8qKp0uOd5jEnvvrqq2i8IkVR2Lx5M0uXLmXYsGExd8tv7QhLa/9PmjSJadOmsXHjRubMmdPClbWgoIBNmzaRl5cXFyrzvsrUGs3vl2VZlJSUMHfuXFasWMFLL70UzXSQiCxYsIB77rmHr776iuXLl/P2229z7bXX8te//pWSkhIyMzO57bbbOPDAAykuLmbGjBlUVVVFF8Zr164lEAgwYsSIHrXr008/5eGHH6a6upqMjAxqamr4wx/+wHPPPcd3330H2Ava4447jldeeYU33niDwsLC6GC3efNmGhoa2kxP39O0Ze+zzz4btfeee+6Jxi6ZNm0aK1eujNq7YcMGduzYwYgRI3q9nXz++efcdNNNvPLKKx3ePY3YFA6HKSoqYu7cuaxcuZIXXnihzXS8PUVb9u6Zut0wDKqqqvjHP/5BcXExuq6zZcsWXnzxxegk7qWXXmLFihWYphl9zOv1cvHFF3P55ZcTCoX43//9X/76179SVlbGN998w7///W/S0tL2CjgcC1auXMncuXM59dRTefjhh3nkkUeYOXMm48aN4/PPP28RW+bQQw/l888/54477mDVqlX87ne/49hjj+XSSy/llltu4cILL4yKebFm8eLFzJo1iylTpnDrrbdy5ZVXcvfdd5OXl7eXgBuZyEaOTdbX17Njxw5eeOEFfvjhB1544YW4ymo2duxYRo8ezZVXXslPf/pTPvvsM6ZPn44QgoyMDKZMmcJ9993H1q1befjhh7nrrrt46qmneOKJJygpKeHSSy9F1/W4ELMSmQ8//JCnnnqKiy66iKuuuorq6moWLFiAZVnROjV06NBolilo8i4DojFcDj744L43vpHPP/+c3//+97hcLg499FAGDRrEnDlzePrpp/nPf/4DwB133MEZZ5zBf/7zH2bNmsX69euj48yWLVuoqKggPz8/ZvVp4cKFPPzwwyxfvhxFUSgu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q/uwL7744gseffRRjj32WM466yy2bdvGt99+y/Lly7nhhhuYMGFCm2uUc845h/Hjx7N7924yMjIYOHBgj88PO0p31pnxso7pytoyQjysW7pq//Dhw7nssstwOp3RDZDI/emRY5JC0uds3rxZ/OpXvxIXXnihOOecc8QVV1whli5dKgzD6PA1DMMQlmUJIUT0d6zoTnlibXtrrFixQpxzzjlixowZoqioSAghREVFhbj99tvFueeeK9avXy+EaN/2eLo/QvRMmYQQYtmyZWL79u29bm9fUV1dLc4++2zxhz/8IfqYaZrCNM3o/zNmzBAnn3yyWLZsmRCi7+7nnXfeKS655BJRWVkphBAiHA63+PyvvvpKTJw4UbzyyivRx2NZ1+Ld3ub3NBgMtnjutddeExMnThT33Xef2Lx5816vj/CnP/1JbNu2rVftjNBVe1uzuzVWrVolLrjgAnHFFVeIJUuWRB9fu3at2L17d3fN71Mi9ejGG28U99xzT4vndu7cGQuTukykLJ9++ql4//33RX19ffQ5v98v3nvvPTFx4kTxzjvvRF9fXV0dE1s7w/r168X5558vNmzYEH3srrvuEieddJKYPHmymD59egyt699YlhXtjyNE+olPPvlETJw4Ubz//vttvn/VqlWiqqqqN03sMI8//rg488wzxbp166KPNR9Hvv/+e3HqqaeKxx9/PPpc87EmlmNkOBwWq1atirbp5jaFw2Fx3nnniRkzZrRp58aNG0VNTU3fGbwHzef0Tz31lJg8ebI4//zzxXnnnSe+++47EQgEhBBC1NXVif/3//6fmDRp0l7jfTzch7awLEs0NDSI22+/Xdx///3RcTAYDIpVq1aJm2++WZx22mniL3/5i6itrY2xte3TH9aZPVEGIWK3bukp+3uDxIja1I8wDIPPPvuMrVu3ctVVV/H000/j8/mYNWtWNAhnWxQXF/OPf/wjujPWoypgF+lued599912X9PX+P1+PvnkEzIyMjjjjDOiR3kyMzP5zW9+Q21tLevWrQP2/t7j8f5Az5Qpkj3oyCOPjPnxwp7CsizS0tL4xS9+waeffsrbb78NNAXRFY3HSS6//HLy8/N5+eWXMQyjz+7nlVdeSU1NTTQzjq7r0bYihOCEE07grLPO4p133qG0tDQaYDBWxLu9ze9rxMMiYt+VV17J1VdfzTfffMMrr7zCpk2boq8vKiqKZnK77LLL+mznu6v2FhcXR1Nmt8f48eN5+OGH8fl8zJ49m++//56lS5fy6KOP8uijj0bbfCIQCerodrtbZCIpKCjg97//Pb/73e9iZVqnibSJk046ialTp0Z3mCM75RMnTgSIZilTFIW0tLTYGNsJxowZQ1JSEp9//jmGYXDfffexbt06br/9dn72s5/xwQcf8Pzzz8fazH6Joih77dpH+ouxY8cyYsQI/v73v++VsTLSrsaPHx/z5BsRW6699lq8Xi+zZ8+moaEh+rxo9Dg94ogj+OUvf8nChQtbBN6Nh/mYruuMHTs22qabx1zUdZ3MzEx8Pl+L56qqqqIZPkePHh0zLxKwvfgiY9Ddd9/NKaecQm1tLZdddhlHHHFENA5JcnIy559/PieccAJvv/02JSUlcXUf2iLSTkpLS0lLSyM7Ozs6/o4fP55HHnmEww8/nJdffpkvvviCYDAYfe+OHTv45JNPYmh9E/1hndkTZYjluqWn7kFvIcWfPiaSgeScc85hypQpjB49moceemiflcIwjOjk6JVXXomB5a3T38oDrceUEEK0GlMiQjyXB7pfpj/+8Y99bXKPs2PHDrZs2cKqVavw+/0t0ioec8wxvPnmm/zrX/8C7IlxZLKZlZXFkUceya5du6ipqelxuzZs2MB///tf3n33XbZs2RKd0A4fPpyLLrqIb7/9lkcffRQgGpslIkwdddRRGIbRJ6nGE9He1myNHI+K2Be5z80Flddee42tW7eyevVqHn30Uf7973/3SUrwnrL3/fff75B4M378eP7whz/g8/l49tlnefbZZ6mpqeE3v/lNXBxV7SgRN2qPx4Pf78cwjGhK18LCQq6++uoYW9g1IvfAsqzo39999x1utzsuYsh1lEidHTduHFu2bOHBBx+MZjA588wzue2225g6dWo0ULek7xg8eDCnnXYaBQUFbNy4EWgSmWMdTqA5EVuysrK4+uqr2bJlC9OmTSMYDEZFhYjdhx12GKqqtkhjHy+01q9GHnO73VRWVkYfLygo4KmnnuLdd9/tk/GnIzQXgH73u99x6aWXcvTRR7eIzRURTA499FCCwSAVFRWxMrfTGIaB0+mkrq4OsMsS6b/S09N58MEHOfTQQ3n55ZcpKCgA7Nh8b731Fo8++ijvvPNOrEyP0h/WZT1RhliuW+L9HiTO7K4fceyxx3LUUUcBdDgGg67rHHfccZSUlMRdDIP+VJ7OxJRoniFL13WOOeYYSktL46o80D/L1FkWLFgQzWAUCoU44IAD+NnPfsZVV13FiBEjuPTSS5k3bx7z588nHA5z3nnntaivkRSdkUlAT/HRRx8xe/bs6Nlkj8fDmDFjuPPOOxk6dChnnXUWVVVV0cnftGnTWthlGAYej6fPFuqJZG9rth500EHceeedLXaBIkKfqqpceeWVqKrKyy+/TG1tLdXV1ezYsYN77rmn1wPP9rS9+/qORWNsj4MPPpiLL76YmTNnkpyczOzZs+Mma2RncbvdBINBCgoKePnll2Oe2aMnaN5fb9q0iQULFjBkyJBup3rtSyL2T5w4kXvuuSeawSQS2yQ1NZW77rpLxvnpYyJ9wJlnnsmCBQt4/fXXW2SViUc0TeP444+nqqqKV155hXvuuYe7776b3NzcaJ9XV1eH1+uNeezIzuJwOKIiT0FBAS+++CLfffcd1157bVwFPo8IQJqm8atf/QpoqkuiWcyoiooK0tPTycjIiKG1ncPr9TJlyhTmzZvHf//7X0444QSgqXzJycnccsst3H///cyYMYN58+bh9XqZOHEi27dv5+ijj45xCWz6w7os0csQ1/b3zekySUfoSAyGPWM/xDP9qTztxZQoKSmJ/h0585wI9McytcbixYvFySefLJ577jmxcOFC8d1334kbb7xRTJ48Wdx0003C7/cLIexzwTfddJOYOHGimDt3rti1a5ewLEts2rRJ3HTTTeLmm28WDQ0NPWbXqlWrxJQpU8SsWbPEqlWrRG1trZg3b5648MILxZQpU8SiRYuEEEKUl5eLefPmiZNPPlnceOON4ssvvxSVlZVi5cqV4s477xRXXHFFn8RjSCR792Xrt99+u9d7msfEeOqpp8TEiRPF1KlTxZYtW3rV1ljbu3TpUvHrX/9anH766X0Wz6inicQveeqpp8R5550nfvvb34rJkyeLjRs3xtiynuPjjz8Wt912m5gyZUqf1MnewDAM8cknn4ivvvoq2u9Kep7OxucwTVPMnz9fnHjiieKjjz7qJas6x77KUFtbK9577z1xzjnniMsuu0z85S9/ESUlJWLx4sXid7/7nbj44otjHruso/ch0n898sgj4te//rXYunWruOOOO8TkyZPFpk2betPEfdKZutQ8lsn6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",
      "text/plain": [
       "<Figure size 1180x1180 with 25 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = ar2.corner_plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "861cbecd",
   "metadata": {},
   "source": [
    "We can return pandas DataFrames with equal tail or HPD results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "328201da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:04.221135Z",
     "iopub.status.busy": "2025-02-05T17:02:04.220876Z",
     "iopub.status.idle": "2025-02-05T17:02:04.245688Z",
     "shell.execute_reply": "2025-02-05T17:02:04.244953Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.950490</td>\n",
       "      <td>-0.116335</td>\n",
       "      <td>0.099538</td>\n",
       "      <td>0.107936</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.004043</td>\n",
       "      <td>-0.003447</td>\n",
       "      <td>0.003868</td>\n",
       "      <td>0.003658</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.380264</td>\n",
       "      <td>-4.696349</td>\n",
       "      <td>3.087496</td>\n",
       "      <td>3.891922</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.006435</td>\n",
       "      <td>-0.147829</td>\n",
       "      <td>0.101824</td>\n",
       "      <td>0.124826</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.996663</td>\n",
       "      <td>-0.087230</td>\n",
       "      <td>0.099877</td>\n",
       "      <td>0.093553</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.950490       -0.116335   \n",
       "fake.spectrum.main.composite.b_1       0.004043       -0.003447   \n",
       "fake.spectrum.main.composite.F_2      30.380264       -4.696349   \n",
       "fake.spectrum.main.composite.mu_2     25.006435       -0.147829   \n",
       "fake.spectrum.main.composite.sigma_2   0.996663       -0.087230   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.099538  0.107936   \n",
       "fake.spectrum.main.composite.b_1            0.003868  0.003658   \n",
       "fake.spectrum.main.composite.F_2            3.087496  3.891922   \n",
       "fake.spectrum.main.composite.mu_2           0.101824  0.124826   \n",
       "fake.spectrum.main.composite.sigma_2        0.099877  0.093553   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"equal tail\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "e0ac4026",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:04.247958Z",
     "iopub.status.busy": "2025-02-05T17:02:04.247715Z",
     "iopub.status.idle": "2025-02-05T17:02:04.275570Z",
     "shell.execute_reply": "2025-02-05T17:02:04.274934Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>negative_error</th>\n",
       "      <th>positive_error</th>\n",
       "      <th>error</th>\n",
       "      <th>unit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.a_1</th>\n",
       "      <td>1.950490</td>\n",
       "      <td>-0.106573</td>\n",
       "      <td>0.108119</td>\n",
       "      <td>0.107346</td>\n",
       "      <td>1 / (keV s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.b_1</th>\n",
       "      <td>0.004043</td>\n",
       "      <td>-0.003298</td>\n",
       "      <td>0.003985</td>\n",
       "      <td>0.003641</td>\n",
       "      <td>1 / (s cm2 keV2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.F_2</th>\n",
       "      <td>30.380264</td>\n",
       "      <td>-4.745592</td>\n",
       "      <td>3.006486</td>\n",
       "      <td>3.876039</td>\n",
       "      <td>1 / (s cm2)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.mu_2</th>\n",
       "      <td>25.006435</td>\n",
       "      <td>-0.147567</td>\n",
       "      <td>0.101897</td>\n",
       "      <td>0.124732</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fake.spectrum.main.composite.sigma_2</th>\n",
       "      <td>0.996663</td>\n",
       "      <td>-0.092340</td>\n",
       "      <td>0.094124</td>\n",
       "      <td>0.093232</td>\n",
       "      <td>keV</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          value  negative_error  \\\n",
       "fake.spectrum.main.composite.a_1       1.950490       -0.106573   \n",
       "fake.spectrum.main.composite.b_1       0.004043       -0.003298   \n",
       "fake.spectrum.main.composite.F_2      30.380264       -4.745592   \n",
       "fake.spectrum.main.composite.mu_2     25.006435       -0.147567   \n",
       "fake.spectrum.main.composite.sigma_2   0.996663       -0.092340   \n",
       "\n",
       "                                      positive_error     error  \\\n",
       "fake.spectrum.main.composite.a_1            0.108119  0.107346   \n",
       "fake.spectrum.main.composite.b_1            0.003985  0.003641   \n",
       "fake.spectrum.main.composite.F_2            3.006486  3.876039   \n",
       "fake.spectrum.main.composite.mu_2           0.101897  0.124732   \n",
       "fake.spectrum.main.composite.sigma_2        0.094124  0.093232   \n",
       "\n",
       "                                                  unit  \n",
       "fake.spectrum.main.composite.a_1       1 / (keV s cm2)  \n",
       "fake.spectrum.main.composite.b_1      1 / (s cm2 keV2)  \n",
       "fake.spectrum.main.composite.F_2           1 / (s cm2)  \n",
       "fake.spectrum.main.composite.mu_2                  keV  \n",
       "fake.spectrum.main.composite.sigma_2               keV  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ar2.get_data_frame(\"hpd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42838d24",
   "metadata": {},
   "source": [
    "Error propagation operates the same way. Internally, the process is the same as the MLE results, however, the samples are those of the posterior rather than the (assumed) covariance matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "79f79eaf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:04.277805Z",
     "iopub.status.busy": "2025-02-05T17:02:04.277409Z",
     "iopub.status.idle": "2025-02-05T17:02:04.289772Z",
     "shell.execute_reply": "2025-02-05T17:02:04.289248Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: (4 +/- 4) x 10^-3, hpd: (4.2 -3.4 +4) x 10^-3\n",
      "equal-tail: 1.94 +/- 0.11, hpd: 1.94 -0.10 +0.11\n",
      "equal-tail: 1.95 -0.11 +0.10, hpd: 1.95 -0.10 +0.11\n"
     ]
    }
   ],
   "source": [
    "p1 = ar2.get_variates(\"fake.spectrum.main.composite.b_1\")\n",
    "p2 = ar2.get_variates(\"fake.spectrum.main.composite.a_1\")\n",
    "\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "res = p1 + p2\n",
    "\n",
    "print(res)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff8a3f63",
   "metadata": {},
   "source": [
    "To demonstrate how the two objects (MLE and Bayes) are the same, we see that our plotting function written for the MLE result works on our Bayesian results seamlessly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b5cf0d30",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-05T17:02:04.291945Z",
     "iopub.status.busy": "2025-02-05T17:02:04.291570Z",
     "iopub.status.idle": "2025-02-05T17:02:08.342482Z",
     "shell.execute_reply": "2025-02-05T17:02:08.341744Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "equal-tail: 1.97 -0.11 +0.10, hpd: 1.97 -0.11 +0.10\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "36d3431a4b334522a614e57d2adb5814",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Propagating errors:   0%|          | 0/100 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1040x910 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "go(fitfun, ar2, model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "864777b4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.21"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "1254743b29504044a023f2f0297b69a2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2d9729acd71949a0ba2472632ec04532",
       "placeholder": "​",
       "style": "IPY_MODEL_fff316c4262a493eaff6d684c0ccfcab",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "15a0b58649de481281818cba8a70c5c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bff01b12ebc04dd9bc34a55ac986d03b",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d94bd320e0f94f98a53654f0722be26a",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "1b9ec5ccad1644e4842d80a870d5fddc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1f3eb700eff04dcdb54ab517c98287cd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "202ce0047bcc496aafc56f227c99dabb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "23e18b7e1622483da043f6946a341179": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2a74e1d17757412491fccc73dc2e0ebd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5dbfdb307f194c5988720331a4395860",
       "placeholder": "​",
       "style": "IPY_MODEL_3260c631698a435a8b31f3c415dd7130",
       "tabbable": null,
       "tooltip": null,
       "value": " 1/1 [00:04&lt;00:00,  4.67s/it]"
      }
     },
     "2d9729acd71949a0ba2472632ec04532": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3260c631698a435a8b31f3c415dd7130": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "36d3431a4b334522a614e57d2adb5814": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e621b8800af649169799f4b3400cde45",
        "IPY_MODEL_15a0b58649de481281818cba8a70c5c5",
        "IPY_MODEL_deab298c06a746b3b0e37433116f5500"
       ],
       "layout": "IPY_MODEL_1b9ec5ccad1644e4842d80a870d5fddc",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3e9ca2edb1f2444a81725504f6249c3d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_eabddf20ed264a6a91813fe7b56fd92b",
       "placeholder": "​",
       "style": "IPY_MODEL_9b51e4cf8aa542b58498b2bf92459593",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors: 100%"
      }
     },
     "3ed1578690684be8843843a7c88eb59e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5dbfdb307f194c5988720331a4395860": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "61f1c1d15f124a588404e52e14dffbb1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "643ec1e298644d3eb4836e10df863ca7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "65b6cff2144e4ad5b1c113cf804f5532": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_95af2bd8ee2d405ba84b1f24902c50c1",
       "placeholder": "​",
       "style": "IPY_MODEL_643ec1e298644d3eb4836e10df863ca7",
       "tabbable": null,
       "tooltip": null,
       "value": " 1000/1000 [00:03&lt;00:00, 257.41it/s]"
      }
     },
     "6909135a44fe42c7990c4d17f60698ec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6c26511a9fd34bb698dac63fd60746dc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": "2",
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6cc708c1a7f343fca84854031a094432": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "792f630ee36545abb67138f6df3b327f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": "inline-flex",
       "flex": null,
       "flex_flow": "row wrap",
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "100%"
      }
     },
     "7e6f97bf58d24504acdb7a38ceb96433": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fb9da1848a5d44508ad3cd9d9ee94d26",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e042b25a4c844291b52b6d9476a33b33",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "7f49c294c58549589e5d721a6de47ac4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bf78f33d3e7d4880bbd33ba7f650f918",
        "IPY_MODEL_ebe8dcb1e56241a2bf0ae02f81db37fe",
        "IPY_MODEL_2a74e1d17757412491fccc73dc2e0ebd"
       ],
       "layout": "IPY_MODEL_792f630ee36545abb67138f6df3b327f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "8363739cffae497db2eff25dfd73dc79": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "85389531209843c29b99c6efe952ac0e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "899c059ea0f84b4b9612037edf5dcb58": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "95af2bd8ee2d405ba84b1f24902c50c1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "95d8c568b73a415686187982849c7eb7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9648769055e740b4be6e53dc1311b65f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": "#440154",
       "description_width": ""
      }
     },
     "991d463dec9f4d189f577829247607e1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_95d8c568b73a415686187982849c7eb7",
       "placeholder": "​",
       "style": "IPY_MODEL_202ce0047bcc496aafc56f227c99dabb",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:00&lt;00:00, 243.32it/s]"
      }
     },
     "9b016f3ecd754901b2184cde0320db07": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c30c75b24034478cbe951e806f070ece",
       "placeholder": "​",
       "style": "IPY_MODEL_23e18b7e1622483da043f6946a341179",
       "tabbable": null,
       "tooltip": null,
       "value": "100%"
      }
     },
     "9b51e4cf8aa542b58498b2bf92459593": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9c10bb1bef8e4f3caad15e0a702b53e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a14ec9232fbb49c5806a6957e7745a0f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a569c714434c4bc38f9435bdd267448b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "aad1918c49c743f8af673182770c25bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a569c714434c4bc38f9435bdd267448b",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f874f1ba633c411a8e830ab79589a7d1",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "bf78f33d3e7d4880bbd33ba7f650f918": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_899c059ea0f84b4b9612037edf5dcb58",
       "placeholder": "​",
       "style": "IPY_MODEL_8363739cffae497db2eff25dfd73dc79",
       "tabbable": null,
       "tooltip": null,
       "value": "processing MLE analyses: 100%"
      }
     },
     "bfc631bbc5744570b2b45e9b4bced140": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bff01b12ebc04dd9bc34a55ac986d03b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c30c75b24034478cbe951e806f070ece": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c5228bf9b1284d58b56aa4bfdd0c8337": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9c10bb1bef8e4f3caad15e0a702b53e8",
       "max": 1000.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3ed1578690684be8843843a7c88eb59e",
       "tabbable": null,
       "tooltip": null,
       "value": 1000.0
      }
     },
     "c9eb89add4c04613a3e50f04e59ea654": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3e9ca2edb1f2444a81725504f6249c3d",
        "IPY_MODEL_aad1918c49c743f8af673182770c25bf",
        "IPY_MODEL_e74f37b555ce43f5b0259005956094f3"
       ],
       "layout": "IPY_MODEL_1f3eb700eff04dcdb54ab517c98287cd",
       "tabbable": null,
       "tooltip": null
      }
     },
     "d0481c0326694403aa043bf69e167926": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d94bd320e0f94f98a53654f0722be26a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "deab298c06a746b3b0e37433116f5500": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6cc708c1a7f343fca84854031a094432",
       "placeholder": "​",
       "style": "IPY_MODEL_6909135a44fe42c7990c4d17f60698ec",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:03&lt;00:00, 25.76it/s]"
      }
     },
     "deb71f2a1698443db8e4a80e80c7c790": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9b016f3ecd754901b2184cde0320db07",
        "IPY_MODEL_c5228bf9b1284d58b56aa4bfdd0c8337",
        "IPY_MODEL_65b6cff2144e4ad5b1c113cf804f5532"
       ],
       "layout": "IPY_MODEL_61f1c1d15f124a588404e52e14dffbb1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e042b25a4c844291b52b6d9476a33b33": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e621b8800af649169799f4b3400cde45": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f7925fb2ffbd430e8be2c8fe9710714e",
       "placeholder": "​",
       "style": "IPY_MODEL_a14ec9232fbb49c5806a6957e7745a0f",
       "tabbable": null,
       "tooltip": null,
       "value": "Propagating errors: 100%"
      }
     },
     "e74f37b555ce43f5b0259005956094f3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_85389531209843c29b99c6efe952ac0e",
       "placeholder": "​",
       "style": "IPY_MODEL_d0481c0326694403aa043bf69e167926",
       "tabbable": null,
       "tooltip": null,
       "value": " 100/100 [00:03&lt;00:00, 25.58it/s]"
      }
     },
     "eabddf20ed264a6a91813fe7b56fd92b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ead9d0a55c3e40db9cb20880af15b026": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1254743b29504044a023f2f0297b69a2",
        "IPY_MODEL_7e6f97bf58d24504acdb7a38ceb96433",
        "IPY_MODEL_991d463dec9f4d189f577829247607e1"
       ],
       "layout": "IPY_MODEL_bfc631bbc5744570b2b45e9b4bced140",
       "tabbable": null,
       "tooltip": null
      }
     },
     "ebe8dcb1e56241a2bf0ae02f81db37fe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6c26511a9fd34bb698dac63fd60746dc",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_9648769055e740b4be6e53dc1311b65f",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "f7925fb2ffbd430e8be2c8fe9710714e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f874f1ba633c411a8e830ab79589a7d1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fb9da1848a5d44508ad3cd9d9ee94d26": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fff316c4262a493eaff6d684c0ccfcab": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
